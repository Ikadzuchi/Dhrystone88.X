

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun May 06 01:57:09 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 1.44
    41                           ; Generated 14/09/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F88 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  008F                     	;# 
   162  0090                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009B                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  0105                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180                           
   181                           	psect	stringtext
   182  0800                     __pstringtext:	
   183  0800                     stringtab:	
   184  0800                     __stringtab:	
   185                           
   186                           ;	String table - string pointers are 2 bytes each
   187  0800  1BFF               	btfsc	btemp+1,7
   188  0801  280A               	ljmp	stringcode
   189  0802  1383               	bcf	3,7
   190  0803  187F               	btfsc	btemp+1,0
   191  0804  1783               	bsf	3,7
   192  0805  0800               	movf	0,w
   193  0806  0A84               	incf	4,f
   194  0807  1903               	skipnz
   195  0808  0AFF               	incf	btemp+1,f
   196  0809  0008               	return
   197  080A                     stringcode:	
   198  080A  087F               	movf	btemp+1,w
   199  080B  397F               	andlw	127
   200  080C  008A               	movwf	10
   201  080D  0804               	movf	4,w
   202  080E  0A84               	incf	4,f
   203  080F  1903               	skipnz
   204  0810  0AFF               	incf	btemp+1,f
   205  0811  0082               	movwf	2
   206  0812                     __stringbase:	
   207  0812                     __end_of__stringtab:	
   208  0812                     _dpowers:	
   209  0812  3401               	retlw	1
   210  0813  3400               	retlw	0
   211  0814  340A               	retlw	10
   212  0815  3400               	retlw	0
   213  0816  3464               	retlw	100
   214  0817  3400               	retlw	0
   215  0818  34E8               	retlw	232
   216  0819  3403               	retlw	3
   217  081A  3410               	retlw	16
   218  081B  3427               	retlw	39
   219  081C                     __end_of_dpowers:	
   220  081C                     STR_4:	
   221  081C  3444               	retlw	68	;'D'
   222  081D  3448               	retlw	72	;'H'
   223  081E  3452               	retlw	82	;'R'
   224  081F  3459               	retlw	89	;'Y'
   225  0820  3453               	retlw	83	;'S'
   226  0821  3454               	retlw	84	;'T'
   227  0822  344F               	retlw	79	;'O'
   228  0823  344E               	retlw	78	;'N'
   229  0824  3445               	retlw	69	;'E'
   230  0825  3420               	retlw	32	;' '
   231  0826  3450               	retlw	80	;'P'
   232  0827  3452               	retlw	82	;'R'
   233  0828  344F               	retlw	79	;'O'
   234  0829  3447               	retlw	71	;'G'
   235  082A  3452               	retlw	82	;'R'
   236  082B  3441               	retlw	65	;'A'
   237  082C  344D               	retlw	77	;'M'
   238  082D  342C               	retlw	44	;','
   239  082E  3420               	retlw	32	;' '
   240  082F  3432               	retlw	50	;'2'
   241  0830  3427               	retlw	39	;'''
   242  0831  344E               	retlw	78	;'N'
   243  0832  3444               	retlw	68	;'D'
   244  0833  3420               	retlw	32	;' '
   245  0834  3453               	retlw	83	;'S'
   246  0835  3454               	retlw	84	;'T'
   247  0836  3452               	retlw	82	;'R'
   248  0837  3449               	retlw	73	;'I'
   249  0838  344E               	retlw	78	;'N'
   250  0839  3447               	retlw	71	;'G'
   251  083A  3400               	retlw	0
   252  083B                     STR_5:	
   253  083B  3444               	retlw	68	;'D'
   254  083C  3448               	retlw	72	;'H'
   255  083D  3452               	retlw	82	;'R'
   256  083E  3459               	retlw	89	;'Y'
   257  083F  3453               	retlw	83	;'S'
   258  0840  3454               	retlw	84	;'T'
   259  0841  344F               	retlw	79	;'O'
   260  0842  344E               	retlw	78	;'N'
   261  0843  3445               	retlw	69	;'E'
   262  0844  3420               	retlw	32	;' '
   263  0845  3450               	retlw	80	;'P'
   264  0846  3452               	retlw	82	;'R'
   265  0847  344F               	retlw	79	;'O'
   266  0848  3447               	retlw	71	;'G'
   267  0849  3452               	retlw	82	;'R'
   268  084A  3441               	retlw	65	;'A'
   269  084B  344D               	retlw	77	;'M'
   270  084C  342C               	retlw	44	;','
   271  084D  3420               	retlw	32	;' '
   272  084E  3433               	retlw	51	;'3'
   273  084F  3427               	retlw	39	;'''
   274  0850  3452               	retlw	82	;'R'
   275  0851  3444               	retlw	68	;'D'
   276  0852  3420               	retlw	32	;' '
   277  0853  3453               	retlw	83	;'S'
   278  0854  3454               	retlw	84	;'T'
   279  0855  3452               	retlw	82	;'R'
   280  0856  3449               	retlw	73	;'I'
   281  0857  344E               	retlw	78	;'N'
   282  0858  3447               	retlw	71	;'G'
   283  0859  3400               	retlw	0
   284  085A                     STR_1:	
   285  085A  3444               	retlw	68	;'D'
   286  085B  3448               	retlw	72	;'H'
   287  085C  3452               	retlw	82	;'R'
   288  085D  3459               	retlw	89	;'Y'
   289  085E  3453               	retlw	83	;'S'
   290  085F  3454               	retlw	84	;'T'
   291  0860  344F               	retlw	79	;'O'
   292  0861  344E               	retlw	78	;'N'
   293  0862  3445               	retlw	69	;'E'
   294  0863  3420               	retlw	32	;' '
   295  0864  3450               	retlw	80	;'P'
   296  0865  3452               	retlw	82	;'R'
   297  0866  344F               	retlw	79	;'O'
   298  0867  3447               	retlw	71	;'G'
   299  0868  3452               	retlw	82	;'R'
   300  0869  3441               	retlw	65	;'A'
   301  086A  344D               	retlw	77	;'M'
   302  086B  342C               	retlw	44	;','
   303  086C  3420               	retlw	32	;' '
   304  086D  3453               	retlw	83	;'S'
   305  086E  344F               	retlw	79	;'O'
   306  086F  344D               	retlw	77	;'M'
   307  0870  3445               	retlw	69	;'E'
   308  0871  3420               	retlw	32	;' '
   309  0872  3453               	retlw	83	;'S'
   310  0873  3454               	retlw	84	;'T'
   311  0874  3452               	retlw	82	;'R'
   312  0875  3449               	retlw	73	;'I'
   313  0876  344E               	retlw	78	;'N'
   314  0877  3447               	retlw	71	;'G'
   315  0878  3400               	retlw	0
   316  0879                     STR_2:	
   317  0879  3444               	retlw	68	;'D'
   318  087A  3448               	retlw	72	;'H'
   319  087B  3452               	retlw	82	;'R'
   320  087C  3459               	retlw	89	;'Y'
   321  087D  3453               	retlw	83	;'S'
   322  087E  3454               	retlw	84	;'T'
   323  087F  344F               	retlw	79	;'O'
   324  0880  344E               	retlw	78	;'N'
   325  0881  3445               	retlw	69	;'E'
   326  0882  3420               	retlw	32	;' '
   327  0883  3450               	retlw	80	;'P'
   328  0884  3452               	retlw	82	;'R'
   329  0885  344F               	retlw	79	;'O'
   330  0886  3447               	retlw	71	;'G'
   331  0887  3452               	retlw	82	;'R'
   332  0888  3441               	retlw	65	;'A'
   333  0889  344D               	retlw	77	;'M'
   334  088A  342C               	retlw	44	;','
   335  088B  3420               	retlw	32	;' '
   336  088C  3431               	retlw	49	;'1'
   337  088D  3427               	retlw	39	;'''
   338  088E  3453               	retlw	83	;'S'
   339  088F  3454               	retlw	84	;'T'
   340  0890  3420               	retlw	32	;' '
   341  0891  3453               	retlw	83	;'S'
   342  0892  3454               	retlw	84	;'T'
   343  0893  3452               	retlw	82	;'R'
   344  0894  3449               	retlw	73	;'I'
   345  0895  344E               	retlw	78	;'N'
   346  0896  3447               	retlw	71	;'G'
   347  0897  3400               	retlw	0
   348  0898                     STR_30:	
   349  0898  3428               	retlw	40	;'('
   350  0899  346E               	retlw	110	;'n'
   351  089A  3475               	retlw	117	;'u'
   352  089B  346C               	retlw	108	;'l'
   353  089C  346C               	retlw	108	;'l'
   354  089D  3429               	retlw	41	;')'
   355  089E  3400               	retlw	0
   356  089F                     STR_9:	
   357  089F  3463               	retlw	99	;'c'
   358  08A0  343A               	retlw	58	;':'
   359  08A1  3425               	retlw	37	;'%'
   360  08A2  3463               	retlw	99	;'c'
   361  08A3  340A               	retlw	10
   362  08A4  3400               	retlw	0
   363  08A5                     STR_10:	
   364  08A5  3464               	retlw	100	;'d'
   365  08A6  343A               	retlw	58	;':'
   366  08A7  3425               	retlw	37	;'%'
   367  08A8  3463               	retlw	99	;'c'
   368  08A9  340A               	retlw	10
   369  08AA  3400               	retlw	0
   370  08AB                     STR_7:	
   371  08AB  3461               	retlw	97	;'a'
   372  08AC  343A               	retlw	58	;':'
   373  08AD  3425               	retlw	37	;'%'
   374  08AE  3464               	retlw	100	;'d'
   375  08AF  340A               	retlw	10
   376  08B0  3400               	retlw	0
   377  08B1                     STR_8:	
   378  08B1  3462               	retlw	98	;'b'
   379  08B2  343A               	retlw	58	;':'
   380  08B3  3425               	retlw	37	;'%'
   381  08B4  3464               	retlw	100	;'d'
   382  08B5  340A               	retlw	10
   383  08B6  3400               	retlw	0
   384  08B7                     STR_11:	
   385  08B7  3465               	retlw	101	;'e'
   386  08B8  343A               	retlw	58	;':'
   387  08B9  3425               	retlw	37	;'%'
   388  08BA  3464               	retlw	100	;'d'
   389  08BB  340A               	retlw	10
   390  08BC  3400               	retlw	0
   391  08BD                     STR_12:	
   392  08BD  3466               	retlw	102	;'f'
   393  08BE  343A               	retlw	58	;':'
   394  08BF  3425               	retlw	37	;'%'
   395  08C0  3464               	retlw	100	;'d'
   396  08C1  340A               	retlw	10
   397  08C2  3400               	retlw	0
   398  08C3                     STR_13:	
   399  08C3  3467               	retlw	103	;'g'
   400  08C4  343A               	retlw	58	;':'
   401  08C5  3425               	retlw	37	;'%'
   402  08C6  3464               	retlw	100	;'d'
   403  08C7  340A               	retlw	10
   404  08C8  3400               	retlw	0
   405  08C9                     STR_14:	
   406  08C9  3468               	retlw	104	;'h'
   407  08CA  343A               	retlw	58	;':'
   408  08CB  3425               	retlw	37	;'%'
   409  08CC  3464               	retlw	100	;'d'
   410  08CD  340A               	retlw	10
   411  08CE  3400               	retlw	0
   412  08CF                     STR_15:	
   413  08CF  3469               	retlw	105	;'i'
   414  08D0  343A               	retlw	58	;':'
   415  08D1  3425               	retlw	37	;'%'
   416  08D2  3464               	retlw	100	;'d'
   417  08D3  340A               	retlw	10
   418  08D4  3400               	retlw	0
   419  08D5                     STR_16:	
   420  08D5  346A               	retlw	106	;'j'
   421  08D6  343A               	retlw	58	;':'
   422  08D7  3425               	retlw	37	;'%'
   423  08D8  3464               	retlw	100	;'d'
   424  08D9  340A               	retlw	10
   425  08DA  3400               	retlw	0
   426  08DB                     STR_18:	
   427  08DB  346C               	retlw	108	;'l'
   428  08DC  343A               	retlw	58	;':'
   429  08DD  3425               	retlw	37	;'%'
   430  08DE  3464               	retlw	100	;'d'
   431  08DF  340A               	retlw	10
   432  08E0  3400               	retlw	0
   433  08E1                     STR_19:	
   434  08E1  346D               	retlw	109	;'m'
   435  08E2  343A               	retlw	58	;':'
   436  08E3  3425               	retlw	37	;'%'
   437  08E4  3464               	retlw	100	;'d'
   438  08E5  340A               	retlw	10
   439  08E6  3400               	retlw	0
   440  08E7                     STR_20:	
   441  08E7  346E               	retlw	110	;'n'
   442  08E8  343A               	retlw	58	;':'
   443  08E9  3425               	retlw	37	;'%'
   444  08EA  3464               	retlw	100	;'d'
   445  08EB  340A               	retlw	10
   446  08EC  3400               	retlw	0
   447  08ED                     STR_21:	
   448  08ED  346F               	retlw	111	;'o'
   449  08EE  343A               	retlw	58	;':'
   450  08EF  3425               	retlw	37	;'%'
   451  08F0  3464               	retlw	100	;'d'
   452  08F1  340A               	retlw	10
   453  08F2  3400               	retlw	0
   454  08F3                     STR_23:	
   455  08F3  3471               	retlw	113	;'q'
   456  08F4  343A               	retlw	58	;':'
   457  08F5  3425               	retlw	37	;'%'
   458  08F6  3464               	retlw	100	;'d'
   459  08F7  340A               	retlw	10
   460  08F8  3400               	retlw	0
   461  08F9                     STR_24:	
   462  08F9  3472               	retlw	114	;'r'
   463  08FA  343A               	retlw	58	;':'
   464  08FB  3425               	retlw	37	;'%'
   465  08FC  3464               	retlw	100	;'d'
   466  08FD  340A               	retlw	10
   467  08FE  3400               	retlw	0
   468  08FF                     STR_25:	
   469  08FF  3473               	retlw	115	;'s'
   470  0900  343A               	retlw	58	;':'
   471  0901  3425               	retlw	37	;'%'
   472  0902  3464               	retlw	100	;'d'
   473  0903  340A               	retlw	10
   474  0904  3400               	retlw	0
   475  0905                     STR_26:	
   476  0905  3474               	retlw	116	;'t'
   477  0906  343A               	retlw	58	;':'
   478  0907  3425               	retlw	37	;'%'
   479  0908  3464               	retlw	100	;'d'
   480  0909  340A               	retlw	10
   481  090A  3400               	retlw	0
   482  090B                     STR_17:	
   483  090B  346B               	retlw	107	;'k'
   484  090C  343A               	retlw	58	;':'
   485  090D  3425               	retlw	37	;'%'
   486  090E  3473               	retlw	115	;'s'
   487  090F  340A               	retlw	10
   488  0910  3400               	retlw	0
   489  0911                     STR_22:	
   490  0911  3470               	retlw	112	;'p'
   491  0912  343A               	retlw	58	;':'
   492  0913  3425               	retlw	37	;'%'
   493  0914  3473               	retlw	115	;'s'
   494  0915  340A               	retlw	10
   495  0916  3400               	retlw	0
   496  0917                     STR_27:	
   497  0917  3475               	retlw	117	;'u'
   498  0918  343A               	retlw	58	;':'
   499  0919  3425               	retlw	37	;'%'
   500  091A  3473               	retlw	115	;'s'
   501  091B  340A               	retlw	10
   502  091C  3400               	retlw	0
   503  091D                     STR_28:	
   504  091D  3476               	retlw	118	;'v'
   505  091E  343A               	retlw	58	;':'
   506  091F  3425               	retlw	37	;'%'
   507  0920  3473               	retlw	115	;'s'
   508  0921  340A               	retlw	10
   509  0922  3400               	retlw	0
   510  0923                     STR_6:	
   511  0923  345D               	retlw	93	;']'
   512  0924  340A               	retlw	10
   513  0925  3400               	retlw	0
   514  0926                     STR_3:	
   515  0926  345B               	retlw	91	;'['
   516  0927  3400               	retlw	0
   517  0924                     
   518                           ; #config settings
   519  0000                     
   520                           	psect	nvBANK1
   521  00EA                     __pnvBANK1:	
   522  00EA                     _Next_Ptr_Glob:	
   523  00EA                     	ds	1
   524  00EB                     _Ptr_Glob:	
   525  00EB                     	ds	2
   526                           
   527                           	psect	cinit
   528  07E6                     start_initialization:	
   529  07E6                     __initialization:	
   530                           
   531                           ; Clear objects allocated to BANK0
   532  07E6  1383               	bcf	3,7	;select IRP bank0
   533  07E7  3058               	movlw	low __pbssBANK0
   534  07E8  0084               	movwf	4
   535  07E9  305E               	movlw	low (__pbssBANK0+6)
   536  07EA  158A  25DC  118A   	fcall	clear_ram0
   537                           
   538                           ; Clear objects allocated to BANK1
   539  07ED  1683               	bsf	3,5	;RP0=1, select bank1
   540  07EE  1303               	bcf	3,6	;RP1=0, select bank1
   541  07EF  01ED               	clrf	__pbssBANK1& (0+127)
   542  07F0  01EE               	clrf	(__pbssBANK1+1)& (0+127)
   543                           
   544                           ; Clear objects allocated to BANK3
   545  07F1  1783               	bsf	3,7	;select IRP bank2
   546  07F2  3090               	movlw	low __pbssBANK3
   547  07F3  0084               	movwf	4
   548  07F4  30C2               	movlw	low (__pbssBANK3+50)
   549  07F5  158A  25DC  118A   	fcall	clear_ram0
   550                           
   551                           ; Clear objects allocated to BANK2
   552  07F8  3010               	movlw	low __pbssBANK2
   553  07F9  0084               	movwf	4
   554  07FA  3064               	movlw	low (__pbssBANK2+84)
   555  07FB  158A  25DC         	fcall	clear_ram0
   556  07FD                     end_of_initialization:	
   557                           ;End of C runtime variable initialization code
   558                           
   559  07FD                     __end_of__initialization:	
   560  07FD  0183               	clrf	3
   561  07FE  118A  2BE2         	ljmp	_main	;jump to C main() function
   562                           
   563                           	psect	bssBANK0
   564  0058                     __pbssBANK0:	
   565  0058                     _Reg:	
   566  0058                     	ds	2
   567  005A                     _Bool_Glob:	
   568  005A                     	ds	2
   569  005C                     _Int_Glob:	
   570  005C                     	ds	2
   571                           
   572                           	psect	bssBANK1
   573  00ED                     __pbssBANK1:	
   574  00ED                     _Ch_2_Glob:	
   575  00ED                     	ds	1
   576  00EE                     _Ch_1_Glob:	
   577  00EE                     	ds	1
   578                           
   579                           	psect	bssBANK3
   580  0190                     __pbssBANK3:	
   581  0190                     _Arr_1_Glob:	
   582  0190                     	ds	50
   583                           
   584                           	psect	bssBANK2
   585  0110                     __pbssBANK2:	
   586  0110                     _Arr_2_Glob:	
   587  0110                     	ds	84
   588                           
   589                           	psect	clrtext
   590  0DDC                     clear_ram0:	
   591                           ;	Called with FSR containing the base address, and
   592                           ;	W with the last address+1
   593                           
   594  0DDC  0064               	clrwdt	;clear the watchdog before getting into this loop
   595  0DDD                     clrloop0:	
   596  0DDD  0180               	clrf	0	;clear RAM location pointed to by FSR
   597  0DDE  0A84               	incf	4,f	;increment pointer
   598  0DDF  0604               	xorwf	4,w	;XOR with final address
   599  0DE0  1903               	btfsc	3,2	;have we reached the end yet?
   600  0DE1  3400               	retlw	0	;all done for this memory range, return
   601  0DE2  0604               	xorwf	4,w	;XOR again to restore value
   602  0DE3  2DDD               	goto	clrloop0	;do the next byte
   603                           
   604                           	psect	cstackBANK3
   605  01C2                     __pcstackBANK3:	
   606  01C2                     main@temp1:	
   607                           
   608                           ; 37 bytes @ 0x0
   609  01C2                     	ds	37
   610                           
   611                           	psect	cstackBANK1
   612  00A0                     __pcstackBANK1:	
   613  00A0                     main@Str_2_Loc:	
   614                           
   615                           ; 31 bytes @ 0x0
   616  00A0                     	ds	31
   617  00BF                     main@Int_3_Loc:	
   618                           
   619                           ; 2 bytes @ 0x1F
   620  00BF                     	ds	2
   621  00C1                     main@temp2:	
   622                           
   623                           ; 37 bytes @ 0x21
   624  00C1                     	ds	37
   625  00E6                     main@Int_2_Loc:	
   626                           
   627                           ; 2 bytes @ 0x46
   628  00E6                     	ds	2
   629  00E8                     main@Int_1_Loc:	
   630                           
   631                           ; 2 bytes @ 0x48
   632  00E8                     	ds	2
   633                           
   634                           	psect	cstackCOMMON
   635  0070                     __pcstackCOMMON:	
   636  0070                     ??_Proc_5:	
   637  0070                     ??_Proc_4:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ??_Proc_2:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_Func_1:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_putch:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ??_putch:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?___bmul:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_Func_3:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_strcmp:	
   659                           ; 2 bytes @ 0x0
   660                           
   661  0070                     ?_strcpy:	
   662                           ; 2 bytes @ 0x0
   663                           
   664  0070                     ?_Proc_5:	
   665                           ; 2 bytes @ 0x0
   666                           
   667  0070                     ?_Proc_4:	
   668                           ; 2 bytes @ 0x0
   669                           
   670  0070                     ?_Proc_2:	
   671                           ; 2 bytes @ 0x0
   672                           
   673  0070                     ?_memcpy:	
   674                           ; 2 bytes @ 0x0
   675                           
   676  0070                     ?_Proc_7:	
   677                           ; 2 bytes @ 0x0
   678                           
   679  0070                     ?_main:	
   680                           ; 2 bytes @ 0x0
   681                           
   682  0070                     ?___wmul:	
   683                           ; 2 bytes @ 0x0
   684                           
   685  0070                     ?___awdiv:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0070                     ?___lwdiv:	
   689                           ; 2 bytes @ 0x0
   690                           
   691  0070                     Func_1@Ch_2_Par_Val:	
   692                           ; 2 bytes @ 0x0
   693                           
   694  0070                     ___bmul@multiplicand:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     strcmp@s2:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     Proc_7@Int_1_Par_Val:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ___wmul@multiplier:	
   704                           ; 2 bytes @ 0x0
   705                           
   706  0070                     ___awdiv@divisor:	
   707                           ; 2 bytes @ 0x0
   708                           
   709  0070                     ___lwdiv@divisor:	
   710                           ; 2 bytes @ 0x0
   711                           
   712  0070                     memcpy@d1:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     strcpy@to:	
   716                           ; 2 bytes @ 0x0
   717                           
   718                           
   719                           ; 2 bytes @ 0x0
   720  0070                     	ds	1
   721  0071                     ??_Func_1:	
   722  0071                     ??___bmul:	
   723                           ; 1 bytes @ 0x1
   724                           
   725                           
   726                           ; 1 bytes @ 0x1
   727  0071                     	ds	1
   728  0072                     ??_Func_3:	
   729  0072                     ??_strcmp:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  0072                     Func_1@Ch_1_Par_Val:	
   733                           ; 1 bytes @ 0x2
   734                           
   735  0072                     putch@c:	
   736                           ; 1 bytes @ 0x2
   737                           
   738  0072                     ___bmul@product:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0072                     Proc_7@Int_2_Par_Val:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0072                     Proc_4@Bool_Loc:	
   745                           ; 2 bytes @ 0x2
   746                           
   747  0072                     ___wmul@multiplicand:	
   748                           ; 2 bytes @ 0x2
   749                           
   750  0072                     ___awdiv@dividend:	
   751                           ; 2 bytes @ 0x2
   752                           
   753  0072                     ___lwdiv@dividend:	
   754                           ; 2 bytes @ 0x2
   755                           
   756  0072                     memcpy@s1:	
   757                           ; 2 bytes @ 0x2
   758                           
   759  0072                     strcpy@from:	
   760                           ; 2 bytes @ 0x2
   761                           
   762                           
   763                           ; 2 bytes @ 0x2
   764  0072                     	ds	1
   765  0073                     Func_1@Ch_2_Loc:	
   766  0073                     Func_3@Enum_Par_Val:	
   767                           ; 1 bytes @ 0x3
   768                           
   769  0073                     ___bmul@multiplier:	
   770                           ; 1 bytes @ 0x3
   771                           
   772  0073                     putch@PORTB:	
   773                           ; 1 bytes @ 0x3
   774                           
   775                           
   776                           ; 2 bytes @ 0x3
   777  0073                     	ds	1
   778  0074                     ??_strcpy:	
   779  0074                     ??___wmul:	
   780                           ; 1 bytes @ 0x4
   781                           
   782  0074                     ??___awdiv:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0074                     ??___lwdiv:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     ?_Proc_8:	
   789                           ; 1 bytes @ 0x4
   790                           
   791  0074                     Proc_8@Arr_2_Par_Ref:	
   792                           ; 2 bytes @ 0x4
   793                           
   794  0074                     Func_1@Ch_1_Loc:	
   795                           ; 1 bytes @ 0x4
   796                           
   797  0074                     Func_3@Enum_Loc:	
   798                           ; 1 bytes @ 0x4
   799                           
   800  0074                     Proc_2@Enum_Loc:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0074                     strcmp@r:	
   804                           ; 1 bytes @ 0x4
   805                           
   806  0074                     Proc_7@Int_Par_Ref:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0074                     ___wmul@product:	
   810                           ; 2 bytes @ 0x4
   811                           
   812  0074                     memcpy@n:	
   813                           ; 2 bytes @ 0x4
   814                           
   815                           
   816                           ; 2 bytes @ 0x4
   817  0074                     	ds	1
   818  0075                     ?_Proc_6:	
   819  0075                     ___awdiv@counter:	
   820                           ; 2 bytes @ 0x5
   821                           
   822  0075                     ___lwdiv@counter:	
   823                           ; 1 bytes @ 0x5
   824                           
   825  0075                     strcmp@s1:	
   826                           ; 1 bytes @ 0x5
   827                           
   828  0075                     Proc_6@Enum_Ref_Par:	
   829                           ; 1 bytes @ 0x5
   830                           
   831  0075                     Proc_8@Int_1_Par_Val:	
   832                           ; 2 bytes @ 0x5
   833                           
   834  0075                     Proc_2@Int_Loc:	
   835                           ; 2 bytes @ 0x5
   836                           
   837  0075                     strcpy@cp:	
   838                           ; 2 bytes @ 0x5
   839                           
   840                           
   841                           ; 2 bytes @ 0x5
   842  0075                     	ds	1
   843  0076                     ??_memcpy:	
   844  0076                     ??_Proc_7:	
   845                           ; 1 bytes @ 0x6
   846                           
   847  0076                     ?_Func_2:	
   848                           ; 1 bytes @ 0x6
   849                           
   850  0076                     Func_2@Str_2_Par_Ref:	
   851                           ; 2 bytes @ 0x6
   852                           
   853  0076                     ___awdiv@sign:	
   854                           ; 1 bytes @ 0x6
   855                           
   856  0076                     ___lwdiv@quotient:	
   857                           ; 1 bytes @ 0x6
   858                           
   859                           
   860                           ; 2 bytes @ 0x6
   861  0076                     	ds	1
   862  0077                     ??_Proc_6:	
   863  0077                     Proc_2@Int_Par_Ref:	
   864                           ; 1 bytes @ 0x7
   865                           
   866  0077                     memcpy@tmp:	
   867                           ; 1 bytes @ 0x7
   868                           
   869  0077                     Proc_8@Int_2_Par_Val:	
   870                           ; 1 bytes @ 0x7
   871                           
   872  0077                     ___awdiv@quotient:	
   873                           ; 2 bytes @ 0x7
   874                           
   875                           
   876                           ; 2 bytes @ 0x7
   877  0077                     	ds	1
   878  0078                     ??_Func_2:	
   879  0078                     ?___lwmod:	
   880                           ; 1 bytes @ 0x8
   881                           
   882  0078                     Proc_6@Enum_Val_Par:	
   883                           ; 2 bytes @ 0x8
   884                           
   885  0078                     Proc_7@Int_Loc:	
   886                           ; 1 bytes @ 0x8
   887                           
   888  0078                     ___lwmod@divisor:	
   889                           ; 2 bytes @ 0x8
   890                           
   891  0078                     memcpy@d:	
   892                           ; 2 bytes @ 0x8
   893                           
   894                           
   895                           ; 2 bytes @ 0x8
   896  0078                     	ds	1
   897  0079                     Proc_8@Int_Index:	
   898                           
   899                           ; 2 bytes @ 0x9
   900  0079                     	ds	1
   901  007A                     ?_Proc_3:	
   902  007A                     Proc_3@Ptr_Ref_Par:	
   903                           ; 2 bytes @ 0xA
   904                           
   905  007A                     ___lwmod@dividend:	
   906                           ; 2 bytes @ 0xA
   907                           
   908  007A                     memcpy@s:	
   909                           ; 2 bytes @ 0xA
   910                           
   911                           
   912                           ; 2 bytes @ 0xA
   913  007A                     	ds	1
   914  007B                     Proc_8@Arr_1_Par_Ref:	
   915                           
   916                           ; 1 bytes @ 0xB
   917  007B                     	ds	1
   918  007C                     ??_Proc_3:	
   919  007C                     ??___lwmod:	
   920                           ; 1 bytes @ 0xC
   921                           
   922  007C                     Proc_8@Int_Loc:	
   923                           ; 1 bytes @ 0xC
   924                           
   925                           
   926                           ; 2 bytes @ 0xC
   927  007C                     	ds	1
   928  007D                     ___lwmod@counter:	
   929                           
   930                           ; 1 bytes @ 0xD
   931  007D                     	ds	1
   932                           
   933                           	psect	cstackBANK0
   934  0020                     __pcstackBANK0:	
   935  0020                     ??_Proc_8:	
   936  0020                     ?_printf:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0020                     ?_Proc_1:	
   940                           ; 2 bytes @ 0x0
   941                           
   942  0020                     Func_2@Str_1_Par_Ref:	
   943                           ; 2 bytes @ 0x0
   944                           
   945  0020                     Proc_1@Ptr_Val_Par:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0020                     printf@f:	
   949                           ; 2 bytes @ 0x0
   950                           
   951                           
   952                           ; 2 bytes @ 0x0
   953  0020                     	ds	1
   954  0021                     Func_2@Ch_Loc:	
   955                           
   956                           ; 1 bytes @ 0x1
   957  0021                     	ds	1
   958  0022                     ??_Proc_1:	
   959  0022                     Func_2@Int_Loc:	
   960                           ; 1 bytes @ 0x2
   961                           
   962                           
   963                           ; 2 bytes @ 0x2
   964  0022                     	ds	2
   965  0024                     ??_printf:	
   966                           
   967                           ; 1 bytes @ 0x4
   968  0024                     	ds	3
   969  0027                     printf@flag:	
   970                           
   971                           ; 1 bytes @ 0x7
   972  0027                     	ds	1
   973  0028                     printf@prec:	
   974  0028                     Proc_1@Next_Record:	
   975                           ; 1 bytes @ 0x8
   976                           
   977                           
   978                           ; 2 bytes @ 0x8
   979  0028                     	ds	1
   980  0029                     printf@cp:	
   981                           
   982                           ; 2 bytes @ 0x9
   983  0029                     	ds	2
   984  002B                     printf@ap:	
   985                           
   986                           ; 1 bytes @ 0xB
   987  002B                     	ds	1
   988  002C                     printf@val:	
   989                           
   990                           ; 2 bytes @ 0xC
   991  002C                     	ds	2
   992  002E                     printf@c:	
   993                           
   994                           ; 1 bytes @ 0xE
   995  002E                     	ds	1
   996  002F                     ??_main:	
   997                           
   998                           ; 1 bytes @ 0xF
   999  002F                     	ds	4
  1000  0033                     main@Str_1_Loc:	
  1001                           
  1002                           ; 31 bytes @ 0x13
  1003  0033                     	ds	31
  1004  0052                     main@Number_Of_Runs:	
  1005                           
  1006                           ; 2 bytes @ 0x32
  1007  0052                     	ds	2
  1008  0054                     main@Ch_Index:	
  1009                           
  1010                           ; 1 bytes @ 0x34
  1011  0054                     	ds	1
  1012  0055                     main@Run_Index:	
  1013                           
  1014                           ; 2 bytes @ 0x35
  1015  0055                     	ds	2
  1016  0057                     main@Enum_Loc:	
  1017                           
  1018                           ; 1 bytes @ 0x37
  1019  0057                     	ds	1
  1020                           
  1021                           	psect	maintext
  1022  03E2                     __pmaintext:	
  1023 ;;
  1024 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1025 ;;
  1026 ;; *************** function _main *****************
  1027 ;; Defined at:
  1028 ;;		line 90 in file "dhry_1.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  temp1          37    0[BANK3 ] struct record
  1033 ;;  temp2          37   33[BANK1 ] struct record
  1034 ;;  Str_2_Loc      31    0[BANK1 ] unsigned char [31]
  1035 ;;  Str_1_Loc      31   19[BANK0 ] unsigned char [31]
  1036 ;;  Int_1_Loc       2   72[BANK1 ] int 
  1037 ;;  Int_2_Loc       2   70[BANK1 ] int 
  1038 ;;  Int_3_Loc       2   31[BANK1 ] int 
  1039 ;;  Run_Index       2   53[BANK0 ] int 
  1040 ;;  Number_Of_Ru    2   50[BANK0 ] int 
  1041 ;;  Enum_Loc        1   55[BANK0 ] enum E207
  1042 ;;  Ch_Index        1   52[BANK0 ] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2  103[None  ] int 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : B00/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         0      37      74      37       0
  1054 ;;      Temps:          0       4       0       0       0
  1055 ;;      Totals:         0      41      74      37       0
  1056 ;;Total ram usage:      152 bytes
  1057 ;; Hardware stack levels required when called:    3
  1058 ;; This function calls:
  1059 ;;		_Func_1
  1060 ;;		_Func_2
  1061 ;;		_Proc_1
  1062 ;;		_Proc_2
  1063 ;;		_Proc_4
  1064 ;;		_Proc_5
  1065 ;;		_Proc_6
  1066 ;;		_Proc_7
  1067 ;;		_Proc_8
  1068 ;;		___awdiv
  1069 ;;		___wmul
  1070 ;;		_printf
  1071 ;;		_strcpy
  1072 ;; This function is called by:
  1073 ;;		Startup code after reset
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _main
  1079  03E2                     _main:	
  1080                           
  1081                           ;incstack = 0
  1082                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1083  03E2  0000               	nop	;# 
  1084                           
  1085                           ;dhry_1.c: 112: One_Fifty Int_1_Loc;
  1086                           ;dhry_1.c: 113: One_Fifty Int_2_Loc;
  1087                           ;dhry_1.c: 114: One_Fifty Int_3_Loc;
  1088                           ;dhry_1.c: 115: char Ch_Index;
  1089                           ;dhry_1.c: 116: Enumeration Enum_Loc;
  1090                           ;dhry_1.c: 117: Str_30 Str_1_Loc;
  1091                           ;dhry_1.c: 118: Str_30 Str_2_Loc;
  1092                           ;dhry_1.c: 119: int Run_Index;
  1093                           ;dhry_1.c: 120: int Number_Of_Runs;
  1094                           ;dhry_1.c: 128: Rec_Type temp1;
  1095                           ;dhry_1.c: 129: Rec_Type temp2;
  1096                           ;dhry_1.c: 130: Next_Ptr_Glob = &temp1;
  1097  03E3  30C2               	movlw	(low (main@temp1| (0+256)))& (0+255)
  1098  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1099  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1100  03E6  00AF               	movwf	??_main
  1101  03E7  082F               	movf	??_main,w
  1102  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  1103  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  1104  03EA  00EA               	movwf	_Next_Ptr_Glob^(0+128)
  1105                           
  1106                           ;dhry_1.c: 131: Ptr_Glob = &temp2;
  1107  03EB  30C1               	movlw	(low (main@temp2| 0))& (0+255)
  1108  03EC  00EB               	movwf	_Ptr_Glob^(0+128)
  1109  03ED  3000               	movlw	0
  1110  03EE  00EC               	movwf	(_Ptr_Glob+1)^(0+128)
  1111                           
  1112                           ;dhry_1.c: 134: Ptr_Glob->Ptr_Comp = Next_Ptr_Glob;
  1113  03EF  086B               	movf	_Ptr_Glob^(0+128),w
  1114  03F0  0084               	movwf	4
  1115  03F1  1783               	bsf	3,7
  1116  03F2  1C6C               	btfss	(_Ptr_Glob+1)^(0+128),0
  1117  03F3  1383               	bcf	3,7
  1118  03F4  086A               	movf	_Next_Ptr_Glob^(0+128),w
  1119  03F5  0080               	movwf	0
  1120  03F6  086A               	movf	_Next_Ptr_Glob^(0+128),w
  1121  03F7  39FF               	andlw	255
  1122  03F8  1D03               	skipz
  1123  03F9  3001               	movlw	1
  1124  03FA  0A84               	incf	4,f
  1125  03FB  0080               	movwf	0
  1126  03FC  0384               	decf	4,f
  1127                           
  1128                           ;dhry_1.c: 135: Ptr_Glob->Discr = Ident_1;
  1129  03FD  3002               	movlw	2
  1130  03FE  076B               	addwf	_Ptr_Glob^(0+128),w
  1131  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0401  00AF               	movwf	??_main
  1134  0402  1683               	bsf	3,5	;RP0=1, select bank1
  1135  0403  1303               	bcf	3,6	;RP1=0, select bank1
  1136  0404  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  1137  0405  1803               	skipnc
  1138  0406  3E01               	addlw	1
  1139  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0409  00B0               	movwf	??_main+1
  1142  040A  082F               	movf	??_main,w
  1143  040B  0084               	movwf	4
  1144  040C  1783               	bsf	3,7
  1145  040D  1C30               	btfss	??_main+1,0
  1146  040E  1383               	bcf	3,7
  1147  040F  0180               	clrf	0
  1148                           
  1149                           ;dhry_1.c: 136: Ptr_Glob->variant.var_1.Enum_Comp = Ident_3;
  1150  0410  3002               	movlw	2
  1151  0411  00AF               	movwf	??_main
  1152  0412  3003               	movlw	3
  1153  0413  1683               	bsf	3,5	;RP0=1, select bank1
  1154  0414  1303               	bcf	3,6	;RP1=0, select bank1
  1155  0415  076B               	addwf	_Ptr_Glob^(0+128),w
  1156  0416  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0417  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0418  00B0               	movwf	??_main+1
  1159  0419  1683               	bsf	3,5	;RP0=1, select bank1
  1160  041A  1303               	bcf	3,6	;RP1=0, select bank1
  1161  041B  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  1162  041C  1803               	skipnc
  1163  041D  3E01               	addlw	1
  1164  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1165  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0420  00B1               	movwf	??_main+2
  1167  0421  0830               	movf	??_main+1,w
  1168  0422  0084               	movwf	4
  1169  0423  1783               	bsf	3,7
  1170  0424  1C31               	btfss	??_main+2,0
  1171  0425  1383               	bcf	3,7
  1172  0426  082F               	movf	??_main,w
  1173  0427  0080               	movwf	0
  1174                           
  1175                           ;dhry_1.c: 137: Ptr_Glob->variant.var_1.Int_Comp = 40;
  1176  0428  3004               	movlw	4
  1177  0429  1683               	bsf	3,5	;RP0=1, select bank1
  1178  042A  1303               	bcf	3,6	;RP1=0, select bank1
  1179  042B  076B               	addwf	_Ptr_Glob^(0+128),w
  1180  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1181  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1182  042E  00AF               	movwf	??_main
  1183  042F  1683               	bsf	3,5	;RP0=1, select bank1
  1184  0430  1303               	bcf	3,6	;RP1=0, select bank1
  1185  0431  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  1186  0432  1803               	skipnc
  1187  0433  3E01               	addlw	1
  1188  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0436  00B0               	movwf	??_main+1
  1191  0437  082F               	movf	??_main,w
  1192  0438  0084               	movwf	4
  1193  0439  1783               	bsf	3,7
  1194  043A  1C30               	btfss	??_main+1,0
  1195  043B  1383               	bcf	3,7
  1196  043C  3028               	movlw	40
  1197  043D  0080               	movwf	0
  1198  043E  0A84               	incf	4,f
  1199  043F  3000               	movlw	0
  1200  0440  0080               	movwf	0
  1201                           
  1202                           ;dhry_1.c: 138: strcpy (Ptr_Glob->variant.var_1.Str_Comp,
  1203                           ;dhry_1.c: 139: "DHRYSTONE PROGRAM, SOME STRING");
  1204  0441  3006               	movlw	6
  1205  0442  1683               	bsf	3,5	;RP0=1, select bank1
  1206  0443  1303               	bcf	3,6	;RP1=0, select bank1
  1207  0444  076B               	addwf	_Ptr_Glob^(0+128),w
  1208  0445  00F0               	movwf	strcpy@to
  1209  0446  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  1210  0447  1803               	skipnc
  1211  0448  3E01               	addlw	1
  1212  0449  00F1               	movwf	strcpy@to+1
  1213  044A  305A               	movlw	low (STR_1| (0+32768))
  1214  044B  00F2               	movwf	strcpy@from
  1215  044C  3088               	movlw	high (STR_1| (0+32768))
  1216  044D  00F3               	movwf	strcpy@from+1
  1217  044E  158A  268B  118A   	fcall	_strcpy
  1218                           
  1219                           ;dhry_1.c: 140: strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
  1220  0451  3033               	movlw	(low (main@Str_1_Loc| 0))& (0+255)
  1221  0452  00F0               	movwf	strcpy@to
  1222  0453  3000               	movlw	0
  1223  0454  00F1               	movwf	strcpy@to+1
  1224  0455  3079               	movlw	low (STR_2| (0+32768))
  1225  0456  00F2               	movwf	strcpy@from
  1226  0457  3088               	movlw	high (STR_2| (0+32768))
  1227  0458  00F3               	movwf	strcpy@from+1
  1228  0459  158A  268B  118A   	fcall	_strcpy
  1229                           
  1230                           ;dhry_1.c: 143: Next_Ptr_Glob->Ptr_Comp = Ptr_Glob;
  1231  045C  1683               	bsf	3,5	;RP0=1, select bank1
  1232  045D  1303               	bcf	3,6	;RP1=0, select bank1
  1233  045E  086A               	movf	_Next_Ptr_Glob^(0+128),w
  1234  045F  0084               	movwf	4
  1235  0460  086B               	movf	_Ptr_Glob^(0+128),w
  1236  0461  1783               	bsf	3,7	;select IRP bank2
  1237  0462  0080               	movwf	0
  1238  0463  0A84               	incf	4,f
  1239  0464  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  1240  0465  0080               	movwf	0
  1241                           
  1242                           ;dhry_1.c: 146: Arr_2_Glob [8][7] = 10;
  1243  0466  300A               	movlw	10
  1244  0467  1283               	bcf	3,5	;RP0=0, select bank2
  1245  0468  1703               	bsf	3,6	;RP1=1, select bank2
  1246  0469  00FE               	movwf	(_Arr_2_Glob^(0+256)+110)
  1247  046A  3000               	movlw	0
  1248  046B  00FF               	movwf	(_Arr_2_Glob^(0+256)+111)
  1249                           
  1250                           ;dhry_1.c: 180: Number_Of_Runs = 1000;
  1251  046C  30E8               	movlw	232
  1252  046D  1283               	bcf	3,5	;RP0=0, select bank0
  1253  046E  1303               	bcf	3,6	;RP1=0, select bank0
  1254  046F  00D2               	movwf	main@Number_Of_Runs
  1255  0470  3003               	movlw	3
  1256  0471  00D3               	movwf	main@Number_Of_Runs+1
  1257                           
  1258                           ;dhry_1.c: 183: printf ("[");
  1259  0472  3026               	movlw	low (STR_3| (0+32768))
  1260  0473  00A0               	movwf	printf@f
  1261  0474  3089               	movlw	high (STR_3| (0+32768))
  1262  0475  00A1               	movwf	printf@f+1
  1263  0476  118A  22D1  118A   	fcall	_printf
  1264                           
  1265                           ;dhry_1.c: 202: for (Run_Index = 1; Run_Index <= Number_Of_Runs; ++Run_Index)
  1266  0479  3001               	movlw	1
  1267  047A  1283               	bcf	3,5	;RP0=0, select bank0
  1268  047B  1303               	bcf	3,6	;RP1=0, select bank0
  1269  047C  00D5               	movwf	main@Run_Index
  1270  047D  3000               	movlw	0
  1271  047E  00D6               	movwf	main@Run_Index+1
  1272  047F                     l2009:	
  1273  047F  0853               	movf	main@Number_Of_Runs+1,w
  1274  0480  3A80               	xorlw	128
  1275  0481  00AF               	movwf	??_main
  1276  0482  0856               	movf	main@Run_Index+1,w
  1277  0483  3A80               	xorlw	128
  1278  0484  022F               	subwf	??_main,w
  1279  0485  1D03               	skipz
  1280  0486  2C89               	goto	u1945
  1281  0487  0855               	movf	main@Run_Index,w
  1282  0488  0252               	subwf	main@Number_Of_Runs,w
  1283  0489                     u1945:	
  1284  0489  1C03               	btfss	3,0
  1285  048A  2DF4               	goto	l2011
  1286                           
  1287                           ;dhry_1.c: 203: {
  1288                           ;dhry_1.c: 205: Proc_5();
  1289  048B  158A  25ED  118A   	fcall	_Proc_5
  1290                           
  1291                           ;dhry_1.c: 206: Proc_4();
  1292  048E  158A  264C  118A   	fcall	_Proc_4
  1293                           
  1294                           ;dhry_1.c: 208: Int_1_Loc = 2;
  1295  0491  3002               	movlw	2
  1296  0492  1683               	bsf	3,5	;RP0=1, select bank1
  1297  0493  1303               	bcf	3,6	;RP1=0, select bank1
  1298  0494  00E8               	movwf	main@Int_1_Loc^(0+128)
  1299  0495  3000               	movlw	0
  1300  0496  00E9               	movwf	(main@Int_1_Loc^(0+128)+1)
  1301                           
  1302                           ;dhry_1.c: 209: Int_2_Loc = 3;
  1303  0497  3003               	movlw	3
  1304  0498  00E6               	movwf	main@Int_2_Loc^(0+128)
  1305  0499  3000               	movlw	0
  1306  049A  00E7               	movwf	(main@Int_2_Loc^(0+128)+1)
  1307                           
  1308                           ;dhry_1.c: 210: strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
  1309  049B  30A0               	movlw	(low (main@Str_2_Loc| 0))& (0+255)
  1310  049C  00F0               	movwf	strcpy@to
  1311  049D  3000               	movlw	0
  1312  049E  00F1               	movwf	strcpy@to+1
  1313  049F  301C               	movlw	low (STR_4| (0+32768))
  1314  04A0  00F2               	movwf	strcpy@from
  1315  04A1  3088               	movlw	high (STR_4| (0+32768))
  1316  04A2  00F3               	movwf	strcpy@from+1
  1317  04A3  158A  268B  118A   	fcall	_strcpy
  1318                           
  1319                           ;dhry_1.c: 211: Enum_Loc = Ident_2;
  1320  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1321  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1322  04A8  01D7               	clrf	main@Enum_Loc
  1323  04A9  0AD7               	incf	main@Enum_Loc,f
  1324                           
  1325                           ;dhry_1.c: 212: Bool_Glob = ! Func_2 (Str_1_Loc, Str_2_Loc);
  1326  04AA  30A0               	movlw	(low (main@Str_2_Loc| 0))& (0+255)
  1327  04AB  00AF               	movwf	??_main
  1328  04AC  082F               	movf	??_main,w
  1329  04AD  00F6               	movwf	Func_2@Str_2_Par_Ref
  1330  04AE  3033               	movlw	(low (main@Str_1_Loc| 0))& (0+255)
  1331  04AF  118A  209C  118A   	fcall	_Func_2
  1332  04B2  0876               	movf	?_Func_2,w
  1333  04B3  0477               	iorwf	?_Func_2+1,w
  1334  04B4  1D03               	btfss	3,2
  1335  04B5  2CB8               	goto	u1890
  1336  04B6  3001               	movlw	1
  1337  04B7  2CB9               	goto	u1900
  1338  04B8                     u1890:	
  1339  04B8  3000               	movlw	0
  1340  04B9                     u1900:	
  1341  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  1342  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  1343  04BB  00B0               	movwf	??_main+1
  1344  04BC  01B1               	clrf	??_main+2
  1345  04BD  0830               	movf	??_main+1,w
  1346  04BE  00DA               	movwf	_Bool_Glob
  1347  04BF  0831               	movf	??_main+2,w
  1348  04C0  00DB               	movwf	_Bool_Glob+1
  1349  04C1                     l1983:	
  1350                           ;dhry_1.c: 214: while (Int_1_Loc < Int_2_Loc)
  1351                           
  1352  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  1353  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  1354  04C3  0869               	movf	(main@Int_1_Loc+1)^(0+128),w
  1355  04C4  3A80               	xorlw	128
  1356  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1357  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1358  04C7  00AF               	movwf	??_main
  1359  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  1360  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  1361  04CA  0867               	movf	(main@Int_2_Loc+1)^(0+128),w
  1362  04CB  3A80               	xorlw	128
  1363  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1364  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1365  04CE  022F               	subwf	??_main,w
  1366  04CF  1D03               	skipz
  1367  04D0  2CD5               	goto	u1915
  1368  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  1369  04D2  1303               	bcf	3,6	;RP1=0, select bank1
  1370  04D3  0866               	movf	main@Int_2_Loc^(0+128),w
  1371  04D4  0268               	subwf	main@Int_1_Loc^(0+128),w
  1372  04D5                     u1915:	
  1373  04D5  1803               	btfsc	3,0
  1374  04D6  2D1B               	goto	l1985
  1375                           
  1376                           ;dhry_1.c: 215: {
  1377                           ;dhry_1.c: 216: Int_3_Loc = 5 * Int_1_Loc - Int_2_Loc;
  1378  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  1379  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  1380  04D9  0966               	comf	main@Int_2_Loc^(0+128),w
  1381  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1382  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1383  04DC  00AF               	movwf	??_main
  1384  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  1385  04DE  1303               	bcf	3,6	;RP1=0, select bank1
  1386  04DF  0967               	comf	(main@Int_2_Loc+1)^(0+128),w
  1387  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1388  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1389  04E2  00B0               	movwf	??_main+1
  1390  04E3  0AAF               	incf	??_main,f
  1391  04E4  1903               	skipnz
  1392  04E5  0AB0               	incf	??_main+1,f
  1393  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  1394  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  1395  04E8  0869               	movf	(main@Int_1_Loc+1)^(0+128),w
  1396  04E9  00F1               	movwf	___wmul@multiplier+1
  1397  04EA  0868               	movf	main@Int_1_Loc^(0+128),w
  1398  04EB  00F0               	movwf	___wmul@multiplier
  1399  04EC  3005               	movlw	5
  1400  04ED  00F2               	movwf	___wmul@multiplicand
  1401  04EE  3000               	movlw	0
  1402  04EF  00F3               	movwf	___wmul@multiplicand+1
  1403  04F0  158A  266A  118A   	fcall	___wmul
  1404  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  1405  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  1406  04F5  082F               	movf	??_main,w
  1407  04F6  0770               	addwf	?___wmul,w
  1408  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  1409  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  1410  04F9  00BF               	movwf	main@Int_3_Loc^(0+128)
  1411  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1412  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1413  04FC  0830               	movf	??_main+1,w
  1414  04FD  1803               	skipnc
  1415  04FE  0A30               	incf	??_main+1,w
  1416  04FF  0771               	addwf	?___wmul+1,w
  1417  0500  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0501  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0502  00C0               	movwf	(main@Int_3_Loc+1)^(0+128)
  1420                           
  1421                           ;dhry_1.c: 218: Proc_7 (Int_1_Loc, Int_2_Loc, &Int_3_Loc);
  1422  0503  0869               	movf	(main@Int_1_Loc+1)^(0+128),w
  1423  0504  00F1               	movwf	Proc_7@Int_1_Par_Val+1
  1424  0505  0868               	movf	main@Int_1_Loc^(0+128),w
  1425  0506  00F0               	movwf	Proc_7@Int_1_Par_Val
  1426  0507  0867               	movf	(main@Int_2_Loc+1)^(0+128),w
  1427  0508  00F3               	movwf	Proc_7@Int_2_Par_Val+1
  1428  0509  0866               	movf	main@Int_2_Loc^(0+128),w
  1429  050A  00F2               	movwf	Proc_7@Int_2_Par_Val
  1430  050B  30BF               	movlw	(low (main@Int_3_Loc| 0))& (0+255)
  1431  050C  00F4               	movwf	Proc_7@Int_Par_Ref
  1432  050D  3000               	movlw	0
  1433  050E  00F5               	movwf	Proc_7@Int_Par_Ref+1
  1434  050F  158A  2631  118A   	fcall	_Proc_7
  1435                           
  1436                           ;dhry_1.c: 220: Int_1_Loc += 1;
  1437  0512  3001               	movlw	1
  1438  0513  1683               	bsf	3,5	;RP0=1, select bank1
  1439  0514  1303               	bcf	3,6	;RP1=0, select bank1
  1440  0515  07E8               	addwf	main@Int_1_Loc^(0+128),f
  1441  0516  1803               	skipnc
  1442  0517  0AE9               	incf	(main@Int_1_Loc+1)^(0+128),f
  1443  0518  3000               	movlw	0
  1444  0519  07E9               	addwf	(main@Int_1_Loc+1)^(0+128),f
  1445  051A  2CC1               	goto	l1983
  1446  051B                     l1985:	
  1447                           
  1448                           ;dhry_1.c: 221: }
  1449                           ;dhry_1.c: 223: Proc_8 (Arr_1_Glob, Arr_2_Glob, Int_1_Loc, Int_3_Loc);
  1450  051B  3010               	movlw	(low (_Arr_2_Glob| (0+256)))& (0+255)
  1451  051C  1283               	bcf	3,5	;RP0=0, select bank0
  1452  051D  1303               	bcf	3,6	;RP1=0, select bank0
  1453  051E  00AF               	movwf	??_main
  1454  051F  082F               	movf	??_main,w
  1455  0520  00F4               	movwf	Proc_8@Arr_2_Par_Ref
  1456  0521  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0522  1303               	bcf	3,6	;RP1=0, select bank1
  1458  0523  0869               	movf	(main@Int_1_Loc+1)^(0+128),w
  1459  0524  00F6               	movwf	Proc_8@Int_1_Par_Val+1
  1460  0525  0868               	movf	main@Int_1_Loc^(0+128),w
  1461  0526  00F5               	movwf	Proc_8@Int_1_Par_Val
  1462  0527  0840               	movf	(main@Int_3_Loc+1)^(0+128),w
  1463  0528  00F8               	movwf	Proc_8@Int_2_Par_Val+1
  1464  0529  083F               	movf	main@Int_3_Loc^(0+128),w
  1465  052A  00F7               	movwf	Proc_8@Int_2_Par_Val
  1466  052B  3090               	movlw	(low (_Arr_1_Glob| (0+256)))& (0+255)
  1467  052C  118A  2114  118A   	fcall	_Proc_8
  1468                           
  1469                           ;dhry_1.c: 225: Proc_1 (Ptr_Glob);
  1470  052F  1683               	bsf	3,5	;RP0=1, select bank1
  1471  0530  1303               	bcf	3,6	;RP1=0, select bank1
  1472  0531  086B               	movf	_Ptr_Glob^(0+128),w
  1473  0532  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0533  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0534  00A0               	movwf	Proc_1@Ptr_Val_Par
  1476  0535  1683               	bsf	3,5	;RP0=1, select bank1
  1477  0536  1303               	bcf	3,6	;RP1=0, select bank1
  1478  0537  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  1479  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1481  053A  00A1               	movwf	Proc_1@Ptr_Val_Par+1
  1482  053B  118A  21D2  118A   	fcall	_Proc_1
  1483                           
  1484                           ;dhry_1.c: 226: for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
  1485  053E  3041               	movlw	65
  1486  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0541  00AF               	movwf	??_main
  1489  0542  082F               	movf	??_main,w
  1490  0543  00D4               	movwf	main@Ch_Index
  1491  0544                     l2001:	
  1492  0544  0854               	movf	main@Ch_Index,w
  1493  0545  1683               	bsf	3,5	;RP0=1, select bank1
  1494  0546  1303               	bcf	3,6	;RP1=0, select bank1
  1495  0547  026D               	subwf	_Ch_2_Glob^(0+128),w
  1496  0548  1C03               	btfss	3,0
  1497  0549  2D82               	goto	l2003
  1498                           
  1499                           ;dhry_1.c: 228: {
  1500                           ;dhry_1.c: 229: if (Enum_Loc == Func_1 (Ch_Index, 'C'))
  1501  054A  3043               	movlw	67
  1502  054B  1283               	bcf	3,5	;RP0=0, select bank0
  1503  054C  00AF               	movwf	??_main
  1504  054D  082F               	movf	??_main,w
  1505  054E  00F0               	movwf	Func_1@Ch_2_Par_Val
  1506  054F  0854               	movf	main@Ch_Index,w
  1507  0550  158A  261A  118A   	fcall	_Func_1
  1508  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0555  0657               	xorwf	main@Enum_Loc,w
  1511  0556  1D03               	skipz
  1512  0557  2D7D               	goto	l1999
  1513                           
  1514                           ;dhry_1.c: 231: {
  1515                           ;dhry_1.c: 232: Proc_6 (Ident_1, &Enum_Loc);
  1516  0558  3057               	movlw	(low (main@Enum_Loc| 0))& (0+255)
  1517  0559  00F5               	movwf	Proc_6@Enum_Ref_Par
  1518  055A  3000               	movlw	0
  1519  055B  00F6               	movwf	Proc_6@Enum_Ref_Par+1
  1520  055C  0100               	clrw
  1521  055D  118A  2037  118A   	fcall	_Proc_6
  1522                           
  1523                           ;dhry_1.c: 233: strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
  1524  0560  30A0               	movlw	(low (main@Str_2_Loc| 0))& (0+255)
  1525  0561  00F0               	movwf	strcpy@to
  1526  0562  3000               	movlw	0
  1527  0563  00F1               	movwf	strcpy@to+1
  1528  0564  303B               	movlw	low (STR_5| (0+32768))
  1529  0565  00F2               	movwf	strcpy@from
  1530  0566  3088               	movlw	high (STR_5| (0+32768))
  1531  0567  00F3               	movwf	strcpy@from+1
  1532  0568  158A  268B  118A   	fcall	_strcpy
  1533                           
  1534                           ;dhry_1.c: 234: Int_2_Loc = Run_Index;
  1535  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1536  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1537  056D  0856               	movf	main@Run_Index+1,w
  1538  056E  1683               	bsf	3,5	;RP0=1, select bank1
  1539  056F  1303               	bcf	3,6	;RP1=0, select bank1
  1540  0570  00E7               	movwf	(main@Int_2_Loc+1)^(0+128)
  1541  0571  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0572  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0573  0855               	movf	main@Run_Index,w
  1544  0574  1683               	bsf	3,5	;RP0=1, select bank1
  1545  0575  1303               	bcf	3,6	;RP1=0, select bank1
  1546  0576  00E6               	movwf	main@Int_2_Loc^(0+128)
  1547                           
  1548                           ;dhry_1.c: 235: Int_Glob = Run_Index;
  1549  0577  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0578  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0579  0856               	movf	main@Run_Index+1,w
  1552  057A  00DD               	movwf	_Int_Glob+1
  1553  057B  0855               	movf	main@Run_Index,w
  1554  057C  00DC               	movwf	_Int_Glob
  1555  057D                     l1999:	
  1556  057D  3001               	movlw	1
  1557  057E  00AF               	movwf	??_main
  1558  057F  082F               	movf	??_main,w
  1559  0580  07D4               	addwf	main@Ch_Index,f
  1560  0581  2D44               	goto	l2001
  1561  0582                     l2003:	
  1562                           
  1563                           ;dhry_1.c: 236: }
  1564                           ;dhry_1.c: 237: }
  1565                           ;dhry_1.c: 239: Int_2_Loc = Int_2_Loc * Int_1_Loc;
  1566  0582  0867               	movf	(main@Int_2_Loc+1)^(0+128),w
  1567  0583  00F1               	movwf	___wmul@multiplier+1
  1568  0584  0866               	movf	main@Int_2_Loc^(0+128),w
  1569  0585  00F0               	movwf	___wmul@multiplier
  1570  0586  0869               	movf	(main@Int_1_Loc+1)^(0+128),w
  1571  0587  00F3               	movwf	___wmul@multiplicand+1
  1572  0588  0868               	movf	main@Int_1_Loc^(0+128),w
  1573  0589  00F2               	movwf	___wmul@multiplicand
  1574  058A  158A  266A  118A   	fcall	___wmul
  1575  058D  0871               	movf	?___wmul+1,w
  1576  058E  1683               	bsf	3,5	;RP0=1, select bank1
  1577  058F  1303               	bcf	3,6	;RP1=0, select bank1
  1578  0590  00E7               	movwf	(main@Int_2_Loc+1)^(0+128)
  1579  0591  0870               	movf	?___wmul,w
  1580  0592  00E6               	movwf	main@Int_2_Loc^(0+128)
  1581                           
  1582                           ;dhry_1.c: 240: Int_1_Loc = Int_2_Loc / Int_3_Loc;
  1583  0593  0840               	movf	(main@Int_3_Loc+1)^(0+128),w
  1584  0594  00F1               	movwf	___awdiv@divisor+1
  1585  0595  083F               	movf	main@Int_3_Loc^(0+128),w
  1586  0596  00F0               	movwf	___awdiv@divisor
  1587  0597  0867               	movf	(main@Int_2_Loc+1)^(0+128),w
  1588  0598  00F3               	movwf	___awdiv@dividend+1
  1589  0599  0866               	movf	main@Int_2_Loc^(0+128),w
  1590  059A  00F2               	movwf	___awdiv@dividend
  1591  059B  158A  27A7  118A   	fcall	___awdiv
  1592  059E  0871               	movf	?___awdiv+1,w
  1593  059F  1683               	bsf	3,5	;RP0=1, select bank1
  1594  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  1595  05A1  00E9               	movwf	(main@Int_1_Loc+1)^(0+128)
  1596  05A2  0870               	movf	?___awdiv,w
  1597  05A3  00E8               	movwf	main@Int_1_Loc^(0+128)
  1598                           
  1599                           ;dhry_1.c: 241: Int_2_Loc = 7 * (Int_2_Loc - Int_3_Loc) - Int_1_Loc;
  1600  05A4  0968               	comf	main@Int_1_Loc^(0+128),w
  1601  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1602  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1603  05A7  00AF               	movwf	??_main
  1604  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  1605  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  1606  05AA  0969               	comf	(main@Int_1_Loc+1)^(0+128),w
  1607  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1608  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1609  05AD  00B0               	movwf	??_main+1
  1610  05AE  0AAF               	incf	??_main,f
  1611  05AF  1903               	skipnz
  1612  05B0  0AB0               	incf	??_main+1,f
  1613  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  1614  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  1615  05B3  093F               	comf	main@Int_3_Loc^(0+128),w
  1616  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1617  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1618  05B6  00B1               	movwf	??_main+2
  1619  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  1620  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  1621  05B9  0940               	comf	(main@Int_3_Loc+1)^(0+128),w
  1622  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1623  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1624  05BC  00B2               	movwf	??_main+3
  1625  05BD  0AB1               	incf	??_main+2,f
  1626  05BE  1903               	skipnz
  1627  05BF  0AB2               	incf	??_main+3,f
  1628  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  1629  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  1630  05C2  0866               	movf	main@Int_2_Loc^(0+128),w
  1631  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1632  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1633  05C5  0731               	addwf	??_main+2,w
  1634  05C6  00F0               	movwf	___wmul@multiplier
  1635  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  1636  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  1637  05C9  0867               	movf	(main@Int_2_Loc+1)^(0+128),w
  1638  05CA  1803               	skipnc
  1639  05CB  0A67               	incf	(main@Int_2_Loc+1)^(0+128),w
  1640  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1641  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1642  05CE  0732               	addwf	??_main+3,w
  1643  05CF  00F1               	movwf	___wmul@multiplier+1
  1644  05D0  3007               	movlw	7
  1645  05D1  00F2               	movwf	___wmul@multiplicand
  1646  05D2  3000               	movlw	0
  1647  05D3  00F3               	movwf	___wmul@multiplicand+1
  1648  05D4  158A  266A  118A   	fcall	___wmul
  1649  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1650  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1651  05D9  082F               	movf	??_main,w
  1652  05DA  0770               	addwf	?___wmul,w
  1653  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  1654  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  1655  05DD  00E6               	movwf	main@Int_2_Loc^(0+128)
  1656  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1657  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1658  05E0  0830               	movf	??_main+1,w
  1659  05E1  1803               	skipnc
  1660  05E2  0A30               	incf	??_main+1,w
  1661  05E3  0771               	addwf	?___wmul+1,w
  1662  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  1663  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  1664  05E6  00E7               	movwf	(main@Int_2_Loc+1)^(0+128)
  1665                           
  1666                           ;dhry_1.c: 243: Proc_2 (&Int_1_Loc);
  1667  05E7  30E8               	movlw	(low (main@Int_1_Loc| 0))& (0+255)
  1668  05E8  158A  2730  118A   	fcall	_Proc_2
  1669  05EB  3001               	movlw	1
  1670  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1671  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1672  05EE  07D5               	addwf	main@Run_Index,f
  1673  05EF  1803               	skipnc
  1674  05F0  0AD6               	incf	main@Run_Index+1,f
  1675  05F1  3000               	movlw	0
  1676  05F2  07D6               	addwf	main@Run_Index+1,f
  1677  05F3  2C7F               	goto	l2009
  1678  05F4                     l2011:	
  1679                           
  1680                           ;dhry_1.c: 246: }
  1681                           ;dhry_1.c: 266: printf ("]\n");
  1682  05F4  3023               	movlw	low (STR_6| (0+32768))
  1683  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1684  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1685  05F7  00A0               	movwf	printf@f
  1686  05F8  3089               	movlw	high (STR_6| (0+32768))
  1687  05F9  00A1               	movwf	printf@f+1
  1688  05FA  118A  22D1  118A   	fcall	_printf
  1689                           
  1690                           ;dhry_1.c: 270: printf ("a:%d\n", Int_Glob);
  1691  05FD  30AB               	movlw	low (STR_7| (0+32768))
  1692  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1693  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0600  00A0               	movwf	printf@f
  1695  0601  3088               	movlw	high (STR_7| (0+32768))
  1696  0602  00A1               	movwf	printf@f+1
  1697  0603  085D               	movf	_Int_Glob+1,w
  1698  0604  00A3               	movwf	?_printf+3
  1699  0605  085C               	movf	_Int_Glob,w
  1700  0606  00A2               	movwf	?_printf+2
  1701  0607  118A  22D1  118A   	fcall	_printf
  1702                           
  1703                           ;dhry_1.c: 272: printf ("b:%d\n", Bool_Glob);
  1704  060A  30B1               	movlw	low (STR_8| (0+32768))
  1705  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1706  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1707  060D  00A0               	movwf	printf@f
  1708  060E  3088               	movlw	high (STR_8| (0+32768))
  1709  060F  00A1               	movwf	printf@f+1
  1710  0610  085B               	movf	_Bool_Glob+1,w
  1711  0611  00A3               	movwf	?_printf+3
  1712  0612  085A               	movf	_Bool_Glob,w
  1713  0613  00A2               	movwf	?_printf+2
  1714  0614  118A  22D1  118A   	fcall	_printf
  1715                           
  1716                           ;dhry_1.c: 274: printf ("c:%c\n", Ch_1_Glob);
  1717  0617  309F               	movlw	low (STR_9| (0+32768))
  1718  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0619  1303               	bcf	3,6	;RP1=0, select bank0
  1720  061A  00A0               	movwf	printf@f
  1721  061B  3088               	movlw	high (STR_9| (0+32768))
  1722  061C  00A1               	movwf	printf@f+1
  1723  061D  1683               	bsf	3,5	;RP0=1, select bank1
  1724  061E  1303               	bcf	3,6	;RP1=0, select bank1
  1725  061F  086E               	movf	_Ch_1_Glob^(0+128),w
  1726  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0622  00AF               	movwf	??_main
  1729  0623  01B0               	clrf	??_main+1
  1730  0624  082F               	movf	??_main,w
  1731  0625  00A2               	movwf	?_printf+2
  1732  0626  0830               	movf	??_main+1,w
  1733  0627  00A3               	movwf	?_printf+3
  1734  0628  118A  22D1  118A   	fcall	_printf
  1735                           
  1736                           ;dhry_1.c: 276: printf ("d:%c\n", Ch_2_Glob);
  1737  062B  30A5               	movlw	low (STR_10| (0+32768))
  1738  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1739  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1740  062E  00A0               	movwf	printf@f
  1741  062F  3088               	movlw	high (STR_10| (0+32768))
  1742  0630  00A1               	movwf	printf@f+1
  1743  0631  1683               	bsf	3,5	;RP0=1, select bank1
  1744  0632  1303               	bcf	3,6	;RP1=0, select bank1
  1745  0633  086D               	movf	_Ch_2_Glob^(0+128),w
  1746  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0636  00AF               	movwf	??_main
  1749  0637  01B0               	clrf	??_main+1
  1750  0638  082F               	movf	??_main,w
  1751  0639  00A2               	movwf	?_printf+2
  1752  063A  0830               	movf	??_main+1,w
  1753  063B  00A3               	movwf	?_printf+3
  1754  063C  118A  22D1  118A   	fcall	_printf
  1755                           
  1756                           ;dhry_1.c: 278: printf ("e:%d\n", Arr_1_Glob[8]);
  1757  063F  30B7               	movlw	low (STR_11| (0+32768))
  1758  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1759  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1760  0642  00A0               	movwf	printf@f
  1761  0643  3088               	movlw	high (STR_11| (0+32768))
  1762  0644  00A1               	movwf	printf@f+1
  1763  0645  1683               	bsf	3,5	;RP0=1, select bank3
  1764  0646  1703               	bsf	3,6	;RP1=1, select bank3
  1765  0647  0821               	movf	((_Arr_1_Glob+1)^(0+384)+16),w
  1766  0648  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0649  1303               	bcf	3,6	;RP1=0, select bank0
  1768  064A  00A3               	movwf	?_printf+3
  1769  064B  1683               	bsf	3,5	;RP0=1, select bank3
  1770  064C  1703               	bsf	3,6	;RP1=1, select bank3
  1771  064D  0820               	movf	(_Arr_1_Glob^(0+384)+16),w
  1772  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1773  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1774  0650  00A2               	movwf	?_printf+2
  1775  0651  118A  22D1  118A   	fcall	_printf
  1776                           
  1777                           ;dhry_1.c: 280: printf ("f:%d\n", Arr_2_Glob[8][7]);
  1778  0654  30BD               	movlw	low (STR_12| (0+32768))
  1779  0655  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0656  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0657  00A0               	movwf	printf@f
  1782  0658  3088               	movlw	high (STR_12| (0+32768))
  1783  0659  00A1               	movwf	printf@f+1
  1784  065A  1283               	bcf	3,5	;RP0=0, select bank2
  1785  065B  1703               	bsf	3,6	;RP1=1, select bank2
  1786  065C  087F               	movf	((_Arr_2_Glob+1)^(0+256)+110),w
  1787  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1788  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1789  065F  00A3               	movwf	?_printf+3
  1790  0660  1283               	bcf	3,5	;RP0=0, select bank2
  1791  0661  1703               	bsf	3,6	;RP1=1, select bank2
  1792  0662  087E               	movf	(_Arr_2_Glob^(0+256)+110),w
  1793  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0665  00A2               	movwf	?_printf+2
  1796  0666  118A  22D1  118A   	fcall	_printf
  1797                           
  1798                           ;dhry_1.c: 282: printf ("g:%d\n", (int) Ptr_Glob->Ptr_Comp);
  1799  0669  30C3               	movlw	low (STR_13| (0+32768))
  1800  066A  1283               	bcf	3,5	;RP0=0, select bank0
  1801  066B  1303               	bcf	3,6	;RP1=0, select bank0
  1802  066C  00A0               	movwf	printf@f
  1803  066D  3088               	movlw	high (STR_13| (0+32768))
  1804  066E  00A1               	movwf	printf@f+1
  1805  066F  1683               	bsf	3,5	;RP0=1, select bank1
  1806  0670  1303               	bcf	3,6	;RP1=0, select bank1
  1807  0671  086B               	movf	_Ptr_Glob^(0+128),w
  1808  0672  0084               	movwf	4
  1809  0673  1783               	bsf	3,7
  1810  0674  1C6C               	btfss	(_Ptr_Glob+1)^(0+128),0
  1811  0675  1383               	bcf	3,7
  1812  0676  0800               	movf	0,w
  1813  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1814  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1815  0679  00A2               	movwf	?_printf+2
  1816  067A  0A84               	incf	4,f
  1817  067B  0800               	movf	0,w
  1818  067C  00A3               	movwf	?_printf+3
  1819  067D  118A  22D1  118A   	fcall	_printf
  1820                           
  1821                           ;dhry_1.c: 284: printf ("h:%d\n", Ptr_Glob->Discr);
  1822  0680  30C9               	movlw	low (STR_14| (0+32768))
  1823  0681  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0682  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0683  00A0               	movwf	printf@f
  1826  0684  3088               	movlw	high (STR_14| (0+32768))
  1827  0685  00A1               	movwf	printf@f+1
  1828  0686  3002               	movlw	2
  1829  0687  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0688  1303               	bcf	3,6	;RP1=0, select bank1
  1831  0689  076B               	addwf	_Ptr_Glob^(0+128),w
  1832  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1833  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1834  068C  00AF               	movwf	??_main
  1835  068D  1683               	bsf	3,5	;RP0=1, select bank1
  1836  068E  1303               	bcf	3,6	;RP1=0, select bank1
  1837  068F  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  1838  0690  1803               	skipnc
  1839  0691  3E01               	addlw	1
  1840  0692  1283               	bcf	3,5	;RP0=0, select bank0
  1841  0693  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0694  00B0               	movwf	??_main+1
  1843  0695  082F               	movf	??_main,w
  1844  0696  0084               	movwf	4
  1845  0697  1783               	bsf	3,7
  1846  0698  1C30               	btfss	??_main+1,0
  1847  0699  1383               	bcf	3,7
  1848  069A  0800               	movf	0,w
  1849  069B  00B1               	movwf	??_main+2
  1850  069C  01B2               	clrf	??_main+3
  1851  069D  0831               	movf	??_main+2,w
  1852  069E  00A2               	movwf	?_printf+2
  1853  069F  0832               	movf	??_main+3,w
  1854  06A0  00A3               	movwf	?_printf+3
  1855  06A1  118A  22D1  118A   	fcall	_printf
  1856                           
  1857                           ;dhry_1.c: 286: printf ("i:%d\n", Ptr_Glob->variant.var_1.Enum_Comp);
  1858  06A4  30CF               	movlw	low (STR_15| (0+32768))
  1859  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1860  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1861  06A7  00A0               	movwf	printf@f
  1862  06A8  3088               	movlw	high (STR_15| (0+32768))
  1863  06A9  00A1               	movwf	printf@f+1
  1864  06AA  3003               	movlw	3
  1865  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  1866  06AC  1303               	bcf	3,6	;RP1=0, select bank1
  1867  06AD  076B               	addwf	_Ptr_Glob^(0+128),w
  1868  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1869  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1870  06B0  00AF               	movwf	??_main
  1871  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  1872  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  1873  06B3  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  1874  06B4  1803               	skipnc
  1875  06B5  3E01               	addlw	1
  1876  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1877  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1878  06B8  00B0               	movwf	??_main+1
  1879  06B9  082F               	movf	??_main,w
  1880  06BA  0084               	movwf	4
  1881  06BB  1783               	bsf	3,7
  1882  06BC  1C30               	btfss	??_main+1,0
  1883  06BD  1383               	bcf	3,7
  1884  06BE  0800               	movf	0,w
  1885  06BF  00B1               	movwf	??_main+2
  1886  06C0  01B2               	clrf	??_main+3
  1887  06C1  0831               	movf	??_main+2,w
  1888  06C2  00A2               	movwf	?_printf+2
  1889  06C3  0832               	movf	??_main+3,w
  1890  06C4  00A3               	movwf	?_printf+3
  1891  06C5  118A  22D1  118A   	fcall	_printf
  1892                           
  1893                           ;dhry_1.c: 288: printf ("j:%d\n", Ptr_Glob->variant.var_1.Int_Comp);
  1894  06C8  30D5               	movlw	low (STR_16| (0+32768))
  1895  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1896  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1897  06CB  00A0               	movwf	printf@f
  1898  06CC  3088               	movlw	high (STR_16| (0+32768))
  1899  06CD  00A1               	movwf	printf@f+1
  1900  06CE  3004               	movlw	4
  1901  06CF  1683               	bsf	3,5	;RP0=1, select bank1
  1902  06D0  1303               	bcf	3,6	;RP1=0, select bank1
  1903  06D1  076B               	addwf	_Ptr_Glob^(0+128),w
  1904  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1905  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1906  06D4  00AF               	movwf	??_main
  1907  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  1908  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  1909  06D7  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  1910  06D8  1803               	skipnc
  1911  06D9  3E01               	addlw	1
  1912  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1913  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1914  06DC  00B0               	movwf	??_main+1
  1915  06DD  082F               	movf	??_main,w
  1916  06DE  0084               	movwf	4
  1917  06DF  1783               	bsf	3,7
  1918  06E0  1C30               	btfss	??_main+1,0
  1919  06E1  1383               	bcf	3,7
  1920  06E2  0800               	movf	0,w
  1921  06E3  00A2               	movwf	?_printf+2
  1922  06E4  0A84               	incf	4,f
  1923  06E5  0800               	movf	0,w
  1924  06E6  00A3               	movwf	?_printf+3
  1925  06E7  118A  22D1  118A   	fcall	_printf
  1926                           
  1927                           ;dhry_1.c: 290: printf ("k:%s\n", Ptr_Glob->variant.var_1.Str_Comp);
  1928  06EA  300B               	movlw	low (STR_17| (0+32768))
  1929  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1930  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1931  06ED  00A0               	movwf	printf@f
  1932  06EE  3089               	movlw	high (STR_17| (0+32768))
  1933  06EF  00A1               	movwf	printf@f+1
  1934  06F0  3006               	movlw	6
  1935  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  1936  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  1937  06F3  076B               	addwf	_Ptr_Glob^(0+128),w
  1938  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1939  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1940  06F6  00AF               	movwf	??_main
  1941  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  1942  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  1943  06F9  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  1944  06FA  1803               	skipnc
  1945  06FB  3E01               	addlw	1
  1946  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1947  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1948  06FE  00B0               	movwf	??_main+1
  1949  06FF  082F               	movf	??_main,w
  1950  0700  00A2               	movwf	low ((?_printf| 0+2))
  1951  0701  0830               	movf	??_main+1,w
  1952  0702  00A3               	movwf	(low ((?_printf| 0+2))+1)
  1953  0703  118A  22D1  118A   	fcall	_printf
  1954                           
  1955                           ;dhry_1.c: 292: printf ("l:%d\n", (int) Next_Ptr_Glob->Ptr_Comp);
  1956  0706  30DB               	movlw	low (STR_18| (0+32768))
  1957  0707  1283               	bcf	3,5	;RP0=0, select bank0
  1958  0708  1303               	bcf	3,6	;RP1=0, select bank0
  1959  0709  00A0               	movwf	printf@f
  1960  070A  3088               	movlw	high (STR_18| (0+32768))
  1961  070B  00A1               	movwf	printf@f+1
  1962  070C  1683               	bsf	3,5	;RP0=1, select bank1
  1963  070D  1303               	bcf	3,6	;RP1=0, select bank1
  1964  070E  086A               	movf	_Next_Ptr_Glob^(0+128),w
  1965  070F  0084               	movwf	4
  1966  0710  1783               	bsf	3,7	;select IRP bank2
  1967  0711  0800               	movf	0,w
  1968  0712  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0713  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0714  00A2               	movwf	?_printf+2
  1971  0715  0A84               	incf	4,f
  1972  0716  0800               	movf	0,w
  1973  0717  00A3               	movwf	?_printf+3
  1974  0718  118A  22D1  118A   	fcall	_printf
  1975                           
  1976                           ;dhry_1.c: 294: printf ("m:%d\n", Next_Ptr_Glob->Discr);
  1977  071B  30E1               	movlw	low (STR_19| (0+32768))
  1978  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1979  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1980  071E  00A0               	movwf	printf@f
  1981  071F  3088               	movlw	high (STR_19| (0+32768))
  1982  0720  00A1               	movwf	printf@f+1
  1983  0721  1683               	bsf	3,5	;RP0=1, select bank1
  1984  0722  1303               	bcf	3,6	;RP1=0, select bank1
  1985  0723  086A               	movf	_Next_Ptr_Glob^(0+128),w
  1986  0724  3E02               	addlw	2
  1987  0725  0084               	movwf	4
  1988  0726  1783               	bsf	3,7	;select IRP bank2
  1989  0727  0800               	movf	0,w
  1990  0728  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0729  1303               	bcf	3,6	;RP1=0, select bank0
  1992  072A  00AF               	movwf	??_main
  1993  072B  01B0               	clrf	??_main+1
  1994  072C  082F               	movf	??_main,w
  1995  072D  00A2               	movwf	?_printf+2
  1996  072E  0830               	movf	??_main+1,w
  1997  072F  00A3               	movwf	?_printf+3
  1998  0730  118A  22D1  118A   	fcall	_printf
  1999                           
  2000                           ;dhry_1.c: 296: printf ("n:%d\n", Next_Ptr_Glob->variant.var_1.Enum_Comp);
  2001  0733  30E7               	movlw	low (STR_20| (0+32768))
  2002  0734  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0735  1303               	bcf	3,6	;RP1=0, select bank0
  2004  0736  00A0               	movwf	printf@f
  2005  0737  3088               	movlw	high (STR_20| (0+32768))
  2006  0738  00A1               	movwf	printf@f+1
  2007  0739  1683               	bsf	3,5	;RP0=1, select bank1
  2008  073A  1303               	bcf	3,6	;RP1=0, select bank1
  2009  073B  086A               	movf	_Next_Ptr_Glob^(0+128),w
  2010  073C  3E03               	addlw	3
  2011  073D  0084               	movwf	4
  2012  073E  1783               	bsf	3,7	;select IRP bank2
  2013  073F  0800               	movf	0,w
  2014  0740  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0741  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0742  00AF               	movwf	??_main
  2017  0743  01B0               	clrf	??_main+1
  2018  0744  082F               	movf	??_main,w
  2019  0745  00A2               	movwf	?_printf+2
  2020  0746  0830               	movf	??_main+1,w
  2021  0747  00A3               	movwf	?_printf+3
  2022  0748  118A  22D1  118A   	fcall	_printf
  2023                           
  2024                           ;dhry_1.c: 298: printf ("o:%d\n", Next_Ptr_Glob->variant.var_1.Int_Comp);
  2025  074B  30ED               	movlw	low (STR_21| (0+32768))
  2026  074C  1283               	bcf	3,5	;RP0=0, select bank0
  2027  074D  1303               	bcf	3,6	;RP1=0, select bank0
  2028  074E  00A0               	movwf	printf@f
  2029  074F  3088               	movlw	high (STR_21| (0+32768))
  2030  0750  00A1               	movwf	printf@f+1
  2031  0751  1683               	bsf	3,5	;RP0=1, select bank1
  2032  0752  1303               	bcf	3,6	;RP1=0, select bank1
  2033  0753  086A               	movf	_Next_Ptr_Glob^(0+128),w
  2034  0754  3E04               	addlw	4
  2035  0755  0084               	movwf	4
  2036  0756  1783               	bsf	3,7	;select IRP bank2
  2037  0757  0800               	movf	0,w
  2038  0758  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0759  1303               	bcf	3,6	;RP1=0, select bank0
  2040  075A  00A2               	movwf	?_printf+2
  2041  075B  0A84               	incf	4,f
  2042  075C  0800               	movf	0,w
  2043  075D  00A3               	movwf	?_printf+3
  2044  075E  118A  22D1  118A   	fcall	_printf
  2045                           
  2046                           ;dhry_1.c: 300: printf ("p:%s\n",
  2047                           ;dhry_1.c: 301: Next_Ptr_Glob->variant.var_1.Str_Comp);
  2048  0761  3011               	movlw	low (STR_22| (0+32768))
  2049  0762  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0763  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0764  00A0               	movwf	printf@f
  2052  0765  3089               	movlw	high (STR_22| (0+32768))
  2053  0766  00A1               	movwf	printf@f+1
  2054  0767  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0768  1303               	bcf	3,6	;RP1=0, select bank1
  2056  0769  086A               	movf	_Next_Ptr_Glob^(0+128),w
  2057  076A  3E06               	addlw	6
  2058  076B  1283               	bcf	3,5	;RP0=0, select bank0
  2059  076C  1303               	bcf	3,6	;RP1=0, select bank0
  2060  076D  00A2               	movwf	low ((?_printf| 0+2))
  2061  076E  3001               	movlw	1
  2062  076F  00A3               	movwf	(low ((?_printf| 0+2))+1)
  2063  0770  118A  22D1  118A   	fcall	_printf
  2064                           
  2065                           ;dhry_1.c: 303: printf ("q:%d\n", Int_1_Loc);
  2066  0773  30F3               	movlw	low (STR_23| (0+32768))
  2067  0774  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0775  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0776  00A0               	movwf	printf@f
  2070  0777  3088               	movlw	high (STR_23| (0+32768))
  2071  0778  00A1               	movwf	printf@f+1
  2072  0779  1683               	bsf	3,5	;RP0=1, select bank1
  2073  077A  1303               	bcf	3,6	;RP1=0, select bank1
  2074  077B  0869               	movf	(main@Int_1_Loc+1)^(0+128),w
  2075  077C  1283               	bcf	3,5	;RP0=0, select bank0
  2076  077D  1303               	bcf	3,6	;RP1=0, select bank0
  2077  077E  00A3               	movwf	?_printf+3
  2078  077F  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0780  1303               	bcf	3,6	;RP1=0, select bank1
  2080  0781  0868               	movf	main@Int_1_Loc^(0+128),w
  2081  0782  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0783  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0784  00A2               	movwf	?_printf+2
  2084  0785  118A  22D1  118A   	fcall	_printf
  2085                           
  2086                           ;dhry_1.c: 305: printf ("r:%d\n", Int_2_Loc);
  2087  0788  30F9               	movlw	low (STR_24| (0+32768))
  2088  0789  1283               	bcf	3,5	;RP0=0, select bank0
  2089  078A  1303               	bcf	3,6	;RP1=0, select bank0
  2090  078B  00A0               	movwf	printf@f
  2091  078C  3088               	movlw	high (STR_24| (0+32768))
  2092  078D  00A1               	movwf	printf@f+1
  2093  078E  1683               	bsf	3,5	;RP0=1, select bank1
  2094  078F  1303               	bcf	3,6	;RP1=0, select bank1
  2095  0790  0867               	movf	(main@Int_2_Loc+1)^(0+128),w
  2096  0791  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0792  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0793  00A3               	movwf	?_printf+3
  2099  0794  1683               	bsf	3,5	;RP0=1, select bank1
  2100  0795  1303               	bcf	3,6	;RP1=0, select bank1
  2101  0796  0866               	movf	main@Int_2_Loc^(0+128),w
  2102  0797  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0798  1303               	bcf	3,6	;RP1=0, select bank0
  2104  0799  00A2               	movwf	?_printf+2
  2105  079A  118A  22D1  118A   	fcall	_printf
  2106                           
  2107                           ;dhry_1.c: 307: printf ("s:%d\n", Int_3_Loc);
  2108  079D  30FF               	movlw	low (STR_25| (0+32768))
  2109  079E  1283               	bcf	3,5	;RP0=0, select bank0
  2110  079F  1303               	bcf	3,6	;RP1=0, select bank0
  2111  07A0  00A0               	movwf	printf@f
  2112  07A1  3088               	movlw	high (STR_25| (0+32768))
  2113  07A2  00A1               	movwf	printf@f+1
  2114  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  2115  07A4  1303               	bcf	3,6	;RP1=0, select bank1
  2116  07A5  0840               	movf	(main@Int_3_Loc+1)^(0+128),w
  2117  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  2118  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  2119  07A8  00A3               	movwf	?_printf+3
  2120  07A9  1683               	bsf	3,5	;RP0=1, select bank1
  2121  07AA  1303               	bcf	3,6	;RP1=0, select bank1
  2122  07AB  083F               	movf	main@Int_3_Loc^(0+128),w
  2123  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  2124  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  2125  07AE  00A2               	movwf	?_printf+2
  2126  07AF  118A  22D1  118A   	fcall	_printf
  2127                           
  2128                           ;dhry_1.c: 309: printf ("t:%d\n", Enum_Loc);
  2129  07B2  3005               	movlw	low (STR_26| (0+32768))
  2130  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  2131  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  2132  07B5  00A0               	movwf	printf@f
  2133  07B6  3089               	movlw	high (STR_26| (0+32768))
  2134  07B7  00A1               	movwf	printf@f+1
  2135  07B8  0857               	movf	main@Enum_Loc,w
  2136  07B9  00AF               	movwf	??_main
  2137  07BA  01B0               	clrf	??_main+1
  2138  07BB  082F               	movf	??_main,w
  2139  07BC  00A2               	movwf	?_printf+2
  2140  07BD  0830               	movf	??_main+1,w
  2141  07BE  00A3               	movwf	?_printf+3
  2142  07BF  118A  22D1  118A   	fcall	_printf
  2143                           
  2144                           ;dhry_1.c: 311: printf ("u:%s\n", Str_1_Loc);
  2145  07C2  3017               	movlw	low (STR_27| (0+32768))
  2146  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  2147  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  2148  07C5  00A0               	movwf	printf@f
  2149  07C6  3089               	movlw	high (STR_27| (0+32768))
  2150  07C7  00A1               	movwf	printf@f+1
  2151  07C8  3033               	movlw	(low (main@Str_1_Loc| 0))& (0+255)
  2152  07C9  00A2               	movwf	low ((?_printf| 0+2))
  2153  07CA  3000               	movlw	0
  2154  07CB  00A3               	movwf	(low ((?_printf| 0+2))+1)
  2155  07CC  118A  22D1  118A   	fcall	_printf
  2156                           
  2157                           ;dhry_1.c: 313: printf ("v:%s\n", Str_2_Loc);
  2158  07CF  301D               	movlw	low (STR_28| (0+32768))
  2159  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  2160  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  2161  07D2  00A0               	movwf	printf@f
  2162  07D3  3089               	movlw	high (STR_28| (0+32768))
  2163  07D4  00A1               	movwf	printf@f+1
  2164  07D5  30A0               	movlw	(low (main@Str_2_Loc| 0))& (0+255)
  2165  07D6  00A2               	movwf	low ((?_printf| 0+2))
  2166  07D7  3000               	movlw	0
  2167  07D8  00A3               	movwf	(low ((?_printf| 0+2))+1)
  2168  07D9  118A  22D1  118A   	fcall	_printf
  2169                           
  2170                           ;dhry_1.c: 315: printf ("\n");
  2171  07DC  3024               	movlw	low ((STR_6+1)| (0+32768))
  2172  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  2173  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  2174  07DF  00A0               	movwf	printf@f
  2175  07E0  3089               	movlw	high ((STR_6+1)| (0+32768))
  2176  07E1  00A1               	movwf	printf@f+1
  2177  07E2  118A  22D1         	fcall	_printf
  2178  07E4  118A  2800         	ljmp	start
  2179  07E6                     __end_of_main:	
  2180                           
  2181                           	psect	text1
  2182  0E8B                     __ptext1:	
  2183 ;; *************** function _strcpy *****************
  2184 ;; Defined at:
  2185 ;;		line 8 in file "D:\P\xc8\v1.44\sources\common\strcpy.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  to              2    0[COMMON] PTR unsigned char 
  2188 ;;		 -> main@Int_1_Loc.variant(34), main@Int_2_Loc.variant(34), temp1.variant(34), temp2.variant(34), 
  2189 ;;		 -> NULL(0), main@Str_2_Loc(31), main@Str_1_Loc(31), Ptr_Glob(2), 
  2190 ;;  from            2    2[COMMON] PTR const unsigned char 
  2191 ;;		 -> STR_5(31), STR_4(31), STR_2(31), STR_1(31), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  cp              2    5[COMMON] PTR unsigned char 
  2194 ;;		 -> main@Int_1_Loc.variant(34), main@Int_2_Loc.variant(34), temp1.variant(34), temp2.variant(34), 
  2195 ;;		 -> NULL(0), main@Str_2_Loc(31), main@Str_1_Loc(31), Ptr_Glob(2), 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  2    0[COMMON] PTR unsigned char 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         4       0       0       0       0
  2206 ;;      Locals:         2       0       0       0       0
  2207 ;;      Temps:          1       0       0       0       0
  2208 ;;      Totals:         7       0       0       0       0
  2209 ;;Total ram usage:        7 bytes
  2210 ;; Hardware stack levels used:    2
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           
  2219                           ;psect for function _strcpy
  2220  0E8B                     _strcpy:	
  2221                           
  2222                           ;incstack = 0
  2223                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2224  0E8B  0870               	movf	strcpy@to,w
  2225  0E8C  00F5               	movwf	strcpy@cp
  2226  0E8D  0871               	movf	strcpy@to+1,w
  2227  0E8E  00F6               	movwf	strcpy@cp+1
  2228  0E8F                     l1765:	
  2229  0E8F  0873               	movf	strcpy@from+1,w
  2230  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0E92  00FF               	movwf	127
  2233  0E93  0872               	movf	strcpy@from,w
  2234  0E94  0084               	movwf	4
  2235  0E95  158A  2000  158A   	fcall	stringtab
  2236  0E98  00F4               	movwf	??_strcpy
  2237  0E99  0875               	movf	strcpy@cp,w
  2238  0E9A  0084               	movwf	4
  2239  0E9B  1783               	bsf	3,7
  2240  0E9C  1C76               	btfss	strcpy@cp+1,0
  2241  0E9D  1383               	bcf	3,7
  2242  0E9E  0874               	movf	??_strcpy,w
  2243  0E9F  0080               	movwf	0
  2244  0EA0  0800               	movf	0,w
  2245  0EA1  1903               	btfsc	3,2
  2246  0EA2  0008               	return
  2247  0EA3  3001               	movlw	1
  2248  0EA4  07F5               	addwf	strcpy@cp,f
  2249  0EA5  1803               	skipnc
  2250  0EA6  0AF6               	incf	strcpy@cp+1,f
  2251  0EA7  3001               	movlw	1
  2252  0EA8  07F2               	addwf	strcpy@from,f
  2253  0EA9  1803               	skipnc
  2254  0EAA  0AF3               	incf	strcpy@from+1,f
  2255  0EAB  2E8F               	goto	l1765
  2256  0EAC                     __end_of_strcpy:	
  2257                           ;	Return value of _strcpy is never used
  2258                           
  2259                           
  2260                           	psect	text2
  2261  02D1                     __ptext2:	
  2262 ;; *************** function _printf *****************
  2263 ;; Defined at:
  2264 ;;		line 464 in file "D:\P\xc8\v1.44\sources\common\doprnt.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2267 ;;		 -> STR_29(2), STR_28(6), STR_27(6), STR_26(6), 
  2268 ;;		 -> STR_25(6), STR_24(6), STR_23(6), STR_22(6), 
  2269 ;;		 -> STR_21(6), STR_20(6), STR_19(6), STR_18(6), 
  2270 ;;		 -> STR_17(6), STR_16(6), STR_15(6), STR_14(6), 
  2271 ;;		 -> STR_13(6), STR_12(6), STR_11(6), STR_10(6), 
  2272 ;;		 -> STR_9(6), STR_8(6), STR_7(6), STR_6(3), 
  2273 ;;		 -> STR_3(2), 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  tmpval          4    0        struct .
  2276 ;;  val             2   12[BANK0 ] unsigned int 
  2277 ;;  cp              2    9[BANK0 ] PTR const unsigned char 
  2278 ;;		 -> temp2.variant.Str_Comp(31), temp1.variant.Str_Comp(31), main@Int_2_Loc.variant.Str_Comp(31), main@Int_1_Loc.vari
      +ant.Str_Comp(31), 
  2279 ;;		 -> STR_30(7), NULL(0), main@Str_2_Loc(31), main@Int_2_Loc(2), 
  2280 ;;		 -> main@Int_1_Loc(2), main@Str_1_Loc(31), Ptr_Glob.variant(34), main@temp2(37), 
  2281 ;;		 -> Next_Ptr_Glob.variant(34), main@temp1(37), 
  2282 ;;  len             2    0        unsigned int 
  2283 ;;  c               1   14[BANK0 ] char 
  2284 ;;  ap              1   11[BANK0 ] PTR void [1]
  2285 ;;		 -> ?_printf(2), 
  2286 ;;  prec            1    8[BANK0 ] char 
  2287 ;;  flag            1    7[BANK0 ] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  2    0[BANK0 ] int 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2297 ;;      Params:         0       4       0       0       0
  2298 ;;      Locals:         0       8       0       0       0
  2299 ;;      Temps:          0       3       0       0       0
  2300 ;;      Totals:         0      15       0       0       0
  2301 ;;Total ram usage:       15 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    1
  2304 ;; This function calls:
  2305 ;;		___lwdiv
  2306 ;;		___lwmod
  2307 ;;		_putch
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _printf
  2315  02D1                     _printf:	
  2316                           
  2317                           ;doprnt.c: 466: va_list ap;
  2318                           ;doprnt.c: 499: signed char c;
  2319                           ;doprnt.c: 506: signed char prec;
  2320                           ;doprnt.c: 508: unsigned char flag;
  2321                           ;doprnt.c: 523: union {
  2322                           ;doprnt.c: 524: unsigned long vd;
  2323                           ;doprnt.c: 525: double integ;
  2324                           ;doprnt.c: 526: } tmpval;
  2325                           ;doprnt.c: 528: unsigned int val;
  2326                           ;doprnt.c: 529: unsigned len;
  2327                           ;doprnt.c: 530: const char * cp;
  2328                           ;doprnt.c: 533: *ap = __va_start();
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2332  02D1  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2333  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2334  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2335  02D4  00A4               	movwf	??_printf
  2336  02D5  0824               	movf	??_printf,w
  2337  02D6  00AB               	movwf	printf@ap
  2338  02D7                     l1833:	
  2339                           ;doprnt.c: 536: while(c = *f++) {
  2340                           
  2341  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2342  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  2343  02D9  0821               	movf	printf@f+1,w
  2344  02DA  00A5               	movwf	??_printf+1
  2345  02DB  0820               	movf	printf@f,w
  2346  02DC  00A4               	movwf	??_printf
  2347  02DD  0AA0               	incf	printf@f,f
  2348  02DE  1903               	skipnz
  2349  02DF  0AA1               	incf	printf@f+1,f
  2350  02E0  0825               	movf	??_printf+1,w
  2351  02E1  00FF               	movwf	127
  2352  02E2  0824               	movf	??_printf,w
  2353  02E3  0084               	movwf	4
  2354  02E4  158A  2000  118A   	fcall	stringtab
  2355  02E7  00A6               	movwf	??_printf+2
  2356  02E8  0826               	movf	??_printf+2,w
  2357  02E9  00AE               	movwf	printf@c
  2358  02EA  082E               	movf	printf@c,w
  2359  02EB  1903               	btfsc	3,2
  2360  02EC  0008               	return
  2361                           
  2362                           ;doprnt.c: 538: if(c != '%')
  2363  02ED  3025               	movlw	37
  2364  02EE  062E               	xorwf	printf@c,w
  2365  02EF  1903               	btfsc	3,2
  2366  02F0  2AF6               	goto	l1773
  2367                           
  2368                           ;doprnt.c: 540: {
  2369                           ;doprnt.c: 541: (putch(c) );
  2370  02F1  082E               	movf	printf@c,w
  2371  02F2  158A  25E4  118A   	fcall	_putch
  2372                           
  2373                           ;doprnt.c: 542: continue;
  2374  02F5  2AD7               	goto	l1833
  2375  02F6                     l1773:	
  2376                           
  2377                           ;doprnt.c: 543: }
  2378                           ;doprnt.c: 548: flag = 0;
  2379  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2380  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2381  02F8  01A7               	clrf	printf@flag
  2382                           
  2383                           ;doprnt.c: 635: switch(c = *f++) {
  2384  02F9  2B3A               	goto	l1797
  2385  02FA                     l1775:	
  2386                           ;doprnt.c: 728: case 's':
  2387                           
  2388                           ;doprnt.c: 698: case 'i':
  2389                           ;doprnt.c: 699: break;
  2390                           
  2391                           ;doprnt.c: 697: case 'd':
  2392                           
  2393                           ;doprnt.c: 638: goto alldone;
  2394                           
  2395                           ;doprnt.c: 637: case 0:
  2396                           
  2397                           
  2398                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2399  02FA  082B               	movf	printf@ap,w
  2400  02FB  0084               	movwf	4
  2401  02FC  1383               	bcf	3,7	;select IRP bank0
  2402  02FD  0800               	movf	0,w
  2403  02FE  00A9               	movwf	printf@cp
  2404  02FF  0A84               	incf	4,f
  2405  0300  0800               	movf	0,w
  2406  0301  0384               	decf	4,f
  2407  0302  00AA               	movwf	printf@cp+1
  2408  0303  3002               	movlw	2
  2409  0304  00A4               	movwf	??_printf
  2410  0305  0824               	movf	??_printf,w
  2411  0306  07AB               	addwf	printf@ap,f
  2412                           
  2413                           ;doprnt.c: 740: if(!cp)
  2414  0307  0829               	movf	printf@cp,w
  2415  0308  042A               	iorwf	printf@cp+1,w
  2416  0309  1D03               	btfss	3,2
  2417  030A  2B0F               	goto	l1787
  2418                           
  2419                           ;doprnt.c: 741: cp = "(null)";
  2420  030B  3098               	movlw	low (STR_30| (0+32768))
  2421  030C  00A9               	movwf	printf@cp
  2422  030D  3088               	movlw	high (STR_30| (0+32768))
  2423  030E  00AA               	movwf	printf@cp+1
  2424  030F                     l1787:	
  2425                           ;doprnt.c: 777: while(*cp)
  2426                           
  2427  030F  082A               	movf	printf@cp+1,w
  2428  0310  00FF               	movwf	127
  2429  0311  0829               	movf	printf@cp,w
  2430  0312  0084               	movwf	4
  2431  0313  158A  2000  118A   	fcall	stringtab
  2432  0316  3A00               	xorlw	0
  2433  0317  1903               	btfsc	3,2
  2434  0318  2AD7               	goto	l1833
  2435                           
  2436                           ;doprnt.c: 778: (putch(*cp++) );
  2437  0319  082A               	movf	printf@cp+1,w
  2438  031A  00FF               	movwf	127
  2439  031B  0829               	movf	printf@cp,w
  2440  031C  0084               	movwf	4
  2441  031D  158A  2000  118A   	fcall	stringtab
  2442  0320  158A  25E4  118A   	fcall	_putch
  2443  0323  3001               	movlw	1
  2444  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0326  07A9               	addwf	printf@cp,f
  2447  0327  1803               	skipnc
  2448  0328  0AAA               	incf	printf@cp+1,f
  2449  0329  2B0F               	goto	l1787
  2450  032A                     l1789:	
  2451                           ;doprnt.c: 784: case 'c':
  2452                           
  2453                           ;doprnt.c: 779: continue;
  2454                           
  2455                           
  2456                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  2457  032A  082B               	movf	printf@ap,w
  2458  032B  0084               	movwf	4
  2459  032C  1383               	bcf	3,7	;select IRP bank0
  2460  032D  0800               	movf	0,w
  2461  032E  00A4               	movwf	??_printf
  2462  032F  0824               	movf	??_printf,w
  2463  0330  00AE               	movwf	printf@c
  2464  0331  3002               	movlw	2
  2465  0332  00A4               	movwf	??_printf
  2466  0333  0824               	movf	??_printf,w
  2467  0334  07AB               	addwf	printf@ap,f
  2468  0335                     l1793:	
  2469                           ;doprnt.c: 802: default:
  2470                           
  2471                           
  2472                           ;doprnt.c: 809: (putch(c) );
  2473  0335  082E               	movf	printf@c,w
  2474  0336  158A  25E4  118A   	fcall	_putch
  2475                           
  2476                           ;doprnt.c: 810: continue;
  2477  0339  2AD7               	goto	l1833
  2478  033A                     l1797:	
  2479                           ;doprnt.c: 822: }
  2480                           
  2481  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2482  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2483  033C  0821               	movf	printf@f+1,w
  2484  033D  00A5               	movwf	??_printf+1
  2485  033E  0820               	movf	printf@f,w
  2486  033F  00A4               	movwf	??_printf
  2487  0340  0AA0               	incf	printf@f,f
  2488  0341  1903               	skipnz
  2489  0342  0AA1               	incf	printf@f+1,f
  2490  0343  0825               	movf	??_printf+1,w
  2491  0344  00FF               	movwf	127
  2492  0345  0824               	movf	??_printf,w
  2493  0346  0084               	movwf	4
  2494  0347  158A  2000  118A   	fcall	stringtab
  2495  034A  00AE               	movwf	printf@c
  2496                           
  2497                           ; Switch size 1, requested type "space"
  2498                           ; Number of cases is 5, Range of values is 0 to 115
  2499                           ; switch strategies available:
  2500                           ; Name         Instructions Cycles
  2501                           ; simple_byte           16     9 (average)
  2502                           ; direct_byte          239     7 (fixed)
  2503                           ; jumptable            260     6 (fixed)
  2504                           ;	Chosen strategy is simple_byte
  2505  034B  3A00               	xorlw	0	; case 0
  2506  034C  1903               	skipnz
  2507  034D  2BE1               	goto	l171
  2508  034E  3A63               	xorlw	99	; case 99
  2509  034F  1903               	skipnz
  2510  0350  2B2A               	goto	l1789
  2511  0351  3A07               	xorlw	7	; case 100
  2512  0352  1903               	skipnz
  2513  0353  2B5B               	goto	l1799
  2514  0354  3A0D               	xorlw	13	; case 105
  2515  0355  1903               	skipnz
  2516  0356  2B5B               	goto	l1799
  2517  0357  3A1A               	xorlw	26	; case 115
  2518  0358  1903               	skipnz
  2519  0359  2AFA               	goto	l1775
  2520  035A  2B35               	goto	l1793
  2521  035B                     l1799:	
  2522                           
  2523                           ;doprnt.c: 1253: {
  2524                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2525  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2526  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2527  035D  082B               	movf	printf@ap,w
  2528  035E  0084               	movwf	4
  2529  035F  1383               	bcf	3,7	;select IRP bank0
  2530  0360  0800               	movf	0,w
  2531  0361  00AC               	movwf	printf@val
  2532  0362  0A84               	incf	4,f
  2533  0363  0800               	movf	0,w
  2534  0364  00AD               	movwf	printf@val+1
  2535  0365  3002               	movlw	2
  2536  0366  00A4               	movwf	??_printf
  2537  0367  0824               	movf	??_printf,w
  2538  0368  07AB               	addwf	printf@ap,f
  2539                           
  2540                           ;doprnt.c: 1261: if((int)val < 0) {
  2541  0369  1FAD               	btfss	printf@val+1,7
  2542  036A  2B74               	goto	l1809
  2543                           
  2544                           ;doprnt.c: 1262: flag |= 0x03;
  2545  036B  3003               	movlw	3
  2546  036C  00A4               	movwf	??_printf
  2547  036D  0824               	movf	??_printf,w
  2548  036E  04A7               	iorwf	printf@flag,f
  2549                           
  2550                           ;doprnt.c: 1263: val = -val;
  2551  036F  09AC               	comf	printf@val,f
  2552  0370  09AD               	comf	printf@val+1,f
  2553  0371  0AAC               	incf	printf@val,f
  2554  0372  1903               	skipnz
  2555  0373  0AAD               	incf	printf@val+1,f
  2556  0374                     l1809:	
  2557                           
  2558                           ;doprnt.c: 1264: }
  2559                           ;doprnt.c: 1266: }
  2560                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2561  0374  01AE               	clrf	printf@c
  2562  0375  0AAE               	incf	printf@c,f
  2563  0376  3005               	movlw	5
  2564  0377  062E               	xorwf	printf@c,w
  2565  0378  1903               	btfsc	3,2
  2566  0379  2B9B               	goto	l1821
  2567  037A                     l1815:	
  2568                           
  2569                           ;doprnt.c: 1306: if(val < dpowers[c])
  2570  037A  082E               	movf	printf@c,w
  2571  037B  00A4               	movwf	??_printf
  2572  037C  0724               	addwf	??_printf,w
  2573  037D  3E12               	addlw	low (_dpowers| (0+32768))
  2574  037E  0084               	movwf	4
  2575  037F  3088               	movlw	high (_dpowers| (0+32768))
  2576  0380  1803               	skipnc
  2577  0381  3E01               	addlw	1
  2578  0382  00FF               	movwf	127
  2579  0383  158A  2000  118A   	fcall	stringtab
  2580  0386  00A5               	movwf	??_printf+1
  2581  0387  158A  2000  118A   	fcall	stringtab
  2582  038A  00A6               	movwf	??_printf+2
  2583  038B  0826               	movf	??_printf+2,w
  2584  038C  022D               	subwf	printf@val+1,w
  2585  038D  1D03               	skipz
  2586  038E  2B91               	goto	u1655
  2587  038F  0825               	movf	??_printf+1,w
  2588  0390  022C               	subwf	printf@val,w
  2589  0391                     u1655:	
  2590  0391  1C03               	btfss	3,0
  2591  0392  2B9B               	goto	l1821
  2592                           
  2593                           ;doprnt.c: 1307: break;
  2594  0393  3001               	movlw	1
  2595  0394  00A4               	movwf	??_printf
  2596  0395  0824               	movf	??_printf,w
  2597  0396  07AE               	addwf	printf@c,f
  2598  0397  3005               	movlw	5
  2599  0398  062E               	xorwf	printf@c,w
  2600  0399  1D03               	btfss	3,2
  2601  039A  2B7A               	goto	l1815
  2602  039B                     l1821:	
  2603                           
  2604                           ;doprnt.c: 1422: {
  2605                           ;doprnt.c: 1438: if(flag & 0x03)
  2606  039B  0827               	movf	printf@flag,w
  2607  039C  3903               	andlw	3
  2608  039D  1903               	btfsc	3,2
  2609  039E  2BA3               	goto	l1825
  2610                           
  2611                           ;doprnt.c: 1439: (putch('-') );
  2612  039F  302D               	movlw	45
  2613  03A0  158A  25E4  118A   	fcall	_putch
  2614  03A3                     l1825:	
  2615                           
  2616                           ;doprnt.c: 1469: }
  2617                           ;doprnt.c: 1472: prec = c;
  2618  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2619  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2620  03A5  082E               	movf	printf@c,w
  2621  03A6  00A4               	movwf	??_printf
  2622  03A7  0824               	movf	??_printf,w
  2623  03A8  00A8               	movwf	printf@prec
  2624  03A9                     l1831:	
  2625                           ;doprnt.c: 1474: while(prec--) {
  2626                           
  2627  03A9  30FF               	movlw	255
  2628  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2629  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2630  03AC  00A4               	movwf	??_printf
  2631  03AD  0824               	movf	??_printf,w
  2632  03AE  07A8               	addwf	printf@prec,f
  2633  03AF  0A28               	incf	printf@prec,w
  2634  03B0  1903               	btfsc	3,2
  2635  03B1  2AD7               	goto	l1833
  2636                           
  2637                           ;doprnt.c: 1478: {
  2638                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2639  03B2  300A               	movlw	10
  2640  03B3  00F8               	movwf	___lwmod@divisor
  2641  03B4  3000               	movlw	0
  2642  03B5  00F9               	movwf	___lwmod@divisor+1
  2643  03B6  0828               	movf	printf@prec,w
  2644  03B7  00A4               	movwf	??_printf
  2645  03B8  0724               	addwf	??_printf,w
  2646  03B9  3E12               	addlw	low (_dpowers| (0+32768))
  2647  03BA  0084               	movwf	4
  2648  03BB  3088               	movlw	high (_dpowers| (0+32768))
  2649  03BC  1803               	skipnc
  2650  03BD  3E01               	addlw	1
  2651  03BE  00FF               	movwf	127
  2652  03BF  158A  2000  118A   	fcall	stringtab
  2653  03C2  00F0               	movwf	___lwdiv@divisor
  2654  03C3  158A  2000  118A   	fcall	stringtab
  2655  03C6  00F1               	movwf	___lwdiv@divisor+1
  2656  03C7  082D               	movf	printf@val+1,w
  2657  03C8  00F3               	movwf	___lwdiv@dividend+1
  2658  03C9  082C               	movf	printf@val,w
  2659  03CA  00F2               	movwf	___lwdiv@dividend
  2660  03CB  158A  276B  118A   	fcall	___lwdiv
  2661  03CE  0871               	movf	?___lwdiv+1,w
  2662  03CF  00FB               	movwf	___lwmod@dividend+1
  2663  03D0  0870               	movf	?___lwdiv,w
  2664  03D1  00FA               	movwf	___lwmod@dividend
  2665  03D2  118A  2005  118A   	fcall	___lwmod
  2666  03D5  0878               	movf	?___lwmod,w
  2667  03D6  3E30               	addlw	48
  2668  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2669  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2670  03D9  00A5               	movwf	??_printf+1
  2671  03DA  0825               	movf	??_printf+1,w
  2672  03DB  00AE               	movwf	printf@c
  2673                           
  2674                           ;doprnt.c: 1523: }
  2675                           ;doprnt.c: 1524: (putch(c) );
  2676  03DC  082E               	movf	printf@c,w
  2677  03DD  158A  25E4  118A   	fcall	_putch
  2678  03E0  2BA9               	goto	l1831
  2679  03E1                     l171:	
  2680                           ;doprnt.c: 1540: return 0;
  2681                           ;	Return value of _printf is never used
  2682                           
  2683                           ;doprnt.c: 1525: }
  2684                           ;doprnt.c: 1533: }
  2685                           ;doprnt.c: 1535: alldone:
  2686                           
  2687  03E1  0008               	return
  2688  03E2                     __end_of_printf:	
  2689                           
  2690                           	psect	text3
  2691  0DE4                     __ptext3:	
  2692 ;; *************** function _putch *****************
  2693 ;; Defined at:
  2694 ;;		line 85 in file "dhry_1.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  c               1    wreg     unsigned char 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  c               1    2[COMMON] unsigned char 
  2699 ;;  PORTB           2    3[COMMON] volatile int 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       0       0       0       0
  2710 ;;      Locals:         3       0       0       0       0
  2711 ;;      Temps:          2       0       0       0       0
  2712 ;;      Totals:         5       0       0       0       0
  2713 ;;Total ram usage:        5 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_printf
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _putch
  2724  0DE4                     _putch:	
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _putch: [wreg]
  2728                           ;putch@c stored from wreg
  2729  0DE4  00F2               	movwf	putch@c
  2730                           
  2731                           ;dhry_1.c: 87: volatile PORTB = c;
  2732  0DE5  0872               	movf	putch@c,w
  2733  0DE6  00F0               	movwf	??_putch
  2734  0DE7  01F1               	clrf	??_putch+1
  2735  0DE8  0870               	movf	??_putch,w
  2736  0DE9  00F3               	movwf	putch@PORTB	;volatile
  2737  0DEA  0871               	movf	??_putch+1,w
  2738  0DEB  00F4               	movwf	putch@PORTB+1	;volatile
  2739  0DEC  0008               	return
  2740  0DED                     __end_of_putch:	
  2741                           
  2742                           	psect	text4
  2743  0005                     __ptext4:	
  2744 ;; *************** function ___lwmod *****************
  2745 ;; Defined at:
  2746 ;;		line 6 in file "D:\P\xc8\v1.44\sources\common\lwmod.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  divisor         2    8[COMMON] unsigned int 
  2749 ;;  dividend        2   10[COMMON] unsigned int 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  counter         1   13[COMMON] unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  2    8[COMMON] unsigned int 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2761 ;;      Params:         4       0       0       0       0
  2762 ;;      Locals:         1       0       0       0       0
  2763 ;;      Temps:          1       0       0       0       0
  2764 ;;      Totals:         6       0       0       0       0
  2765 ;;Total ram usage:        6 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_printf
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           
  2775                           ;psect for function ___lwmod
  2776  0005                     ___lwmod:	
  2777                           
  2778                           ;incstack = 0
  2779                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2780  0005  0878               	movf	___lwmod@divisor,w
  2781  0006  0479               	iorwf	___lwmod@divisor+1,w
  2782  0007  1903               	btfsc	3,2
  2783  0008  2832               	goto	l1705
  2784  0009  01FD               	clrf	___lwmod@counter
  2785  000A  0AFD               	incf	___lwmod@counter,f
  2786  000B                     l1695:	
  2787  000B  1BF9               	btfsc	___lwmod@divisor+1,7
  2788  000C  2819               	goto	l1697
  2789  000D  3001               	movlw	1
  2790  000E                     u1475:	
  2791  000E  1003               	clrc
  2792  000F  0DF8               	rlf	___lwmod@divisor,f
  2793  0010  0DF9               	rlf	___lwmod@divisor+1,f
  2794  0011  3EFF               	addlw	-1
  2795  0012  1D03               	skipz
  2796  0013  280E               	goto	u1475
  2797  0014  3001               	movlw	1
  2798  0015  00FC               	movwf	??___lwmod
  2799  0016  087C               	movf	??___lwmod,w
  2800  0017  07FD               	addwf	___lwmod@counter,f
  2801  0018  280B               	goto	l1695
  2802  0019                     l1697:	
  2803  0019  0879               	movf	___lwmod@divisor+1,w
  2804  001A  027B               	subwf	___lwmod@dividend+1,w
  2805  001B  1D03               	skipz
  2806  001C  281F               	goto	u1495
  2807  001D  0878               	movf	___lwmod@divisor,w
  2808  001E  027A               	subwf	___lwmod@dividend,w
  2809  001F                     u1495:	
  2810  001F  1C03               	skipc
  2811  0020  2827               	goto	l1701
  2812  0021  0878               	movf	___lwmod@divisor,w
  2813  0022  02FA               	subwf	___lwmod@dividend,f
  2814  0023  0879               	movf	___lwmod@divisor+1,w
  2815  0024  1C03               	skipc
  2816  0025  03FB               	decf	___lwmod@dividend+1,f
  2817  0026  02FB               	subwf	___lwmod@dividend+1,f
  2818  0027                     l1701:	
  2819  0027  3001               	movlw	1
  2820  0028                     u1505:	
  2821  0028  1003               	clrc
  2822  0029  0CF9               	rrf	___lwmod@divisor+1,f
  2823  002A  0CF8               	rrf	___lwmod@divisor,f
  2824  002B  3EFF               	addlw	-1
  2825  002C  1D03               	skipz
  2826  002D  2828               	goto	u1505
  2827  002E  3001               	movlw	1
  2828  002F  02FD               	subwf	___lwmod@counter,f
  2829  0030  1D03               	btfss	3,2
  2830  0031  2819               	goto	l1697
  2831  0032                     l1705:	
  2832  0032  087B               	movf	___lwmod@dividend+1,w
  2833  0033  00F9               	movwf	?___lwmod+1
  2834  0034  087A               	movf	___lwmod@dividend,w
  2835  0035  00F8               	movwf	?___lwmod
  2836  0036  0008               	return
  2837  0037                     __end_of___lwmod:	
  2838                           
  2839                           	psect	text5
  2840  0F6B                     __ptext5:	
  2841 ;; *************** function ___lwdiv *****************
  2842 ;; Defined at:
  2843 ;;		line 6 in file "D:\P\xc8\v1.44\sources\common\lwdiv.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  divisor         2    0[COMMON] unsigned int 
  2846 ;;  dividend        2    2[COMMON] unsigned int 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  quotient        2    6[COMMON] unsigned int 
  2849 ;;  counter         1    5[COMMON] unsigned char 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2    0[COMMON] unsigned int 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2859 ;;      Params:         4       0       0       0       0
  2860 ;;      Locals:         3       0       0       0       0
  2861 ;;      Temps:          1       0       0       0       0
  2862 ;;      Totals:         8       0       0       0       0
  2863 ;;Total ram usage:        8 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_printf
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function ___lwdiv
  2874  0F6B                     ___lwdiv:	
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2878  0F6B  01F6               	clrf	___lwdiv@quotient
  2879  0F6C  01F7               	clrf	___lwdiv@quotient+1
  2880  0F6D  0870               	movf	___lwdiv@divisor,w
  2881  0F6E  0471               	iorwf	___lwdiv@divisor+1,w
  2882  0F6F  1903               	btfsc	3,2
  2883  0F70  2FA2               	goto	l1683
  2884  0F71  01F5               	clrf	___lwdiv@counter
  2885  0F72  0AF5               	incf	___lwdiv@counter,f
  2886  0F73                     l1671:	
  2887  0F73  1BF1               	btfsc	___lwdiv@divisor+1,7
  2888  0F74  2F81               	goto	l1673
  2889  0F75  3001               	movlw	1
  2890  0F76                     u1405:	
  2891  0F76  1003               	clrc
  2892  0F77  0DF0               	rlf	___lwdiv@divisor,f
  2893  0F78  0DF1               	rlf	___lwdiv@divisor+1,f
  2894  0F79  3EFF               	addlw	-1
  2895  0F7A  1D03               	skipz
  2896  0F7B  2F76               	goto	u1405
  2897  0F7C  3001               	movlw	1
  2898  0F7D  00F4               	movwf	??___lwdiv
  2899  0F7E  0874               	movf	??___lwdiv,w
  2900  0F7F  07F5               	addwf	___lwdiv@counter,f
  2901  0F80  2F73               	goto	l1671
  2902  0F81                     l1673:	
  2903  0F81  3001               	movlw	1
  2904  0F82                     u1425:	
  2905  0F82  1003               	clrc
  2906  0F83  0DF6               	rlf	___lwdiv@quotient,f
  2907  0F84  0DF7               	rlf	___lwdiv@quotient+1,f
  2908  0F85  3EFF               	addlw	-1
  2909  0F86  1D03               	skipz
  2910  0F87  2F82               	goto	u1425
  2911  0F88  0871               	movf	___lwdiv@divisor+1,w
  2912  0F89  0273               	subwf	___lwdiv@dividend+1,w
  2913  0F8A  1D03               	skipz
  2914  0F8B  2F8E               	goto	u1435
  2915  0F8C  0870               	movf	___lwdiv@divisor,w
  2916  0F8D  0272               	subwf	___lwdiv@dividend,w
  2917  0F8E                     u1435:	
  2918  0F8E  1C03               	skipc
  2919  0F8F  2F97               	goto	l1679
  2920  0F90  0870               	movf	___lwdiv@divisor,w
  2921  0F91  02F2               	subwf	___lwdiv@dividend,f
  2922  0F92  0871               	movf	___lwdiv@divisor+1,w
  2923  0F93  1C03               	skipc
  2924  0F94  03F3               	decf	___lwdiv@dividend+1,f
  2925  0F95  02F3               	subwf	___lwdiv@dividend+1,f
  2926  0F96  1476               	bsf	___lwdiv@quotient,0
  2927  0F97                     l1679:	
  2928  0F97  3001               	movlw	1
  2929  0F98                     u1445:	
  2930  0F98  1003               	clrc
  2931  0F99  0CF1               	rrf	___lwdiv@divisor+1,f
  2932  0F9A  0CF0               	rrf	___lwdiv@divisor,f
  2933  0F9B  3EFF               	addlw	-1
  2934  0F9C  1D03               	skipz
  2935  0F9D  2F98               	goto	u1445
  2936  0F9E  3001               	movlw	1
  2937  0F9F  02F5               	subwf	___lwdiv@counter,f
  2938  0FA0  1D03               	btfss	3,2
  2939  0FA1  2F81               	goto	l1673
  2940  0FA2                     l1683:	
  2941  0FA2  0877               	movf	___lwdiv@quotient+1,w
  2942  0FA3  00F1               	movwf	?___lwdiv+1
  2943  0FA4  0876               	movf	___lwdiv@quotient,w
  2944  0FA5  00F0               	movwf	?___lwdiv
  2945  0FA6  0008               	return
  2946  0FA7                     __end_of___lwdiv:	
  2947                           
  2948                           	psect	text6
  2949  0E6A                     __ptext6:	
  2950 ;; *************** function ___wmul *****************
  2951 ;; Defined at:
  2952 ;;		line 15 in file "D:\P\xc8\v1.44\sources\common\Umul16.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  multiplier      2    0[COMMON] unsigned int 
  2955 ;;  multiplicand    2    2[COMMON] unsigned int 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  product         2    4[COMMON] unsigned int 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  2    0[COMMON] unsigned int 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2967 ;;      Params:         4       0       0       0       0
  2968 ;;      Locals:         2       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0
  2970 ;;      Totals:         6       0       0       0       0
  2971 ;;Total ram usage:        6 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function ___wmul
  2982  0E6A                     ___wmul:	
  2983                           
  2984                           ;incstack = 0
  2985                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2986  0E6A  01F4               	clrf	___wmul@product
  2987  0E6B  01F5               	clrf	___wmul@product+1
  2988  0E6C                     l1881:	
  2989  0E6C  1C70               	btfss	___wmul@multiplier,0
  2990  0E6D  2E74               	goto	l255
  2991  0E6E  0872               	movf	___wmul@multiplicand,w
  2992  0E6F  07F4               	addwf	___wmul@product,f
  2993  0E70  1803               	skipnc
  2994  0E71  0AF5               	incf	___wmul@product+1,f
  2995  0E72  0873               	movf	___wmul@multiplicand+1,w
  2996  0E73  07F5               	addwf	___wmul@product+1,f
  2997  0E74                     l255:	
  2998  0E74  3001               	movlw	1
  2999  0E75                     u1765:	
  3000  0E75  1003               	clrc
  3001  0E76  0DF2               	rlf	___wmul@multiplicand,f
  3002  0E77  0DF3               	rlf	___wmul@multiplicand+1,f
  3003  0E78  3EFF               	addlw	-1
  3004  0E79  1D03               	skipz
  3005  0E7A  2E75               	goto	u1765
  3006  0E7B  3001               	movlw	1
  3007  0E7C                     u1775:	
  3008  0E7C  1003               	clrc
  3009  0E7D  0CF1               	rrf	___wmul@multiplier+1,f
  3010  0E7E  0CF0               	rrf	___wmul@multiplier,f
  3011  0E7F  3EFF               	addlw	-1
  3012  0E80  1D03               	skipz
  3013  0E81  2E7C               	goto	u1775
  3014  0E82  0870               	movf	___wmul@multiplier,w
  3015  0E83  0471               	iorwf	___wmul@multiplier+1,w
  3016  0E84  1D03               	btfss	3,2
  3017  0E85  2E6C               	goto	l1881
  3018  0E86  0875               	movf	___wmul@product+1,w
  3019  0E87  00F1               	movwf	?___wmul+1
  3020  0E88  0874               	movf	___wmul@product,w
  3021  0E89  00F0               	movwf	?___wmul
  3022  0E8A  0008               	return
  3023  0E8B                     __end_of___wmul:	
  3024                           
  3025                           	psect	text7
  3026  0FA7                     __ptext7:	
  3027 ;; *************** function ___awdiv *****************
  3028 ;; Defined at:
  3029 ;;		line 6 in file "D:\P\xc8\v1.44\sources\common\awdiv.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  divisor         2    0[COMMON] int 
  3032 ;;  dividend        2    2[COMMON] int 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  quotient        2    7[COMMON] int 
  3035 ;;  sign            1    6[COMMON] unsigned char 
  3036 ;;  counter         1    5[COMMON] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2    0[COMMON] int 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3046 ;;      Params:         4       0       0       0       0
  3047 ;;      Locals:         4       0       0       0       0
  3048 ;;      Temps:          1       0       0       0       0
  3049 ;;      Totals:         9       0       0       0       0
  3050 ;;Total ram usage:        9 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           
  3060                           ;psect for function ___awdiv
  3061  0FA7                     ___awdiv:	
  3062                           
  3063                           ;incstack = 0
  3064                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3065  0FA7  01F6               	clrf	___awdiv@sign
  3066  0FA8  1FF1               	btfss	___awdiv@divisor+1,7
  3067  0FA9  2FB1               	goto	l1901
  3068  0FAA  09F0               	comf	___awdiv@divisor,f
  3069  0FAB  09F1               	comf	___awdiv@divisor+1,f
  3070  0FAC  0AF0               	incf	___awdiv@divisor,f
  3071  0FAD  1903               	skipnz
  3072  0FAE  0AF1               	incf	___awdiv@divisor+1,f
  3073  0FAF  01F6               	clrf	___awdiv@sign
  3074  0FB0  0AF6               	incf	___awdiv@sign,f
  3075  0FB1                     l1901:	
  3076  0FB1  1FF3               	btfss	___awdiv@dividend+1,7
  3077  0FB2  2FBC               	goto	l1907
  3078  0FB3  09F2               	comf	___awdiv@dividend,f
  3079  0FB4  09F3               	comf	___awdiv@dividend+1,f
  3080  0FB5  0AF2               	incf	___awdiv@dividend,f
  3081  0FB6  1903               	skipnz
  3082  0FB7  0AF3               	incf	___awdiv@dividend+1,f
  3083  0FB8  3001               	movlw	1
  3084  0FB9  00F4               	movwf	??___awdiv
  3085  0FBA  0874               	movf	??___awdiv,w
  3086  0FBB  06F6               	xorwf	___awdiv@sign,f
  3087  0FBC                     l1907:	
  3088  0FBC  01F7               	clrf	___awdiv@quotient
  3089  0FBD  01F8               	clrf	___awdiv@quotient+1
  3090  0FBE  0870               	movf	___awdiv@divisor,w
  3091  0FBF  0471               	iorwf	___awdiv@divisor+1,w
  3092  0FC0  1903               	btfsc	3,2
  3093  0FC1  2FF3               	goto	l1929
  3094  0FC2  01F5               	clrf	___awdiv@counter
  3095  0FC3  0AF5               	incf	___awdiv@counter,f
  3096  0FC4                     l1917:	
  3097  0FC4  1BF1               	btfsc	___awdiv@divisor+1,7
  3098  0FC5  2FD2               	goto	l1919
  3099  0FC6  3001               	movlw	1
  3100  0FC7                     u1825:	
  3101  0FC7  1003               	clrc
  3102  0FC8  0DF0               	rlf	___awdiv@divisor,f
  3103  0FC9  0DF1               	rlf	___awdiv@divisor+1,f
  3104  0FCA  3EFF               	addlw	-1
  3105  0FCB  1D03               	skipz
  3106  0FCC  2FC7               	goto	u1825
  3107  0FCD  3001               	movlw	1
  3108  0FCE  00F4               	movwf	??___awdiv
  3109  0FCF  0874               	movf	??___awdiv,w
  3110  0FD0  07F5               	addwf	___awdiv@counter,f
  3111  0FD1  2FC4               	goto	l1917
  3112  0FD2                     l1919:	
  3113  0FD2  3001               	movlw	1
  3114  0FD3                     u1845:	
  3115  0FD3  1003               	clrc
  3116  0FD4  0DF7               	rlf	___awdiv@quotient,f
  3117  0FD5  0DF8               	rlf	___awdiv@quotient+1,f
  3118  0FD6  3EFF               	addlw	-1
  3119  0FD7  1D03               	skipz
  3120  0FD8  2FD3               	goto	u1845
  3121  0FD9  0871               	movf	___awdiv@divisor+1,w
  3122  0FDA  0273               	subwf	___awdiv@dividend+1,w
  3123  0FDB  1D03               	skipz
  3124  0FDC  2FDF               	goto	u1855
  3125  0FDD  0870               	movf	___awdiv@divisor,w
  3126  0FDE  0272               	subwf	___awdiv@dividend,w
  3127  0FDF                     u1855:	
  3128  0FDF  1C03               	skipc
  3129  0FE0  2FE8               	goto	l1925
  3130  0FE1  0870               	movf	___awdiv@divisor,w
  3131  0FE2  02F2               	subwf	___awdiv@dividend,f
  3132  0FE3  0871               	movf	___awdiv@divisor+1,w
  3133  0FE4  1C03               	skipc
  3134  0FE5  03F3               	decf	___awdiv@dividend+1,f
  3135  0FE6  02F3               	subwf	___awdiv@dividend+1,f
  3136  0FE7  1477               	bsf	___awdiv@quotient,0
  3137  0FE8                     l1925:	
  3138  0FE8  3001               	movlw	1
  3139  0FE9                     u1865:	
  3140  0FE9  1003               	clrc
  3141  0FEA  0CF1               	rrf	___awdiv@divisor+1,f
  3142  0FEB  0CF0               	rrf	___awdiv@divisor,f
  3143  0FEC  3EFF               	addlw	-1
  3144  0FED  1D03               	skipz
  3145  0FEE  2FE9               	goto	u1865
  3146  0FEF  3001               	movlw	1
  3147  0FF0  02F5               	subwf	___awdiv@counter,f
  3148  0FF1  1D03               	btfss	3,2
  3149  0FF2  2FD2               	goto	l1919
  3150  0FF3                     l1929:	
  3151  0FF3  0876               	movf	___awdiv@sign,w
  3152  0FF4  1903               	btfsc	3,2
  3153  0FF5  2FFB               	goto	l1933
  3154  0FF6  09F7               	comf	___awdiv@quotient,f
  3155  0FF7  09F8               	comf	___awdiv@quotient+1,f
  3156  0FF8  0AF7               	incf	___awdiv@quotient,f
  3157  0FF9  1903               	skipnz
  3158  0FFA  0AF8               	incf	___awdiv@quotient+1,f
  3159  0FFB                     l1933:	
  3160  0FFB  0878               	movf	___awdiv@quotient+1,w
  3161  0FFC  00F1               	movwf	?___awdiv+1
  3162  0FFD  0877               	movf	___awdiv@quotient,w
  3163  0FFE  00F0               	movwf	?___awdiv
  3164  0FFF  0008               	return
  3165  1000                     __end_of___awdiv:	
  3166                           
  3167                           	psect	text8
  3168  0114                     __ptext8:	
  3169 ;; *************** function _Proc_8 *****************
  3170 ;; Defined at:
  3171 ;;		line 89 in file "dhry_2.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  Arr_1_Par_Re    1    wreg     PTR int 
  3174 ;;		 -> Arr_1_Glob(50), 
  3175 ;;  Arr_2_Par_Re    1    4[COMMON] PTR int [50]
  3176 ;;		 -> Arr_2_Glob(84), 
  3177 ;;  Int_1_Par_Va    2    5[COMMON] int 
  3178 ;;  Int_2_Par_Va    2    7[COMMON] int 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  Arr_1_Par_Re    1   11[COMMON] PTR int 
  3181 ;;		 -> Arr_1_Glob(50), 
  3182 ;;  Int_Loc         2   12[COMMON] int 
  3183 ;;  Int_Index       2    9[COMMON] int 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  2    4[COMMON] int 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3193 ;;      Params:         5       0       0       0       0
  3194 ;;      Locals:         5       0       0       0       0
  3195 ;;      Temps:          0       8       0       0       0
  3196 ;;      Totals:        10       8       0       0       0
  3197 ;;Total ram usage:       18 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    1
  3200 ;; This function calls:
  3201 ;;		___bmul
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           
  3208                           ;psect for function _Proc_8
  3209  0114                     _Proc_8:	
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _Proc_8: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3213                           ;Proc_8@Arr_1_Par_Ref stored from wreg
  3214  0114  00FB               	movwf	Proc_8@Arr_1_Par_Ref
  3215                           
  3216                           ;dhry_2.c: 95: Arr_2_Dim Arr_2_Par_Ref;
  3217                           ;dhry_2.c: 96: int Int_1_Par_Val;
  3218                           ;dhry_2.c: 97: int Int_2_Par_Val;
  3219                           ;dhry_2.c: 98: {
  3220                           ;dhry_2.c: 99: One_Fifty Int_Index;
  3221                           ;dhry_2.c: 100: One_Fifty Int_Loc;
  3222                           ;dhry_2.c: 103: Int_Loc = Int_1_Par_Val + 5;
  3223  0115  0875               	movf	Proc_8@Int_1_Par_Val,w
  3224  0116  3E05               	addlw	5
  3225  0117  00FC               	movwf	Proc_8@Int_Loc
  3226  0118  0876               	movf	Proc_8@Int_1_Par_Val+1,w
  3227  0119  1803               	skipnc
  3228  011A  3E01               	addlw	1
  3229  011B  3E00               	addlw	0
  3230  011C  00FD               	movwf	Proc_8@Int_Loc+1
  3231                           
  3232                           ;dhry_2.c: 104: Arr_1_Par_Ref [Int_Loc] = Int_2_Par_Val;
  3233  011D  087C               	movf	Proc_8@Int_Loc,w
  3234  011E  1283               	bcf	3,5	;RP0=0, select bank0
  3235  011F  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0120  00A0               	movwf	??_Proc_8
  3237  0121  0720               	addwf	??_Proc_8,w
  3238  0122  077B               	addwf	Proc_8@Arr_1_Par_Ref,w
  3239  0123  00A1               	movwf	??_Proc_8+1
  3240  0124  0821               	movf	??_Proc_8+1,w
  3241  0125  0084               	movwf	4
  3242  0126  0877               	movf	Proc_8@Int_2_Par_Val,w
  3243  0127  1783               	bsf	3,7	;select IRP bank2
  3244  0128  0080               	movwf	0
  3245  0129  0A84               	incf	4,f
  3246  012A  0878               	movf	Proc_8@Int_2_Par_Val+1,w
  3247  012B  0080               	movwf	0
  3248                           
  3249                           ;dhry_2.c: 105: Arr_1_Par_Ref [Int_Loc+1] = Arr_1_Par_Ref [Int_Loc];
  3250  012C  087C               	movf	Proc_8@Int_Loc,w
  3251  012D  00A0               	movwf	??_Proc_8
  3252  012E  0720               	addwf	??_Proc_8,w
  3253  012F  077B               	addwf	Proc_8@Arr_1_Par_Ref,w
  3254  0130  00A1               	movwf	??_Proc_8+1
  3255  0131  0821               	movf	??_Proc_8+1,w
  3256  0132  0084               	movwf	4
  3257  0133  0800               	movf	0,w
  3258  0134  00A2               	movwf	??_Proc_8+2
  3259  0135  0A84               	incf	4,f
  3260  0136  0800               	movf	0,w
  3261  0137  00A3               	movwf	??_Proc_8+3
  3262  0138  087C               	movf	Proc_8@Int_Loc,w
  3263  0139  00A4               	movwf	??_Proc_8+4
  3264  013A  0724               	addwf	??_Proc_8+4,w
  3265  013B  3E02               	addlw	2
  3266  013C  077B               	addwf	Proc_8@Arr_1_Par_Ref,w
  3267  013D  00A5               	movwf	??_Proc_8+5
  3268  013E  0825               	movf	??_Proc_8+5,w
  3269  013F  0084               	movwf	4
  3270  0140  0822               	movf	??_Proc_8+2,w
  3271  0141  0080               	movwf	0
  3272  0142  0A84               	incf	4,f
  3273  0143  0823               	movf	??_Proc_8+3,w
  3274  0144  0080               	movwf	0
  3275                           
  3276                           ;dhry_2.c: 106: Arr_1_Par_Ref [Int_Loc+30] = Int_Loc;
  3277  0145  087C               	movf	Proc_8@Int_Loc,w
  3278  0146  00A0               	movwf	??_Proc_8
  3279  0147  0720               	addwf	??_Proc_8,w
  3280  0148  3E3C               	addlw	60
  3281  0149  077B               	addwf	Proc_8@Arr_1_Par_Ref,w
  3282  014A  00A1               	movwf	??_Proc_8+1
  3283  014B  0821               	movf	??_Proc_8+1,w
  3284  014C  0084               	movwf	4
  3285  014D  087C               	movf	Proc_8@Int_Loc,w
  3286  014E  0080               	movwf	0
  3287  014F  0A84               	incf	4,f
  3288  0150  087D               	movf	Proc_8@Int_Loc+1,w
  3289  0151  0080               	movwf	0
  3290                           
  3291                           ;dhry_2.c: 107: for (Int_Index = Int_Loc; Int_Index <= Int_Loc+1; ++Int_Index)
  3292  0152  087D               	movf	Proc_8@Int_Loc+1,w
  3293  0153  00FA               	movwf	Proc_8@Int_Index+1
  3294  0154  087C               	movf	Proc_8@Int_Loc,w
  3295  0155  00F9               	movwf	Proc_8@Int_Index
  3296  0156                     l1723:	
  3297  0156  087C               	movf	Proc_8@Int_Loc,w
  3298  0157  3E01               	addlw	1
  3299  0158  00A0               	movwf	??_Proc_8
  3300  0159  087D               	movf	Proc_8@Int_Loc+1,w
  3301  015A  1803               	skipnc
  3302  015B  3E01               	addlw	1
  3303  015C  3E00               	addlw	0
  3304  015D  00A1               	movwf	??_Proc_8+1
  3305  015E  0821               	movf	??_Proc_8+1,w
  3306  015F  3A80               	xorlw	128
  3307  0160  00A2               	movwf	??_Proc_8+2
  3308  0161  087A               	movf	Proc_8@Int_Index+1,w
  3309  0162  3A80               	xorlw	128
  3310  0163  0222               	subwf	??_Proc_8+2,w
  3311  0164  1D03               	skipz
  3312  0165  2968               	goto	u1525
  3313  0166  0879               	movf	Proc_8@Int_Index,w
  3314  0167  0220               	subwf	??_Proc_8,w
  3315  0168                     u1525:	
  3316  0168  1C03               	btfss	3,0
  3317  0169  298C               	goto	l1725
  3318                           
  3319                           ;dhry_2.c: 108: Arr_2_Par_Ref [Int_Loc] [Int_Index] = Int_Loc;
  3320  016A  3064               	movlw	100
  3321  016B  1283               	bcf	3,5	;RP0=0, select bank0
  3322  016C  1303               	bcf	3,6	;RP1=0, select bank0
  3323  016D  00A0               	movwf	??_Proc_8
  3324  016E  0820               	movf	??_Proc_8,w
  3325  016F  00F0               	movwf	___bmul@multiplicand
  3326  0170  087C               	movf	Proc_8@Int_Loc,w
  3327  0171  158A  2609  118A   	fcall	___bmul
  3328  0174  0774               	addwf	Proc_8@Arr_2_Par_Ref,w
  3329  0175  1283               	bcf	3,5	;RP0=0, select bank0
  3330  0176  1303               	bcf	3,6	;RP1=0, select bank0
  3331  0177  00A1               	movwf	??_Proc_8+1
  3332  0178  0879               	movf	Proc_8@Int_Index,w
  3333  0179  00A2               	movwf	??_Proc_8+2
  3334  017A  0722               	addwf	??_Proc_8+2,w
  3335  017B  0721               	addwf	??_Proc_8+1,w
  3336  017C  00A3               	movwf	??_Proc_8+3
  3337  017D  0823               	movf	??_Proc_8+3,w
  3338  017E  0084               	movwf	4
  3339  017F  087C               	movf	Proc_8@Int_Loc,w
  3340  0180  1783               	bsf	3,7	;select IRP bank2
  3341  0181  0080               	movwf	0
  3342  0182  0A84               	incf	4,f
  3343  0183  087D               	movf	Proc_8@Int_Loc+1,w
  3344  0184  0080               	movwf	0
  3345  0185  3001               	movlw	1
  3346  0186  07F9               	addwf	Proc_8@Int_Index,f
  3347  0187  1803               	skipnc
  3348  0188  0AFA               	incf	Proc_8@Int_Index+1,f
  3349  0189  3000               	movlw	0
  3350  018A  07FA               	addwf	Proc_8@Int_Index+1,f
  3351  018B  2956               	goto	l1723
  3352  018C                     l1725:	
  3353                           
  3354                           ;dhry_2.c: 109: Arr_2_Par_Ref [Int_Loc] [Int_Loc-1] += 1;
  3355  018C  087C               	movf	Proc_8@Int_Loc,w
  3356  018D  1283               	bcf	3,5	;RP0=0, select bank0
  3357  018E  1303               	bcf	3,6	;RP1=0, select bank0
  3358  018F  00A0               	movwf	??_Proc_8
  3359  0190  0720               	addwf	??_Proc_8,w
  3360  0191  3EFE               	addlw	254
  3361  0192  0774               	addwf	Proc_8@Arr_2_Par_Ref,w
  3362  0193  00A1               	movwf	??_Proc_8+1
  3363  0194  3064               	movlw	100
  3364  0195  00A2               	movwf	??_Proc_8+2
  3365  0196  0822               	movf	??_Proc_8+2,w
  3366  0197  00F0               	movwf	___bmul@multiplicand
  3367  0198  087C               	movf	Proc_8@Int_Loc,w
  3368  0199  158A  2609  118A   	fcall	___bmul
  3369  019C  1283               	bcf	3,5	;RP0=0, select bank0
  3370  019D  1303               	bcf	3,6	;RP1=0, select bank0
  3371  019E  0721               	addwf	??_Proc_8+1,w
  3372  019F  00A3               	movwf	??_Proc_8+3
  3373  01A0  0823               	movf	??_Proc_8+3,w
  3374  01A1  0084               	movwf	4
  3375  01A2  3001               	movlw	1
  3376  01A3  1783               	bsf	3,7	;select IRP bank2
  3377  01A4  0780               	addwf	0,f
  3378  01A5  0A84               	incf	4,f
  3379  01A6  1803               	skipnc
  3380  01A7  0A80               	incf	0,f
  3381                           
  3382                           ;dhry_2.c: 110: Arr_2_Par_Ref [Int_Loc+20] [Int_Loc] = Arr_1_Par_Ref [Int_Loc];
  3383  01A8  087C               	movf	Proc_8@Int_Loc,w
  3384  01A9  00A0               	movwf	??_Proc_8
  3385  01AA  0720               	addwf	??_Proc_8,w
  3386  01AB  077B               	addwf	Proc_8@Arr_1_Par_Ref,w
  3387  01AC  00A1               	movwf	??_Proc_8+1
  3388  01AD  0821               	movf	??_Proc_8+1,w
  3389  01AE  0084               	movwf	4
  3390  01AF  0800               	movf	0,w
  3391  01B0  00A2               	movwf	??_Proc_8+2
  3392  01B1  0A84               	incf	4,f
  3393  01B2  0800               	movf	0,w
  3394  01B3  00A3               	movwf	??_Proc_8+3
  3395  01B4  3064               	movlw	100
  3396  01B5  00A4               	movwf	??_Proc_8+4
  3397  01B6  0824               	movf	??_Proc_8+4,w
  3398  01B7  00F0               	movwf	___bmul@multiplicand
  3399  01B8  087C               	movf	Proc_8@Int_Loc,w
  3400  01B9  3E14               	addlw	20
  3401  01BA  158A  2609         	fcall	___bmul
  3402  01BC  0774               	addwf	Proc_8@Arr_2_Par_Ref,w
  3403  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  3404  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  3405  01BF  00A5               	movwf	??_Proc_8+5
  3406  01C0  087C               	movf	Proc_8@Int_Loc,w
  3407  01C1  00A6               	movwf	??_Proc_8+6
  3408  01C2  0726               	addwf	??_Proc_8+6,w
  3409  01C3  0725               	addwf	??_Proc_8+5,w
  3410  01C4  00A7               	movwf	??_Proc_8+7
  3411  01C5  0827               	movf	??_Proc_8+7,w
  3412  01C6  0084               	movwf	4
  3413  01C7  0822               	movf	??_Proc_8+2,w
  3414  01C8  1783               	bsf	3,7	;select IRP bank2
  3415  01C9  0080               	movwf	0
  3416  01CA  0A84               	incf	4,f
  3417  01CB  0823               	movf	??_Proc_8+3,w
  3418  01CC  0080               	movwf	0
  3419                           
  3420                           ;dhry_2.c: 111: Int_Glob = 5;
  3421  01CD  3005               	movlw	5
  3422  01CE  00DC               	movwf	_Int_Glob
  3423  01CF  3000               	movlw	0
  3424  01D0  00DD               	movwf	_Int_Glob+1
  3425  01D1  0008               	return
  3426  01D2                     __end_of_Proc_8:	
  3427                           
  3428                           	psect	text9
  3429  0E09                     __ptext9:	
  3430 ;; *************** function ___bmul *****************
  3431 ;; Defined at:
  3432 ;;		line 4 in file "D:\P\xc8\v1.44\sources\common\Umul8.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;  multiplier      1    wreg     unsigned char 
  3435 ;;  multiplicand    1    0[COMMON] unsigned char 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  multiplier      1    3[COMMON] unsigned char 
  3438 ;;  product         1    2[COMMON] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      unsigned char 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3448 ;;      Params:         1       0       0       0       0
  3449 ;;      Locals:         2       0       0       0       0
  3450 ;;      Temps:          1       0       0       0       0
  3451 ;;      Totals:         4       0       0       0       0
  3452 ;;Total ram usage:        4 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_Proc_8
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           
  3462                           ;psect for function ___bmul
  3463  0E09                     ___bmul:	
  3464                           
  3465                           ;incstack = 0
  3466                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3467                           ;___bmul@multiplier stored from wreg
  3468  0E09  00F3               	movwf	___bmul@multiplier
  3469  0E0A  01F2               	clrf	___bmul@product
  3470  0E0B                     l1649:	
  3471  0E0B  1C73               	btfss	___bmul@multiplier,0
  3472  0E0C  2E11               	goto	l1653
  3473  0E0D  0870               	movf	___bmul@multiplicand,w
  3474  0E0E  00F1               	movwf	??___bmul
  3475  0E0F  0871               	movf	??___bmul,w
  3476  0E10  07F2               	addwf	___bmul@product,f
  3477  0E11                     l1653:	
  3478  0E11  1003               	clrc
  3479  0E12  0DF0               	rlf	___bmul@multiplicand,f
  3480  0E13  1003               	clrc
  3481  0E14  0CF3               	rrf	___bmul@multiplier,f
  3482  0E15  0873               	movf	___bmul@multiplier,w
  3483  0E16  1D03               	btfss	3,2
  3484  0E17  2E0B               	goto	l1649
  3485  0E18  0872               	movf	___bmul@product,w
  3486  0E19  0008               	return
  3487  0E1A                     __end_of___bmul:	
  3488                           
  3489                           	psect	text10
  3490  0DED                     __ptext10:	
  3491 ;; *************** function _Proc_5 *****************
  3492 ;; Defined at:
  3493 ;;		line 436 in file "dhry_1.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  2   58[None  ] int 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3507 ;;      Params:         0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0
  3509 ;;      Temps:          1       0       0       0       0
  3510 ;;      Totals:         1       0       0       0       0
  3511 ;;Total ram usage:        1 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _Proc_5
  3522  0DED                     _Proc_5:	
  3523                           
  3524                           ;dhry_1.c: 440: Ch_1_Glob = 'A';
  3525                           
  3526                           ;incstack = 0
  3527                           ; Regs used in _Proc_5: [wreg+status,2]
  3528  0DED  3041               	movlw	65
  3529  0DEE  00F0               	movwf	??_Proc_5
  3530  0DEF  0870               	movf	??_Proc_5,w
  3531  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  3533  0DF2  00EE               	movwf	_Ch_1_Glob^(0+128)
  3534                           
  3535                           ;dhry_1.c: 441: Bool_Glob = 0;
  3536  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  3538  0DF5  01DA               	clrf	_Bool_Glob
  3539  0DF6  01DB               	clrf	_Bool_Glob+1
  3540  0DF7  0008               	return
  3541  0DF8                     __end_of_Proc_5:	
  3542                           
  3543                           	psect	text11
  3544  0E4C                     __ptext11:	
  3545 ;; *************** function _Proc_4 *****************
  3546 ;; Defined at:
  3547 ;;		line 424 in file "dhry_1.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  Bool_Loc        2    2[COMMON] int 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  2   60[None  ] int 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         0       0       0       0       0
  3562 ;;      Locals:         2       0       0       0       0
  3563 ;;      Temps:          2       0       0       0       0
  3564 ;;      Totals:         4       0       0       0       0
  3565 ;;Total ram usage:        4 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           
  3575                           ;psect for function _Proc_4
  3576  0E4C                     _Proc_4:	
  3577                           
  3578                           ;dhry_1.c: 428: Boolean Bool_Loc;
  3579                           ;dhry_1.c: 430: Bool_Loc = Ch_1_Glob == 'A';
  3580                           
  3581                           ;incstack = 0
  3582                           ; Regs used in _Proc_4: [wreg+status,2+status,0]
  3583  0E4C  3041               	movlw	65
  3584  0E4D  1683               	bsf	3,5	;RP0=1, select bank1
  3585  0E4E  1303               	bcf	3,6	;RP1=0, select bank1
  3586  0E4F  066E               	xorwf	_Ch_1_Glob^(0+128),w
  3587  0E50  1D03               	btfss	3,2
  3588  0E51  2E54               	goto	u1700
  3589  0E52  3001               	movlw	1
  3590  0E53  2E55               	goto	u1710
  3591  0E54                     u1700:	
  3592  0E54  3000               	movlw	0
  3593  0E55                     u1710:	
  3594  0E55  00F0               	movwf	??_Proc_4
  3595  0E56  01F1               	clrf	??_Proc_4+1
  3596  0E57  0870               	movf	??_Proc_4,w
  3597  0E58  00F2               	movwf	Proc_4@Bool_Loc
  3598  0E59  0871               	movf	??_Proc_4+1,w
  3599  0E5A  00F3               	movwf	Proc_4@Bool_Loc+1
  3600                           
  3601                           ;dhry_1.c: 431: Bool_Glob = Bool_Loc | Bool_Glob;
  3602  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0E5D  085A               	movf	_Bool_Glob,w
  3605  0E5E  0472               	iorwf	Proc_4@Bool_Loc,w
  3606  0E5F  00DA               	movwf	_Bool_Glob
  3607  0E60  085B               	movf	_Bool_Glob+1,w
  3608  0E61  0473               	iorwf	Proc_4@Bool_Loc+1,w
  3609  0E62  00DB               	movwf	_Bool_Glob+1
  3610                           
  3611                           ;dhry_1.c: 432: Ch_2_Glob = 'B';
  3612  0E63  3042               	movlw	66
  3613  0E64  00F0               	movwf	??_Proc_4
  3614  0E65  0870               	movf	??_Proc_4,w
  3615  0E66  1683               	bsf	3,5	;RP0=1, select bank1
  3616  0E67  1303               	bcf	3,6	;RP1=0, select bank1
  3617  0E68  00ED               	movwf	_Ch_2_Glob^(0+128)
  3618  0E69  0008               	return
  3619  0E6A                     __end_of_Proc_4:	
  3620                           
  3621                           	psect	text12
  3622  0F30                     __ptext12:	
  3623 ;; *************** function _Proc_2 *****************
  3624 ;; Defined at:
  3625 ;;		line 386 in file "dhry_1.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  Int_Par_Ref     1    wreg     PTR int 
  3628 ;;		 -> main@Int_1_Loc(2), 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  Int_Par_Ref     1    7[COMMON] PTR int 
  3631 ;;		 -> main@Int_1_Loc(2), 
  3632 ;;  Int_Loc         2    5[COMMON] int 
  3633 ;;  Enum_Loc        1    4[COMMON] enum E207
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  2   74[None  ] int 
  3636 ;; Registers used:
  3637 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3643 ;;      Params:         0       0       0       0       0
  3644 ;;      Locals:         4       0       0       0       0
  3645 ;;      Temps:          4       0       0       0       0
  3646 ;;      Totals:         8       0       0       0       0
  3647 ;;Total ram usage:        8 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           
  3657                           ;psect for function _Proc_2
  3658  0F30                     _Proc_2:	
  3659                           
  3660                           ;incstack = 0
  3661                           ; Regs used in _Proc_2: [wreg-fsr0h+status,2+status,0]
  3662                           ;Proc_2@Int_Par_Ref stored from wreg
  3663  0F30  00F7               	movwf	Proc_2@Int_Par_Ref
  3664                           
  3665                           ;dhry_1.c: 392: {
  3666                           ;dhry_1.c: 393: One_Fifty Int_Loc;
  3667                           ;dhry_1.c: 394: Enumeration Enum_Loc;
  3668                           ;dhry_1.c: 396: Int_Loc = *Int_Par_Ref + 10;
  3669  0F31  0877               	movf	Proc_2@Int_Par_Ref,w
  3670  0F32  0084               	movwf	4
  3671  0F33  1383               	bcf	3,7	;select IRP bank0
  3672  0F34  0800               	movf	0,w
  3673  0F35  00F0               	movwf	??_Proc_2
  3674  0F36  0A84               	incf	4,f
  3675  0F37  0800               	movf	0,w
  3676  0F38  00F1               	movwf	??_Proc_2+1
  3677  0F39  0870               	movf	??_Proc_2,w
  3678  0F3A  3E0A               	addlw	10
  3679  0F3B  00F5               	movwf	Proc_2@Int_Loc
  3680  0F3C  0871               	movf	??_Proc_2+1,w
  3681  0F3D  1803               	skipnc
  3682  0F3E  3E01               	addlw	1
  3683  0F3F  3E00               	addlw	0
  3684  0F40  00F6               	movwf	Proc_2@Int_Loc+1
  3685  0F41                     l1869:	
  3686                           ;dhry_1.c: 397: do
  3687                           
  3688                           
  3689                           ;dhry_1.c: 398: if (Ch_1_Glob == 'A')
  3690  0F41  3041               	movlw	65
  3691  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  3692  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  3693  0F44  066E               	xorwf	_Ch_1_Glob^(0+128),w
  3694  0F45  1D03               	btfss	3,2
  3695  0F46  2F67               	goto	l1877
  3696                           
  3697                           ;dhry_1.c: 400: {
  3698                           ;dhry_1.c: 401: Int_Loc -= 1;
  3699  0F47  30FF               	movlw	255
  3700  0F48  07F5               	addwf	Proc_2@Int_Loc,f
  3701  0F49  1803               	skipnc
  3702  0F4A  0AF6               	incf	Proc_2@Int_Loc+1,f
  3703  0F4B  30FF               	movlw	255
  3704  0F4C  07F6               	addwf	Proc_2@Int_Loc+1,f
  3705                           
  3706                           ;dhry_1.c: 402: *Int_Par_Ref = Int_Loc - Int_Glob;
  3707  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  3709  0F4F  095C               	comf	_Int_Glob,w
  3710  0F50  00F0               	movwf	??_Proc_2
  3711  0F51  095D               	comf	_Int_Glob+1,w
  3712  0F52  00F1               	movwf	??_Proc_2+1
  3713  0F53  0AF0               	incf	??_Proc_2,f
  3714  0F54  1903               	skipnz
  3715  0F55  0AF1               	incf	??_Proc_2+1,f
  3716  0F56  0875               	movf	Proc_2@Int_Loc,w
  3717  0F57  0770               	addwf	??_Proc_2,w
  3718  0F58  00F2               	movwf	??_Proc_2+2
  3719  0F59  0876               	movf	Proc_2@Int_Loc+1,w
  3720  0F5A  1803               	skipnc
  3721  0F5B  0A76               	incf	Proc_2@Int_Loc+1,w
  3722  0F5C  0771               	addwf	??_Proc_2+1,w
  3723  0F5D  00F3               	movwf	??_Proc_2+3
  3724  0F5E  0877               	movf	Proc_2@Int_Par_Ref,w
  3725  0F5F  0084               	movwf	4
  3726  0F60  0872               	movf	??_Proc_2+2,w
  3727  0F61  1383               	bcf	3,7	;select IRP bank0
  3728  0F62  0080               	movwf	0
  3729  0F63  0A84               	incf	4,f
  3730  0F64  0873               	movf	??_Proc_2+3,w
  3731  0F65  0080               	movwf	0
  3732                           
  3733                           ;dhry_1.c: 403: Enum_Loc = Ident_1;
  3734  0F66  01F4               	clrf	Proc_2@Enum_Loc
  3735  0F67                     l1877:	
  3736                           
  3737                           ;dhry_1.c: 404: }
  3738                           ;dhry_1.c: 405: while (Enum_Loc != Ident_1);
  3739  0F67  0874               	movf	Proc_2@Enum_Loc,w
  3740  0F68  1903               	btfsc	3,2
  3741  0F69  0008               	return
  3742  0F6A  2F41               	goto	l1869
  3743  0F6B                     __end_of_Proc_2:	
  3744                           
  3745                           	psect	text13
  3746  01D2                     __ptext13:	
  3747 ;; *************** function _Proc_1 *****************
  3748 ;; Defined at:
  3749 ;;		line 352 in file "dhry_1.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  Ptr_Val_Par     2    0[BANK0 ] PTR struct record
  3752 ;;		 -> NULL(0), main@Int_2_Loc(2), main@Int_1_Loc(2), main@temp2(37), 
  3753 ;;		 -> main@temp1(37), 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  Next_Record     2    8[BANK0 ] PTR struct record
  3756 ;;		 -> NULL(0), main@Int_2_Loc(2), main@Int_1_Loc(2), main@temp2(37), 
  3757 ;;		 -> main@temp1(37), 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  2    0[BANK0 ] int 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3767 ;;      Params:         0       2       0       0       0
  3768 ;;      Locals:         0       2       0       0       0
  3769 ;;      Temps:          0       6       0       0       0
  3770 ;;      Totals:         0      10       0       0       0
  3771 ;;Total ram usage:       10 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    2
  3774 ;; This function calls:
  3775 ;;		_Proc_3
  3776 ;;		_Proc_6
  3777 ;;		_Proc_7
  3778 ;;		_memcpy
  3779 ;; This function is called by:
  3780 ;;		_main
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function _Proc_1
  3786  01D2                     _Proc_1:	
  3787                           
  3788                           ;dhry_1.c: 357: {
  3789                           ;dhry_1.c: 358: Rec_Pointer Next_Record = Ptr_Val_Par->Ptr_Comp;
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in _Proc_1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3793  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  3794  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  3795  01D4  0820               	movf	Proc_1@Ptr_Val_Par,w
  3796  01D5  0084               	movwf	4
  3797  01D6  1783               	bsf	3,7
  3798  01D7  1C21               	btfss	Proc_1@Ptr_Val_Par+1,0
  3799  01D8  1383               	bcf	3,7
  3800  01D9  0800               	movf	0,w
  3801  01DA  00A8               	movwf	Proc_1@Next_Record
  3802  01DB  0A84               	incf	4,f
  3803  01DC  0800               	movf	0,w
  3804  01DD  0384               	decf	4,f
  3805  01DE  00A9               	movwf	Proc_1@Next_Record+1
  3806                           
  3807                           ;dhry_1.c: 363: memcpy(&(*Ptr_Val_Par->Ptr_Comp), &(*Ptr_Glob), sizeof(*Ptr_Val_Par->Ptr
      +                          _Comp));
  3808  01DF  0820               	movf	Proc_1@Ptr_Val_Par,w
  3809  01E0  0084               	movwf	4
  3810  01E1  1783               	bsf	3,7
  3811  01E2  1C21               	btfss	Proc_1@Ptr_Val_Par+1,0
  3812  01E3  1383               	bcf	3,7
  3813  01E4  0800               	movf	0,w
  3814  01E5  00F0               	movwf	memcpy@d1
  3815  01E6  0A84               	incf	4,f
  3816  01E7  0800               	movf	0,w
  3817  01E8  0384               	decf	4,f
  3818  01E9  00F1               	movwf	memcpy@d1+1
  3819  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  3820  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  3821  01EC  086B               	movf	_Ptr_Glob^(0+128),w
  3822  01ED  00F2               	movwf	memcpy@s1
  3823  01EE  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  3824  01EF  00F3               	movwf	memcpy@s1+1
  3825  01F0  3025               	movlw	37
  3826  01F1  00F4               	movwf	memcpy@n
  3827  01F2  3000               	movlw	0
  3828  01F3  00F5               	movwf	memcpy@n+1
  3829  01F4  158A  26D1  118A   	fcall	_memcpy
  3830                           
  3831                           ;dhry_1.c: 364: Ptr_Val_Par->variant.var_1.Int_Comp = 5;
  3832  01F7  3004               	movlw	4
  3833  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  3834  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  3835  01FA  0720               	addwf	Proc_1@Ptr_Val_Par,w
  3836  01FB  00A2               	movwf	??_Proc_1
  3837  01FC  0821               	movf	Proc_1@Ptr_Val_Par+1,w
  3838  01FD  1803               	skipnc
  3839  01FE  3E01               	addlw	1
  3840  01FF  00A3               	movwf	??_Proc_1+1
  3841  0200  0822               	movf	??_Proc_1,w
  3842  0201  0084               	movwf	4
  3843  0202  1783               	bsf	3,7
  3844  0203  1C23               	btfss	??_Proc_1+1,0
  3845  0204  1383               	bcf	3,7
  3846  0205  3005               	movlw	5
  3847  0206  0080               	movwf	0
  3848  0207  0A84               	incf	4,f
  3849  0208  3000               	movlw	0
  3850  0209  0080               	movwf	0
  3851                           
  3852                           ;dhry_1.c: 365: Next_Record->variant.var_1.Int_Comp
  3853                           ;dhry_1.c: 366: = Ptr_Val_Par->variant.var_1.Int_Comp;
  3854  020A  3004               	movlw	4
  3855  020B  0720               	addwf	Proc_1@Ptr_Val_Par,w
  3856  020C  00A2               	movwf	??_Proc_1
  3857  020D  0821               	movf	Proc_1@Ptr_Val_Par+1,w
  3858  020E  1803               	skipnc
  3859  020F  3E01               	addlw	1
  3860  0210  00A3               	movwf	??_Proc_1+1
  3861  0211  0822               	movf	??_Proc_1,w
  3862  0212  0084               	movwf	4
  3863  0213  1783               	bsf	3,7
  3864  0214  1C23               	btfss	??_Proc_1+1,0
  3865  0215  1383               	bcf	3,7
  3866  0216  0800               	movf	0,w
  3867  0217  00A4               	movwf	??_Proc_1+2
  3868  0218  0A84               	incf	4,f
  3869  0219  0800               	movf	0,w
  3870  021A  00A5               	movwf	??_Proc_1+3
  3871  021B  3004               	movlw	4
  3872  021C  0728               	addwf	Proc_1@Next_Record,w
  3873  021D  00A6               	movwf	??_Proc_1+4
  3874  021E  0829               	movf	Proc_1@Next_Record+1,w
  3875  021F  1803               	skipnc
  3876  0220  3E01               	addlw	1
  3877  0221  00A7               	movwf	??_Proc_1+5
  3878  0222  0826               	movf	??_Proc_1+4,w
  3879  0223  0084               	movwf	4
  3880  0224  1783               	bsf	3,7
  3881  0225  1C27               	btfss	??_Proc_1+5,0
  3882  0226  1383               	bcf	3,7
  3883  0227  0824               	movf	??_Proc_1+2,w
  3884  0228  0080               	movwf	0
  3885  0229  0A84               	incf	4,f
  3886  022A  0825               	movf	??_Proc_1+3,w
  3887  022B  0080               	movwf	0
  3888                           
  3889                           ;dhry_1.c: 367: Next_Record->Ptr_Comp = Ptr_Val_Par->Ptr_Comp;
  3890  022C  0820               	movf	Proc_1@Ptr_Val_Par,w
  3891  022D  0084               	movwf	4
  3892  022E  1783               	bsf	3,7
  3893  022F  1C21               	btfss	Proc_1@Ptr_Val_Par+1,0
  3894  0230  1383               	bcf	3,7
  3895  0231  0800               	movf	0,w
  3896  0232  00A2               	movwf	??_Proc_1
  3897  0233  0A84               	incf	4,f
  3898  0234  0800               	movf	0,w
  3899  0235  00A3               	movwf	??_Proc_1+1
  3900  0236  0828               	movf	Proc_1@Next_Record,w
  3901  0237  0084               	movwf	4
  3902  0238  1783               	bsf	3,7
  3903  0239  1C29               	btfss	Proc_1@Next_Record+1,0
  3904  023A  1383               	bcf	3,7
  3905  023B  0822               	movf	??_Proc_1,w
  3906  023C  0080               	movwf	0
  3907  023D  0823               	movf	??_Proc_1+1,w
  3908  023E  0A84               	incf	4,f
  3909  023F  0080               	movwf	0
  3910  0240  0384               	decf	4,f
  3911                           
  3912                           ;dhry_1.c: 368: Proc_3 (&Next_Record->Ptr_Comp);
  3913  0241  0828               	movf	Proc_1@Next_Record,w
  3914  0242  00FA               	movwf	Proc_3@Ptr_Ref_Par
  3915  0243  0829               	movf	Proc_1@Next_Record+1,w
  3916  0244  00FB               	movwf	Proc_3@Ptr_Ref_Par+1
  3917  0245  158A  26FF  118A   	fcall	_Proc_3
  3918                           
  3919                           ;dhry_1.c: 371: if (Next_Record->Discr == Ident_1)
  3920  0248  3002               	movlw	2
  3921  0249  1283               	bcf	3,5	;RP0=0, select bank0
  3922  024A  1303               	bcf	3,6	;RP1=0, select bank0
  3923  024B  0728               	addwf	Proc_1@Next_Record,w
  3924  024C  00A2               	movwf	??_Proc_1
  3925  024D  0829               	movf	Proc_1@Next_Record+1,w
  3926  024E  1803               	skipnc
  3927  024F  3E01               	addlw	1
  3928  0250  00A3               	movwf	??_Proc_1+1
  3929  0251  0822               	movf	??_Proc_1,w
  3930  0252  0084               	movwf	4
  3931  0253  1783               	bsf	3,7
  3932  0254  1C23               	btfss	??_Proc_1+1,0
  3933  0255  1383               	bcf	3,7
  3934  0256  0800               	movf	0,w
  3935  0257  1D03               	btfss	3,2
  3936  0258  2AB9               	goto	l1865
  3937                           
  3938                           ;dhry_1.c: 373: {
  3939                           ;dhry_1.c: 374: Next_Record->variant.var_1.Int_Comp = 6;
  3940  0259  3004               	movlw	4
  3941  025A  0728               	addwf	Proc_1@Next_Record,w
  3942  025B  00A2               	movwf	??_Proc_1
  3943  025C  0829               	movf	Proc_1@Next_Record+1,w
  3944  025D  1803               	skipnc
  3945  025E  3E01               	addlw	1
  3946  025F  00A3               	movwf	??_Proc_1+1
  3947  0260  0822               	movf	??_Proc_1,w
  3948  0261  0084               	movwf	4
  3949  0262  1783               	bsf	3,7
  3950  0263  1C23               	btfss	??_Proc_1+1,0
  3951  0264  1383               	bcf	3,7
  3952  0265  3006               	movlw	6
  3953  0266  0080               	movwf	0
  3954  0267  0A84               	incf	4,f
  3955  0268  3000               	movlw	0
  3956  0269  0080               	movwf	0
  3957                           
  3958                           ;dhry_1.c: 375: Proc_6 (Ptr_Val_Par->variant.var_1.Enum_Comp,
  3959                           ;dhry_1.c: 376: &Next_Record->variant.var_1.Enum_Comp);
  3960  026A  3003               	movlw	3
  3961  026B  0728               	addwf	Proc_1@Next_Record,w
  3962  026C  00F5               	movwf	Proc_6@Enum_Ref_Par
  3963  026D  0829               	movf	Proc_1@Next_Record+1,w
  3964  026E  1803               	skipnc
  3965  026F  3E01               	addlw	1
  3966  0270  00F6               	movwf	Proc_6@Enum_Ref_Par+1
  3967  0271  3003               	movlw	3
  3968  0272  0720               	addwf	Proc_1@Ptr_Val_Par,w
  3969  0273  00A2               	movwf	??_Proc_1
  3970  0274  0821               	movf	Proc_1@Ptr_Val_Par+1,w
  3971  0275  1803               	skipnc
  3972  0276  3E01               	addlw	1
  3973  0277  00A3               	movwf	??_Proc_1+1
  3974  0278  0822               	movf	??_Proc_1,w
  3975  0279  0084               	movwf	4
  3976  027A  1783               	bsf	3,7
  3977  027B  1C23               	btfss	??_Proc_1+1,0
  3978  027C  1383               	bcf	3,7
  3979  027D  0800               	movf	0,w
  3980  027E  118A  2037  118A   	fcall	_Proc_6
  3981                           
  3982                           ;dhry_1.c: 377: Next_Record->Ptr_Comp = Ptr_Glob->Ptr_Comp;
  3983  0281  1683               	bsf	3,5	;RP0=1, select bank1
  3984  0282  1303               	bcf	3,6	;RP1=0, select bank1
  3985  0283  086B               	movf	_Ptr_Glob^(0+128),w
  3986  0284  0084               	movwf	4
  3987  0285  1783               	bsf	3,7
  3988  0286  1C6C               	btfss	(_Ptr_Glob+1)^(0+128),0
  3989  0287  1383               	bcf	3,7
  3990  0288  0800               	movf	0,w
  3991  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3992  028A  1303               	bcf	3,6	;RP1=0, select bank0
  3993  028B  00A2               	movwf	??_Proc_1
  3994  028C  0A84               	incf	4,f
  3995  028D  0800               	movf	0,w
  3996  028E  00A3               	movwf	??_Proc_1+1
  3997  028F  0828               	movf	Proc_1@Next_Record,w
  3998  0290  0084               	movwf	4
  3999  0291  1783               	bsf	3,7
  4000  0292  1C29               	btfss	Proc_1@Next_Record+1,0
  4001  0293  1383               	bcf	3,7
  4002  0294  0822               	movf	??_Proc_1,w
  4003  0295  0080               	movwf	0
  4004  0296  0823               	movf	??_Proc_1+1,w
  4005  0297  0A84               	incf	4,f
  4006  0298  0080               	movwf	0
  4007  0299  0384               	decf	4,f
  4008                           
  4009                           ;dhry_1.c: 378: Proc_7 (Next_Record->variant.var_1.Int_Comp, 10,
  4010                           ;dhry_1.c: 379: &Next_Record->variant.var_1.Int_Comp);
  4011  029A  3004               	movlw	4
  4012  029B  0728               	addwf	Proc_1@Next_Record,w
  4013  029C  00A2               	movwf	??_Proc_1
  4014  029D  0829               	movf	Proc_1@Next_Record+1,w
  4015  029E  1803               	skipnc
  4016  029F  3E01               	addlw	1
  4017  02A0  00A3               	movwf	??_Proc_1+1
  4018  02A1  0822               	movf	??_Proc_1,w
  4019  02A2  0084               	movwf	4
  4020  02A3  1783               	bsf	3,7
  4021  02A4  1C23               	btfss	??_Proc_1+1,0
  4022  02A5  1383               	bcf	3,7
  4023  02A6  0800               	movf	0,w
  4024  02A7  00F0               	movwf	Proc_7@Int_1_Par_Val
  4025  02A8  0A84               	incf	4,f
  4026  02A9  0800               	movf	0,w
  4027  02AA  00F1               	movwf	Proc_7@Int_1_Par_Val+1
  4028  02AB  300A               	movlw	10
  4029  02AC  00F2               	movwf	Proc_7@Int_2_Par_Val
  4030  02AD  3000               	movlw	0
  4031  02AE  00F3               	movwf	Proc_7@Int_2_Par_Val+1
  4032  02AF  3004               	movlw	4
  4033  02B0  0728               	addwf	Proc_1@Next_Record,w
  4034  02B1  00F4               	movwf	Proc_7@Int_Par_Ref
  4035  02B2  0829               	movf	Proc_1@Next_Record+1,w
  4036  02B3  1803               	skipnc
  4037  02B4  3E01               	addlw	1
  4038  02B5  00F5               	movwf	Proc_7@Int_Par_Ref+1
  4039  02B6  158A  2631         	fcall	_Proc_7
  4040                           
  4041                           ;dhry_1.c: 380: }
  4042  02B8  0008               	return
  4043  02B9                     l1865:	
  4044                           
  4045                           ;dhry_1.c: 381: else
  4046                           ;dhry_1.c: 382: memcpy(&(*Ptr_Val_Par), &(*Ptr_Val_Par->Ptr_Comp), sizeof(*Ptr_Val_Par))
      +                          ;
  4047  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  4048  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  4049  02BB  0820               	movf	Proc_1@Ptr_Val_Par,w
  4050  02BC  00F0               	movwf	memcpy@d1
  4051  02BD  0821               	movf	Proc_1@Ptr_Val_Par+1,w
  4052  02BE  00F1               	movwf	memcpy@d1+1
  4053  02BF  0820               	movf	Proc_1@Ptr_Val_Par,w
  4054  02C0  0084               	movwf	4
  4055  02C1  1783               	bsf	3,7
  4056  02C2  1C21               	btfss	Proc_1@Ptr_Val_Par+1,0
  4057  02C3  1383               	bcf	3,7
  4058  02C4  0800               	movf	0,w
  4059  02C5  00F2               	movwf	memcpy@s1
  4060  02C6  0A84               	incf	4,f
  4061  02C7  0800               	movf	0,w
  4062  02C8  0384               	decf	4,f
  4063  02C9  00F3               	movwf	memcpy@s1+1
  4064  02CA  3025               	movlw	37
  4065  02CB  00F4               	movwf	memcpy@n
  4066  02CC  3000               	movlw	0
  4067  02CD  00F5               	movwf	memcpy@n+1
  4068  02CE  158A  26D1         	fcall	_memcpy
  4069  02D0  0008               	return
  4070  02D1                     __end_of_Proc_1:	
  4071                           
  4072                           	psect	text14
  4073  0ED1                     __ptext14:	
  4074 ;; *************** function _memcpy *****************
  4075 ;; Defined at:
  4076 ;;		line 27 in file "D:\P\xc8\v1.44\sources\common\memcpy.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  d1              2    0[COMMON] PTR void 
  4079 ;;		 -> NULL(0), main@Int_2_Loc(2), main@Int_1_Loc(2), main@temp2(37), 
  4080 ;;		 -> main@temp1(37), 
  4081 ;;  s1              2    2[COMMON] PTR const void 
  4082 ;;		 -> NULL(0), main@Int_2_Loc(2), main@Int_1_Loc(2), main@temp2(37), 
  4083 ;;		 -> main@temp1(37), 
  4084 ;;  n               2    4[COMMON] unsigned int 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  s               2   10[COMMON] PTR const unsigned char 
  4087 ;;		 -> NULL(0), main@Int_2_Loc(2), main@Int_1_Loc(2), main@temp2(37), 
  4088 ;;		 -> main@temp1(37), 
  4089 ;;  d               2    8[COMMON] PTR unsigned char 
  4090 ;;		 -> NULL(0), main@Int_2_Loc(2), main@Int_1_Loc(2), main@temp2(37), 
  4091 ;;		 -> main@temp1(37), 
  4092 ;;  tmp             1    7[COMMON] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  2    0[COMMON] PTR void 
  4095 ;; Registers used:
  4096 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         6       0       0       0       0
  4103 ;;      Locals:         5       0       0       0       0
  4104 ;;      Temps:          1       0       0       0       0
  4105 ;;      Totals:        12       0       0       0       0
  4106 ;;Total ram usage:       12 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_Proc_1
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           
  4116                           ;psect for function _memcpy
  4117  0ED1                     _memcpy:	
  4118                           
  4119                           ;incstack = 0
  4120                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  4121  0ED1  0872               	movf	memcpy@s1,w
  4122  0ED2  00FA               	movwf	memcpy@s
  4123  0ED3  0873               	movf	memcpy@s1+1,w
  4124  0ED4  00FB               	movwf	memcpy@s+1
  4125  0ED5  0870               	movf	memcpy@d1,w
  4126  0ED6  00F8               	movwf	memcpy@d
  4127  0ED7  0871               	movf	memcpy@d1+1,w
  4128  0ED8  00F9               	movwf	memcpy@d+1
  4129  0ED9                     l1639:	
  4130  0ED9  3001               	movlw	1
  4131  0EDA  02F4               	subwf	memcpy@n,f
  4132  0EDB  3000               	movlw	0
  4133  0EDC  1C03               	skipc
  4134  0EDD  03F5               	decf	memcpy@n+1,f
  4135  0EDE  02F5               	subwf	memcpy@n+1,f
  4136  0EDF  0A74               	incf	memcpy@n,w
  4137  0EE0  1903               	btfsc	3,2
  4138  0EE1  0A75               	incf	memcpy@n+1,w
  4139  0EE2  1903               	btfsc	3,2
  4140  0EE3  0008               	return
  4141  0EE4  087A               	movf	memcpy@s,w
  4142  0EE5  0084               	movwf	4
  4143  0EE6  1783               	bsf	3,7
  4144  0EE7  1C7B               	btfss	memcpy@s+1,0
  4145  0EE8  1383               	bcf	3,7
  4146  0EE9  0800               	movf	0,w
  4147  0EEA  00F6               	movwf	??_memcpy
  4148  0EEB  0876               	movf	??_memcpy,w
  4149  0EEC  00F7               	movwf	memcpy@tmp
  4150  0EED  3001               	movlw	1
  4151  0EEE  07FA               	addwf	memcpy@s,f
  4152  0EEF  1803               	skipnc
  4153  0EF0  0AFB               	incf	memcpy@s+1,f
  4154  0EF1  0877               	movf	memcpy@tmp,w
  4155  0EF2  00F6               	movwf	??_memcpy
  4156  0EF3  0878               	movf	memcpy@d,w
  4157  0EF4  0084               	movwf	4
  4158  0EF5  1783               	bsf	3,7
  4159  0EF6  1C79               	btfss	memcpy@d+1,0
  4160  0EF7  1383               	bcf	3,7
  4161  0EF8  0876               	movf	??_memcpy,w
  4162  0EF9  0080               	movwf	0
  4163  0EFA  3001               	movlw	1
  4164  0EFB  07F8               	addwf	memcpy@d,f
  4165  0EFC  1803               	skipnc
  4166  0EFD  0AF9               	incf	memcpy@d+1,f
  4167  0EFE  2ED9               	goto	l1639
  4168  0EFF                     __end_of_memcpy:	
  4169                           ;	Return value of _memcpy is never used
  4170                           
  4171                           
  4172                           	psect	text15
  4173  0037                     __ptext15:	
  4174 ;; *************** function _Proc_6 *****************
  4175 ;; Defined at:
  4176 ;;		line 35 in file "dhry_2.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  Enum_Val_Par    1    wreg     enum E207
  4179 ;;  Enum_Ref_Par    2    5[COMMON] PTR enum E207
  4180 ;;		 -> main@Int_1_Loc.variant(34), main@Int_2_Loc.variant(34), temp1.variant(34), temp2.variant(34), 
  4181 ;;		 -> NULL(0), main@Enum_Loc(1), main@Int_2_Loc(2), main@Int_1_Loc(2), 
  4182 ;;		 -> main@temp2(37), main@temp1(37), 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  Enum_Val_Par    1    8[COMMON] enum E207
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  2    5[COMMON] int 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4194 ;;      Params:         2       0       0       0       0
  4195 ;;      Locals:         1       0       0       0       0
  4196 ;;      Temps:          1       0       0       0       0
  4197 ;;      Totals:         4       0       0       0       0
  4198 ;;Total ram usage:        4 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    1
  4201 ;; This function calls:
  4202 ;;		_Func_3
  4203 ;; This function is called by:
  4204 ;;		_main
  4205 ;;		_Proc_1
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           
  4210                           ;psect for function _Proc_6
  4211  0037                     _Proc_6:	
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in _Proc_6: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4215                           ;Proc_6@Enum_Val_Par stored from wreg
  4216  0037  00F8               	movwf	Proc_6@Enum_Val_Par
  4217                           
  4218                           ;dhry_2.c: 41: Enumeration *Enum_Ref_Par;
  4219                           ;dhry_2.c: 42: {
  4220                           ;dhry_2.c: 43: *Enum_Ref_Par = Enum_Val_Par;
  4221  0038  0878               	movf	Proc_6@Enum_Val_Par,w
  4222  0039  00F7               	movwf	??_Proc_6
  4223  003A  0875               	movf	Proc_6@Enum_Ref_Par,w
  4224  003B  0084               	movwf	4
  4225  003C  1783               	bsf	3,7
  4226  003D  1C76               	btfss	Proc_6@Enum_Ref_Par+1,0
  4227  003E  1383               	bcf	3,7
  4228  003F  0877               	movf	??_Proc_6,w
  4229  0040  0080               	movwf	0
  4230                           
  4231                           ;dhry_2.c: 44: if (! Func_3 (Enum_Val_Par))
  4232  0041  0878               	movf	Proc_6@Enum_Val_Par,w
  4233  0042  158A  25F8  118A   	fcall	_Func_3
  4234  0045  0870               	movf	?_Func_3,w
  4235  0046  0471               	iorwf	?_Func_3+1,w
  4236  0047  1D03               	btfss	3,2
  4237  0048  288A               	goto	l1601
  4238                           
  4239                           ;dhry_2.c: 46: *Enum_Ref_Par = Ident_4;
  4240  0049  3003               	movlw	3
  4241  004A  00F7               	movwf	??_Proc_6
  4242  004B  0875               	movf	Proc_6@Enum_Ref_Par,w
  4243  004C  0084               	movwf	4
  4244  004D  1783               	bsf	3,7
  4245  004E  1C76               	btfss	Proc_6@Enum_Ref_Par+1,0
  4246  004F  1383               	bcf	3,7
  4247  0050  0877               	movf	??_Proc_6,w
  4248  0051  0080               	movwf	0
  4249                           
  4250                           ;dhry_2.c: 47: switch (Enum_Val_Par)
  4251  0052  288A               	goto	l1601
  4252  0053                     l1587:	
  4253                           ;dhry_2.c: 48: {
  4254                           ;dhry_2.c: 49: case Ident_1:
  4255                           
  4256                           
  4257                           ;dhry_2.c: 50: *Enum_Ref_Par = Ident_1;
  4258  0053  0875               	movf	Proc_6@Enum_Ref_Par,w
  4259  0054  0084               	movwf	4
  4260  0055  1783               	bsf	3,7
  4261  0056  1C76               	btfss	Proc_6@Enum_Ref_Par+1,0
  4262  0057  1383               	bcf	3,7
  4263  0058  0180               	clrf	0
  4264                           
  4265                           ;dhry_2.c: 51: break;
  4266  0059  0008               	return
  4267  005A                     l1589:	
  4268                           ;dhry_2.c: 52: case Ident_2:
  4269                           
  4270                           
  4271                           ;dhry_2.c: 53: if (Int_Glob > 100)
  4272  005A  1283               	bcf	3,5	;RP0=0, select bank0
  4273  005B  1303               	bcf	3,6	;RP1=0, select bank0
  4274  005C  085D               	movf	_Int_Glob+1,w
  4275  005D  3A80               	xorlw	128
  4276  005E  00FF               	movwf	127
  4277  005F  3080               	movlw	128
  4278  0060  027F               	subwf	127,w
  4279  0061  1D03               	skipz
  4280  0062  2865               	goto	u1315
  4281  0063  3065               	movlw	101
  4282  0064  025C               	subwf	_Int_Glob,w
  4283  0065                     u1315:	
  4284  0065  1C03               	skipc
  4285  0066  286E               	goto	l1593
  4286                           
  4287                           ;dhry_2.c: 55: *Enum_Ref_Par = Ident_1;
  4288  0067  0875               	movf	Proc_6@Enum_Ref_Par,w
  4289  0068  0084               	movwf	4
  4290  0069  1783               	bsf	3,7
  4291  006A  1C76               	btfss	Proc_6@Enum_Ref_Par+1,0
  4292  006B  1383               	bcf	3,7
  4293  006C  0180               	clrf	0
  4294  006D  0008               	return
  4295  006E                     l1593:	
  4296                           
  4297                           ;dhry_2.c: 56: else *Enum_Ref_Par = Ident_4;
  4298  006E  3003               	movlw	3
  4299  006F  00F7               	movwf	??_Proc_6
  4300  0070  0875               	movf	Proc_6@Enum_Ref_Par,w
  4301  0071  0084               	movwf	4
  4302  0072  1783               	bsf	3,7
  4303  0073  1C76               	btfss	Proc_6@Enum_Ref_Par+1,0
  4304  0074  1383               	bcf	3,7
  4305  0075  0877               	movf	??_Proc_6,w
  4306  0076  0080               	movwf	0
  4307                           
  4308                           ;dhry_2.c: 57: break;
  4309  0077  0008               	return
  4310  0078                     l1595:	
  4311                           ;dhry_2.c: 58: case Ident_3:
  4312                           
  4313                           
  4314                           ;dhry_2.c: 59: *Enum_Ref_Par = Ident_2;
  4315  0078  0875               	movf	Proc_6@Enum_Ref_Par,w
  4316  0079  0084               	movwf	4
  4317  007A  1783               	bsf	3,7
  4318  007B  1C76               	btfss	Proc_6@Enum_Ref_Par+1,0
  4319  007C  1383               	bcf	3,7
  4320  007D  0180               	clrf	0
  4321  007E  0A80               	incf	0,f
  4322                           
  4323                           ;dhry_2.c: 61: case Ident_4: break;
  4324                           
  4325                           ;dhry_2.c: 60: break;
  4326  007F  0008               	return
  4327  0080                     l1597:	
  4328                           ;dhry_2.c: 62: case Ident_5:
  4329                           
  4330                           
  4331                           ;dhry_2.c: 63: *Enum_Ref_Par = Ident_3;
  4332  0080  3002               	movlw	2
  4333  0081  00F7               	movwf	??_Proc_6
  4334  0082  0875               	movf	Proc_6@Enum_Ref_Par,w
  4335  0083  0084               	movwf	4
  4336  0084  1783               	bsf	3,7
  4337  0085  1C76               	btfss	Proc_6@Enum_Ref_Par+1,0
  4338  0086  1383               	bcf	3,7
  4339  0087  0877               	movf	??_Proc_6,w
  4340  0088  0080               	movwf	0
  4341                           
  4342                           ;dhry_2.c: 65: }
  4343                           
  4344                           ;dhry_2.c: 64: break;
  4345  0089  0008               	return
  4346  008A                     l1601:	
  4347  008A  0878               	movf	Proc_6@Enum_Val_Par,w
  4348                           
  4349                           ; Switch size 1, requested type "space"
  4350                           ; Number of cases is 5, Range of values is 0 to 4
  4351                           ; switch strategies available:
  4352                           ; Name         Instructions Cycles
  4353                           ; simple_byte           16     9 (average)
  4354                           ; direct_byte           17     7 (fixed)
  4355                           ; jumptable            260     6 (fixed)
  4356                           ;	Chosen strategy is simple_byte
  4357  008B  3A00               	xorlw	0	; case 0
  4358  008C  1903               	skipnz
  4359  008D  2853               	goto	l1587
  4360  008E  3A01               	xorlw	1	; case 1
  4361  008F  1903               	skipnz
  4362  0090  285A               	goto	l1589
  4363  0091  3A03               	xorlw	3	; case 2
  4364  0092  1903               	skipnz
  4365  0093  2878               	goto	l1595
  4366  0094  3A01               	xorlw	1	; case 3
  4367  0095  1903               	skipnz
  4368  0096  289B               	goto	l21
  4369  0097  3A07               	xorlw	7	; case 4
  4370  0098  1903               	skipnz
  4371  0099  2880               	goto	l1597
  4372  009A  289B               	goto	l21
  4373  009B                     l21:	
  4374  009B  0008               	return
  4375  009C                     __end_of_Proc_6:	
  4376                           
  4377                           	psect	text16
  4378  0DF8                     __ptext16:	
  4379 ;; *************** function _Func_3 *****************
  4380 ;; Defined at:
  4381 ;;		line 183 in file "dhry_2.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  Enum_Par_Val    1    wreg     enum E207
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  Enum_Par_Val    1    3[COMMON] enum E207
  4386 ;;  Enum_Loc        1    4[COMMON] enum E207
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  2    0[COMMON] int 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4396 ;;      Params:         2       0       0       0       0
  4397 ;;      Locals:         2       0       0       0       0
  4398 ;;      Temps:          1       0       0       0       0
  4399 ;;      Totals:         5       0       0       0       0
  4400 ;;Total ram usage:        5 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_Proc_6
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           
  4410                           ;psect for function _Func_3
  4411  0DF8                     _Func_3:	
  4412                           
  4413                           ;incstack = 0
  4414                           ; Regs used in _Func_3: [wreg+status,2+status,0]
  4415                           ;Func_3@Enum_Par_Val stored from wreg
  4416  0DF8  00F3               	movwf	Func_3@Enum_Par_Val
  4417                           
  4418                           ;dhry_2.c: 188: {
  4419                           ;dhry_2.c: 189: Enumeration Enum_Loc;
  4420                           ;dhry_2.c: 191: Enum_Loc = Enum_Par_Val;
  4421  0DF9  0873               	movf	Func_3@Enum_Par_Val,w
  4422  0DFA  00F2               	movwf	??_Func_3
  4423  0DFB  0872               	movf	??_Func_3,w
  4424  0DFC  00F4               	movwf	Func_3@Enum_Loc
  4425                           
  4426                           ;dhry_2.c: 192: if (Enum_Loc == Ident_3)
  4427  0DFD  3002               	movlw	2
  4428  0DFE  0674               	xorwf	Func_3@Enum_Loc,w
  4429  0DFF  1D03               	btfss	3,2
  4430  0E00  2E06               	goto	l1573
  4431                           
  4432                           ;dhry_2.c: 194: return (1);
  4433  0E01  3001               	movlw	1
  4434  0E02  00F0               	movwf	?_Func_3
  4435  0E03  3000               	movlw	0
  4436  0E04  00F1               	movwf	?_Func_3+1
  4437  0E05  0008               	return
  4438  0E06                     l1573:	
  4439                           
  4440                           ;dhry_2.c: 195: else
  4441                           ;dhry_2.c: 196: return (0);
  4442  0E06  01F0               	clrf	?_Func_3
  4443  0E07  01F1               	clrf	?_Func_3+1
  4444  0E08  0008               	return
  4445  0E09                     __end_of_Func_3:	
  4446                           
  4447                           	psect	text17
  4448  0EFF                     __ptext17:	
  4449 ;; *************** function _Proc_3 *****************
  4450 ;; Defined at:
  4451 ;;		line 409 in file "dhry_1.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  Ptr_Ref_Par     2   10[COMMON] PTR PTR struct record
  4454 ;;		 -> NULL(0), main@Int_2_Loc(2), main@Int_1_Loc(2), main@temp2(37), 
  4455 ;;		 -> main@temp1(37), 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  2   10[COMMON] int 
  4460 ;; Registers used:
  4461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4467 ;;      Params:         2       0       0       0       0
  4468 ;;      Locals:         0       0       0       0       0
  4469 ;;      Temps:          2       0       0       0       0
  4470 ;;      Totals:         4       0       0       0       0
  4471 ;;Total ram usage:        4 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    1
  4474 ;; This function calls:
  4475 ;;		_Proc_7
  4476 ;; This function is called by:
  4477 ;;		_Proc_1
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           
  4482                           ;psect for function _Proc_3
  4483  0EFF                     _Proc_3:	
  4484                           
  4485                           ;dhry_1.c: 416: {
  4486                           ;dhry_1.c: 417: if (Ptr_Glob != 0)
  4487                           
  4488                           ;incstack = 0
  4489                           ; Regs used in _Proc_3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4490  0EFF  1683               	bsf	3,5	;RP0=1, select bank1
  4491  0F00  1303               	bcf	3,6	;RP1=0, select bank1
  4492  0F01  086B               	movf	_Ptr_Glob^(0+128),w
  4493  0F02  046C               	iorwf	(_Ptr_Glob+1)^(0+128),w
  4494  0F03  1903               	btfsc	3,2
  4495  0F04  2F1A               	goto	l1645
  4496                           
  4497                           ;dhry_1.c: 419: *Ptr_Ref_Par = Ptr_Glob->Ptr_Comp;
  4498  0F05  086B               	movf	_Ptr_Glob^(0+128),w
  4499  0F06  0084               	movwf	4
  4500  0F07  1783               	bsf	3,7
  4501  0F08  1C6C               	btfss	(_Ptr_Glob+1)^(0+128),0
  4502  0F09  1383               	bcf	3,7
  4503  0F0A  0800               	movf	0,w
  4504  0F0B  00FC               	movwf	??_Proc_3
  4505  0F0C  0A84               	incf	4,f
  4506  0F0D  0800               	movf	0,w
  4507  0F0E  00FD               	movwf	??_Proc_3+1
  4508  0F0F  087A               	movf	Proc_3@Ptr_Ref_Par,w
  4509  0F10  0084               	movwf	4
  4510  0F11  1783               	bsf	3,7
  4511  0F12  1C7B               	btfss	Proc_3@Ptr_Ref_Par+1,0
  4512  0F13  1383               	bcf	3,7
  4513  0F14  087C               	movf	??_Proc_3,w
  4514  0F15  0080               	movwf	0
  4515  0F16  087D               	movf	??_Proc_3+1,w
  4516  0F17  0A84               	incf	4,f
  4517  0F18  0080               	movwf	0
  4518  0F19  0384               	decf	4,f
  4519  0F1A                     l1645:	
  4520                           
  4521                           ;dhry_1.c: 420: Proc_7 (10, Int_Glob, &Ptr_Glob->variant.var_1.Int_Comp);
  4522  0F1A  300A               	movlw	10
  4523  0F1B  00F0               	movwf	Proc_7@Int_1_Par_Val
  4524  0F1C  3000               	movlw	0
  4525  0F1D  00F1               	movwf	Proc_7@Int_1_Par_Val+1
  4526  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  4527  0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  4528  0F20  085D               	movf	_Int_Glob+1,w
  4529  0F21  00F3               	movwf	Proc_7@Int_2_Par_Val+1
  4530  0F22  085C               	movf	_Int_Glob,w
  4531  0F23  00F2               	movwf	Proc_7@Int_2_Par_Val
  4532  0F24  3004               	movlw	4
  4533  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  4534  0F26  1303               	bcf	3,6	;RP1=0, select bank1
  4535  0F27  076B               	addwf	_Ptr_Glob^(0+128),w
  4536  0F28  00F4               	movwf	Proc_7@Int_Par_Ref
  4537  0F29  086C               	movf	(_Ptr_Glob+1)^(0+128),w
  4538  0F2A  1803               	skipnc
  4539  0F2B  3E01               	addlw	1
  4540  0F2C  00F5               	movwf	Proc_7@Int_Par_Ref+1
  4541  0F2D  158A  2631         	fcall	_Proc_7
  4542  0F2F  0008               	return
  4543  0F30                     __end_of_Proc_3:	
  4544                           
  4545                           	psect	text18
  4546  0E31                     __ptext18:	
  4547 ;; *************** function _Proc_7 *****************
  4548 ;; Defined at:
  4549 ;;		line 69 in file "dhry_2.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  Int_1_Par_Va    2    0[COMMON] int 
  4552 ;;  Int_2_Par_Va    2    2[COMMON] int 
  4553 ;;  Int_Par_Ref     2    4[COMMON] PTR int 
  4554 ;;		 -> main@Int_1_Loc.variant(34), main@Int_2_Loc.variant(34), temp1.variant(34), temp2.variant(34), 
  4555 ;;		 -> NULL(0), main@Int_3_Loc(2), main@Int_2_Loc(2), main@Int_1_Loc(2), 
  4556 ;;		 -> main@temp2(37), Ptr_Glob(2), main@temp1(37), 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  Int_Loc         2    8[COMMON] int 
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  2    0[COMMON] int 
  4561 ;; Registers used:
  4562 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4568 ;;      Params:         6       0       0       0       0
  4569 ;;      Locals:         2       0       0       0       0
  4570 ;;      Temps:          2       0       0       0       0
  4571 ;;      Totals:        10       0       0       0       0
  4572 ;;Total ram usage:       10 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; This function calls:
  4575 ;;		Nothing
  4576 ;; This function is called by:
  4577 ;;		_main
  4578 ;;		_Proc_1
  4579 ;;		_Proc_3
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           
  4584                           ;psect for function _Proc_7
  4585  0E31                     _Proc_7:	
  4586                           
  4587                           ;dhry_2.c: 79: One_Fifty Int_2_Par_Val;
  4588                           ;dhry_2.c: 80: One_Fifty *Int_Par_Ref;
  4589                           ;dhry_2.c: 81: {
  4590                           ;dhry_2.c: 82: One_Fifty Int_Loc;
  4591                           ;dhry_2.c: 84: Int_Loc = Int_1_Par_Val + 2;
  4592                           
  4593                           ;incstack = 0
  4594                           ; Regs used in _Proc_7: [wreg-fsr0h+status,2+status,0]
  4595  0E31  0870               	movf	Proc_7@Int_1_Par_Val,w
  4596  0E32  3E02               	addlw	2
  4597  0E33  00F8               	movwf	Proc_7@Int_Loc
  4598  0E34  0871               	movf	Proc_7@Int_1_Par_Val+1,w
  4599  0E35  1803               	skipnc
  4600  0E36  3E01               	addlw	1
  4601  0E37  3E00               	addlw	0
  4602  0E38  00F9               	movwf	Proc_7@Int_Loc+1
  4603                           
  4604                           ;dhry_2.c: 85: *Int_Par_Ref = Int_2_Par_Val + Int_Loc;
  4605  0E39  0878               	movf	Proc_7@Int_Loc,w
  4606  0E3A  0772               	addwf	Proc_7@Int_2_Par_Val,w
  4607  0E3B  00F6               	movwf	??_Proc_7
  4608  0E3C  0879               	movf	Proc_7@Int_Loc+1,w
  4609  0E3D  1803               	skipnc
  4610  0E3E  0A79               	incf	Proc_7@Int_Loc+1,w
  4611  0E3F  0773               	addwf	Proc_7@Int_2_Par_Val+1,w
  4612  0E40  00F7               	movwf	??_Proc_7+1
  4613  0E41  0874               	movf	Proc_7@Int_Par_Ref,w
  4614  0E42  0084               	movwf	4
  4615  0E43  1783               	bsf	3,7
  4616  0E44  1C75               	btfss	Proc_7@Int_Par_Ref+1,0
  4617  0E45  1383               	bcf	3,7
  4618  0E46  0876               	movf	??_Proc_7,w
  4619  0E47  0080               	movwf	0
  4620  0E48  0A84               	incf	4,f
  4621  0E49  0877               	movf	??_Proc_7+1,w
  4622  0E4A  0080               	movwf	0
  4623  0E4B  0008               	return
  4624  0E4C                     __end_of_Proc_7:	
  4625                           
  4626                           	psect	text19
  4627  009C                     __ptext19:	
  4628 ;; *************** function _Func_2 *****************
  4629 ;; Defined at:
  4630 ;;		line 141 in file "dhry_2.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  Str_1_Par_Re    1    wreg     PTR unsigned char 
  4633 ;;		 -> main@Str_1_Loc(31), 
  4634 ;;  Str_2_Par_Re    1    6[COMMON] PTR unsigned char 
  4635 ;;		 -> main@Str_2_Loc(31), 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  Str_1_Par_Re    1    0[BANK0 ] PTR unsigned char 
  4638 ;;		 -> main@Str_1_Loc(31), 
  4639 ;;  Int_Loc         2    2[BANK0 ] int 
  4640 ;;  Ch_Loc          1    1[BANK0 ] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  2    6[COMMON] int 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4650 ;;      Params:         2       0       0       0       0
  4651 ;;      Locals:         0       4       0       0       0
  4652 ;;      Temps:          3       0       0       0       0
  4653 ;;      Totals:         5       4       0       0       0
  4654 ;;Total ram usage:        9 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    1
  4657 ;; This function calls:
  4658 ;;		_Func_1
  4659 ;;		_strcmp
  4660 ;; This function is called by:
  4661 ;;		_main
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function _Func_2
  4667  009C                     _Func_2:	
  4668                           
  4669                           ;incstack = 0
  4670                           ; Regs used in _Func_2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4671                           ;Func_2@Str_1_Par_Ref stored from wreg
  4672  009C  1283               	bcf	3,5	;RP0=0, select bank0
  4673  009D  1303               	bcf	3,6	;RP1=0, select bank0
  4674  009E  00A0               	movwf	Func_2@Str_1_Par_Ref
  4675                           
  4676                           ;dhry_2.c: 148: Str_30 Str_2_Par_Ref;
  4677                           ;dhry_2.c: 149: {
  4678                           ;dhry_2.c: 150: One_Thirty Int_Loc;
  4679                           ;dhry_2.c: 151: Capital_Letter Ch_Loc;
  4680                           ;dhry_2.c: 153: Int_Loc = 2;
  4681  009F  3002               	movlw	2
  4682  00A0  00A2               	movwf	Func_2@Int_Loc
  4683  00A1  3000               	movlw	0
  4684  00A2  00A3               	movwf	Func_2@Int_Loc+1
  4685  00A3                     l1735:	
  4686                           ;dhry_2.c: 154: while (Int_Loc <= 2)
  4687                           
  4688  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  4689  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  4690  00A5  0823               	movf	Func_2@Int_Loc+1,w
  4691  00A6  3A80               	xorlw	128
  4692  00A7  00FF               	movwf	127
  4693  00A8  3080               	movlw	128
  4694  00A9  027F               	subwf	127,w
  4695  00AA  1D03               	skipz
  4696  00AB  28AE               	goto	u1545
  4697  00AC  3003               	movlw	3
  4698  00AD  0222               	subwf	Func_2@Int_Loc,w
  4699  00AE                     u1545:	
  4700  00AE  1803               	btfsc	3,0
  4701  00AF  28D6               	goto	l1737
  4702                           
  4703                           ;dhry_2.c: 155: if (Func_1 (Str_1_Par_Ref[Int_Loc],
  4704                           ;dhry_2.c: 156: Str_2_Par_Ref[Int_Loc+1]) == Ident_1)
  4705  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  4706  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  4707  00B2  0822               	movf	Func_2@Int_Loc,w
  4708  00B3  3E01               	addlw	1
  4709  00B4  0776               	addwf	Func_2@Str_2_Par_Ref,w
  4710  00B5  00F8               	movwf	??_Func_2
  4711  00B6  0878               	movf	??_Func_2,w
  4712  00B7  0084               	movwf	4
  4713  00B8  1383               	bcf	3,7	;select IRP bank0
  4714  00B9  0800               	movf	0,w
  4715  00BA  00F9               	movwf	??_Func_2+1
  4716  00BB  0879               	movf	??_Func_2+1,w
  4717  00BC  00F0               	movwf	Func_1@Ch_2_Par_Val
  4718  00BD  0822               	movf	Func_2@Int_Loc,w
  4719  00BE  0720               	addwf	Func_2@Str_1_Par_Ref,w
  4720  00BF  00FA               	movwf	??_Func_2+2
  4721  00C0  087A               	movf	??_Func_2+2,w
  4722  00C1  0084               	movwf	4
  4723  00C2  0800               	movf	0,w
  4724  00C3  158A  261A  118A   	fcall	_Func_1
  4725  00C6  3A00               	xorlw	0
  4726  00C7  1D03               	skipz
  4727  00C8  28A3               	goto	l1735
  4728                           
  4729                           ;dhry_2.c: 158: {
  4730                           ;dhry_2.c: 159: Ch_Loc = 'A';
  4731  00C9  3041               	movlw	65
  4732  00CA  00F8               	movwf	??_Func_2
  4733  00CB  0878               	movf	??_Func_2,w
  4734  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  4735  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  4736  00CE  00A1               	movwf	Func_2@Ch_Loc
  4737                           
  4738                           ;dhry_2.c: 160: Int_Loc += 1;
  4739  00CF  3001               	movlw	1
  4740  00D0  07A2               	addwf	Func_2@Int_Loc,f
  4741  00D1  1803               	skipnc
  4742  00D2  0AA3               	incf	Func_2@Int_Loc+1,f
  4743  00D3  3000               	movlw	0
  4744  00D4  07A3               	addwf	Func_2@Int_Loc+1,f
  4745  00D5  28A3               	goto	l1735
  4746  00D6                     l1737:	
  4747                           
  4748                           ;dhry_2.c: 161: }
  4749                           ;dhry_2.c: 162: if (Ch_Loc >= 'W' && Ch_Loc < 'Z')
  4750  00D6  3057               	movlw	87
  4751  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  4752  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  4753  00D9  0221               	subwf	Func_2@Ch_Loc,w
  4754  00DA  1C03               	skipc
  4755  00DB  28E4               	goto	l1743
  4756  00DC  305A               	movlw	90
  4757  00DD  0221               	subwf	Func_2@Ch_Loc,w
  4758  00DE  1803               	skipnc
  4759  00DF  28E4               	goto	l1743
  4760                           
  4761                           ;dhry_2.c: 164: Int_Loc = 7;
  4762  00E0  3007               	movlw	7
  4763  00E1  00A2               	movwf	Func_2@Int_Loc
  4764  00E2  3000               	movlw	0
  4765  00E3  00A3               	movwf	Func_2@Int_Loc+1
  4766  00E4                     l1743:	
  4767                           
  4768                           ;dhry_2.c: 165: if (Ch_Loc == 'R')
  4769  00E4  3052               	movlw	82
  4770  00E5  0621               	xorwf	Func_2@Ch_Loc,w
  4771  00E6  1D03               	btfss	3,2
  4772  00E7  28ED               	goto	l1751
  4773                           
  4774                           ;dhry_2.c: 167: return (1);
  4775  00E8  3001               	movlw	1
  4776  00E9  00F6               	movwf	?_Func_2
  4777  00EA  3000               	movlw	0
  4778  00EB  00F7               	movwf	?_Func_2+1
  4779  00EC  0008               	return
  4780  00ED                     l1751:	
  4781                           
  4782                           ;dhry_2.c: 168: else
  4783                           ;dhry_2.c: 169: {
  4784                           ;dhry_2.c: 170: if (strcmp (Str_1_Par_Ref, Str_2_Par_Ref) > 0)
  4785  00ED  0876               	movf	Func_2@Str_2_Par_Ref,w
  4786  00EE  00F8               	movwf	??_Func_2
  4787  00EF  0878               	movf	??_Func_2,w
  4788  00F0  00F0               	movwf	strcmp@s2
  4789  00F1  0820               	movf	Func_2@Str_1_Par_Ref,w
  4790  00F2  158A  26AC  118A   	fcall	_strcmp
  4791  00F5  0871               	movf	?_strcmp+1,w
  4792  00F6  3A80               	xorlw	128
  4793  00F7  00FF               	movwf	127
  4794  00F8  3080               	movlw	128
  4795  00F9  027F               	subwf	127,w
  4796  00FA  1D03               	skipz
  4797  00FB  28FE               	goto	u1585
  4798  00FC  3001               	movlw	1
  4799  00FD  0270               	subwf	?_strcmp,w
  4800  00FE                     u1585:	
  4801  00FE  1C03               	skipc
  4802  00FF  2911               	goto	l1759
  4803                           
  4804                           ;dhry_2.c: 172: {
  4805                           ;dhry_2.c: 173: Int_Loc += 7;
  4806  0100  3007               	movlw	7
  4807  0101  1283               	bcf	3,5	;RP0=0, select bank0
  4808  0102  1303               	bcf	3,6	;RP1=0, select bank0
  4809  0103  07A2               	addwf	Func_2@Int_Loc,f
  4810  0104  1803               	skipnc
  4811  0105  0AA3               	incf	Func_2@Int_Loc+1,f
  4812  0106  3000               	movlw	0
  4813  0107  07A3               	addwf	Func_2@Int_Loc+1,f
  4814                           
  4815                           ;dhry_2.c: 174: Int_Glob = Int_Loc;
  4816  0108  0823               	movf	Func_2@Int_Loc+1,w
  4817  0109  00DD               	movwf	_Int_Glob+1
  4818  010A  0822               	movf	Func_2@Int_Loc,w
  4819  010B  00DC               	movwf	_Int_Glob
  4820                           
  4821                           ;dhry_2.c: 175: return (1);
  4822  010C  3001               	movlw	1
  4823  010D  00F6               	movwf	?_Func_2
  4824  010E  3000               	movlw	0
  4825  010F  00F7               	movwf	?_Func_2+1
  4826                           
  4827                           ;dhry_2.c: 176: }
  4828  0110  0008               	return
  4829  0111                     l1759:	
  4830                           
  4831                           ;dhry_2.c: 177: else
  4832                           ;dhry_2.c: 178: return (0);
  4833  0111  01F6               	clrf	?_Func_2
  4834  0112  01F7               	clrf	?_Func_2+1
  4835  0113  0008               	return
  4836  0114                     __end_of_Func_2:	
  4837                           
  4838                           	psect	text20
  4839  0EAC                     __ptext20:	
  4840 ;; *************** function _strcmp *****************
  4841 ;; Defined at:
  4842 ;;		line 33 in file "D:\P\xc8\v1.44\sources\common\strcmp.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  s1              1    wreg     PTR const unsigned char 
  4845 ;;		 -> main@Str_1_Loc(31), 
  4846 ;;  s2              1    0[COMMON] PTR const unsigned char 
  4847 ;;		 -> main@Str_2_Loc(31), 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  s1              1    5[COMMON] PTR const unsigned char 
  4850 ;;		 -> main@Str_1_Loc(31), 
  4851 ;;  r               1    4[COMMON] char 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  2    0[COMMON] int 
  4854 ;; Registers used:
  4855 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4861 ;;      Params:         2       0       0       0       0
  4862 ;;      Locals:         2       0       0       0       0
  4863 ;;      Temps:          2       0       0       0       0
  4864 ;;      Totals:         6       0       0       0       0
  4865 ;;Total ram usage:        6 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_Func_2
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           
  4875                           ;psect for function _strcmp
  4876  0EAC                     _strcmp:	
  4877                           
  4878                           ;incstack = 0
  4879                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
  4880                           ;strcmp@s1 stored from wreg
  4881  0EAC  00F5               	movwf	strcmp@s1
  4882  0EAD  2EB6               	goto	l1621
  4883  0EAE                     l1617:	
  4884  0EAE  3001               	movlw	1
  4885  0EAF  00F2               	movwf	??_strcmp
  4886  0EB0  0872               	movf	??_strcmp,w
  4887  0EB1  07F5               	addwf	strcmp@s1,f
  4888  0EB2  3001               	movlw	1
  4889  0EB3  00F2               	movwf	??_strcmp
  4890  0EB4  0872               	movf	??_strcmp,w
  4891  0EB5  07F0               	addwf	strcmp@s2,f
  4892  0EB6                     l1621:	
  4893  0EB6  0875               	movf	strcmp@s1,w
  4894  0EB7  0084               	movwf	4
  4895  0EB8  1383               	bcf	3,7	;select IRP bank0
  4896  0EB9  0800               	movf	0,w
  4897  0EBA  00F2               	movwf	??_strcmp
  4898  0EBB  0870               	movf	strcmp@s2,w
  4899  0EBC  0084               	movwf	4
  4900  0EBD  0300               	decf	0,w
  4901  0EBE  3AFF               	xorlw	255
  4902  0EBF  0772               	addwf	??_strcmp,w
  4903  0EC0  00F3               	movwf	??_strcmp+1
  4904  0EC1  0873               	movf	??_strcmp+1,w
  4905  0EC2  00F4               	movwf	strcmp@r
  4906  0EC3  0874               	movf	strcmp@r,w
  4907  0EC4  1D03               	btfss	3,2
  4908  0EC5  2ECB               	goto	l1625
  4909  0EC6  0875               	movf	strcmp@s1,w
  4910  0EC7  0084               	movwf	4
  4911  0EC8  0800               	movf	0,w
  4912  0EC9  1D03               	btfss	3,2
  4913  0ECA  2EAE               	goto	l1617
  4914  0ECB                     l1625:	
  4915  0ECB  0874               	movf	strcmp@r,w
  4916  0ECC  00F0               	movwf	?_strcmp
  4917  0ECD  01F1               	clrf	?_strcmp+1
  4918  0ECE  1BF0               	btfsc	?_strcmp,7
  4919  0ECF  03F1               	decf	?_strcmp+1,f
  4920  0ED0  0008               	return
  4921  0ED1                     __end_of_strcmp:	
  4922                           
  4923                           	psect	text21
  4924  0E1A                     __ptext21:	
  4925 ;; *************** function _Func_1 *****************
  4926 ;; Defined at:
  4927 ;;		line 115 in file "dhry_2.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  Ch_1_Par_Val    1    wreg     unsigned char 
  4930 ;;  Ch_2_Par_Val    1    0[COMMON] unsigned char 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  Ch_1_Par_Val    1    2[COMMON] unsigned char 
  4933 ;;  Ch_1_Loc        1    4[COMMON] unsigned char 
  4934 ;;  Ch_2_Loc        1    3[COMMON] unsigned char 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      enum E207
  4937 ;; Registers used:
  4938 ;;		wreg
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4944 ;;      Params:         1       0       0       0       0
  4945 ;;      Locals:         3       0       0       0       0
  4946 ;;      Temps:          1       0       0       0       0
  4947 ;;      Totals:         5       0       0       0       0
  4948 ;;Total ram usage:        5 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_Func_2
  4954 ;;		_main
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           
  4959                           ;psect for function _Func_1
  4960  0E1A                     _Func_1:	
  4961                           
  4962                           ;incstack = 0
  4963                           ; Regs used in _Func_1: [wreg]
  4964                           ;Func_1@Ch_1_Par_Val stored from wreg
  4965  0E1A  00F2               	movwf	Func_1@Ch_1_Par_Val
  4966                           
  4967                           ;dhry_2.c: 123: Capital_Letter Ch_2_Par_Val;
  4968                           ;dhry_2.c: 124: {
  4969                           ;dhry_2.c: 125: Capital_Letter Ch_1_Loc;
  4970                           ;dhry_2.c: 126: Capital_Letter Ch_2_Loc;
  4971                           ;dhry_2.c: 128: Ch_1_Loc = Ch_1_Par_Val;
  4972  0E1B  0872               	movf	Func_1@Ch_1_Par_Val,w
  4973  0E1C  00F1               	movwf	??_Func_1
  4974  0E1D  0871               	movf	??_Func_1,w
  4975  0E1E  00F4               	movwf	Func_1@Ch_1_Loc
  4976                           
  4977                           ;dhry_2.c: 129: Ch_2_Loc = Ch_1_Loc;
  4978  0E1F  0874               	movf	Func_1@Ch_1_Loc,w
  4979  0E20  00F1               	movwf	??_Func_1
  4980  0E21  0871               	movf	??_Func_1,w
  4981  0E22  00F3               	movwf	Func_1@Ch_2_Loc
  4982                           
  4983                           ;dhry_2.c: 130: if (Ch_2_Loc != Ch_2_Par_Val)
  4984  0E23  0873               	movf	Func_1@Ch_2_Loc,w
  4985  0E24  0670               	xorwf	Func_1@Ch_2_Par_Val,w
  4986  0E25  1903               	skipnz
  4987  0E26  2E29               	goto	l1611
  4988                           
  4989                           ;dhry_2.c: 132: return (Ident_1);
  4990  0E27  3000               	movlw	0
  4991  0E28  0008               	return
  4992  0E29                     l1611:	
  4993                           
  4994                           ;dhry_2.c: 133: else
  4995                           ;dhry_2.c: 134: {
  4996                           ;dhry_2.c: 135: Ch_1_Glob = Ch_1_Loc;
  4997  0E29  0874               	movf	Func_1@Ch_1_Loc,w
  4998  0E2A  00F1               	movwf	??_Func_1
  4999  0E2B  0871               	movf	??_Func_1,w
  5000  0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  5001  0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  5002  0E2E  00EE               	movwf	_Ch_1_Glob^(0+128)
  5003                           
  5004                           ;dhry_2.c: 136: return (Ident_2);
  5005  0E2F  3001               	movlw	1
  5006  0E30  0008               	return
  5007  0E31                     __end_of_Func_1:	
  5008  007E                     btemp	set	126	;btemp
  5009  007E                     wtemp0	set	126


Data Sizes:
    Strings     268
    Constant    10
    Data        0
    BSS         142
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      62
    BANK1            80     74      79
    BANK3            96     37      87
    BANK2            96      0      84

Pointer List with Targets:

    temp1.Ptr_Comp.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    temp2.Ptr_Comp.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    main@Int_2_Loc.Ptr_Comp.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    main@Int_1_Loc.Ptr_Comp.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    main@Int_1_Loc.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    main@Int_2_Loc.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_5(CODE[31]), STR_4(CODE[31]), STR_2(CODE[31]), STR_1(CODE[31]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 34
		 -> main@Int_1_Loc.variant(COMMON[34]), main@Int_2_Loc.variant(COMMON[34]), temp1.variant(BANK0[34]), temp2.variant(BANK0[34]), 
		 -> NULL(NULL[0]), main@Str_2_Loc(BANK1[31]), main@Str_1_Loc(BANK0[31]), Ptr_Glob(BANK1[2]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 34
		 -> main@Int_1_Loc.variant(COMMON[34]), main@Int_2_Loc.variant(COMMON[34]), temp1.variant(BANK0[34]), temp2.variant(BANK0[34]), 
		 -> NULL(NULL[0]), main@Str_2_Loc(BANK1[31]), main@Str_1_Loc(BANK0[31]), Ptr_Glob(BANK1[2]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 31
		 -> main@Str_2_Loc(BANK1[31]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 31
		 -> main@Str_1_Loc(BANK0[31]), 

    memcpy@d1	PTR void  size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    memcpy@s1	PTR const void  size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_29(CODE[2]), STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), 
		 -> STR_25(CODE[6]), STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[6]), 
		 -> STR_21(CODE[6]), STR_20(CODE[6]), STR_19(CODE[6]), STR_18(CODE[6]), 
		 -> STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[6]), STR_14(CODE[6]), 
		 -> STR_13(CODE[6]), STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[3]), 
		 -> STR_3(CODE[2]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 37
		 -> temp2.variant.Str_Comp(BANK0[31]), temp1.variant.Str_Comp(BANK0[31]), main@Int_2_Loc.variant.Str_Comp(COMMON[31]), main@Int_1_Loc.variant.Str_Comp(COMMON[31]), 
		 -> STR_30(CODE[7]), NULL(NULL[0]), main@Str_2_Loc(BANK1[31]), main@Int_2_Loc(BANK1[2]), 
		 -> main@Int_1_Loc(BANK1[2]), main@Str_1_Loc(BANK0[31]), Ptr_Glob.variant(COMMON[34]), main@temp2(BANK1[37]), 
		 -> Next_Ptr_Glob.variant(COMMON[34]), main@temp1(BANK3[37]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    Proc_3@Ptr_Ref_Par.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Proc_3@Ptr_Ref_Par	PTR PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Proc_2@Int_Par_Ref	PTR int  size(1) Largest target is 2
		 -> main@Int_1_Loc(BANK1[2]), 

    Proc_1@Next_Record.Ptr_Comp.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    sp__memcpy	PTR void  size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Proc_1@Next_Record.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Proc_1@Ptr_Val_Par.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Proc_1@Ptr_Val_Par	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Proc_1@Next_Record	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Next_Ptr_Glob.Ptr_Comp.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 34
		 -> main@Int_1_Loc.variant(COMMON[34]), main@Int_2_Loc.variant(COMMON[34]), temp1.variant(BANK0[34]), temp2.variant(BANK0[34]), 
		 -> NULL(NULL[0]), main@Str_2_Loc(BANK1[31]), main@Str_1_Loc(BANK0[31]), Ptr_Glob(BANK1[2]), 

    Ptr_Glob.Ptr_Comp.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Ptr_Glob.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Ptr_Glob	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Next_Ptr_Glob.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Next_Ptr_Glob	PTR struct record size(1) Largest target is 37
		 -> NULL(NULL[0]), main@temp1(BANK3[37]), 

    temp2.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    S87record$Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    temp1.Ptr_Comp	PTR struct record size(2) Largest target is 37
		 -> NULL(NULL[0]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), main@temp2(BANK1[37]), 
		 -> main@temp1(BANK3[37]), 

    Func_2@Str_2_Par_Ref	PTR unsigned char  size(1) Largest target is 31
		 -> main@Str_2_Loc(BANK1[31]), 

    Func_2@Str_1_Par_Ref	PTR unsigned char  size(1) Largest target is 31
		 -> main@Str_1_Loc(BANK0[31]), 

    Proc_8@Arr_2_Par_Ref	PTR int [50] size(1) Largest target is 84
		 -> Arr_2_Glob(BANK2[84]), 

    Proc_8@Arr_1_Par_Ref	PTR int  size(1) Largest target is 50
		 -> Arr_1_Glob(BANK3[50]), 

    Proc_7@Int_Par_Ref	PTR int  size(2) Largest target is 37
		 -> main@Int_1_Loc.variant(COMMON[34]), main@Int_2_Loc.variant(COMMON[34]), temp1.variant(BANK0[34]), temp2.variant(BANK0[34]), 
		 -> NULL(NULL[0]), main@Int_3_Loc(BANK1[2]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), 
		 -> main@temp2(BANK1[37]), Ptr_Glob(BANK1[2]), main@temp1(BANK3[37]), 

    Proc_6@Enum_Ref_Par	PTR enum E207 size(2) Largest target is 37
		 -> main@Int_1_Loc.variant(COMMON[34]), main@Int_2_Loc.variant(COMMON[34]), temp1.variant(BANK0[34]), temp2.variant(BANK0[34]), 
		 -> NULL(NULL[0]), main@Enum_Loc(BANK0[1]), main@Int_2_Loc(BANK1[2]), main@Int_1_Loc(BANK1[2]), 
		 -> main@temp2(BANK1[37]), main@temp1(BANK3[37]), 


Critical Paths under _main in COMMON

    _main->_Proc_8
    _printf->___lwmod
    ___lwmod->___lwdiv
    _Proc_8->___bmul
    _Proc_1->_Proc_3
    _Proc_6->_Func_3
    _Proc_3->_Proc_7
    _Func_2->_strcmp

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               152   152      0   17520
                                             15 BANK0     41    41      0
                                              0 BANK1     74    74      0
                                              0 BANK3     37    37      0
                             _Func_1
                             _Func_2
                             _Proc_1
                             _Proc_2
                             _Proc_4
                             _Proc_5
                             _Proc_6
                             _Proc_7
                             _Proc_8
                            ___awdiv
                             ___wmul
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               7     3      4     697
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    4290
                                              0 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                5     5      0      34
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     440
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     449
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     922
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     653
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Proc_8                                              18    13      5    1533
                                              4 COMMON    10     5      5
                                              0 BANK0      8     8      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     367
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Proc_5                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Proc_4                                               4     4      0      34
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Proc_2                                               8     8      0     172
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _Proc_1                                              10     8      2    4066
                                              0 BANK0     10     8      2
                             _Proc_3
                             _Proc_6
                             _Proc_7
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              12     6      6     710
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (1) _Proc_6                                               4     2      2     583
                                              5 COMMON     4     2      2
                             _Func_3
 ---------------------------------------------------------------------------------
 (2) _Func_3                                               5     3      2      65
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _Proc_3                                               4     2      2    1137
                                             10 COMMON     4     2      2
                             _Proc_7
 ---------------------------------------------------------------------------------
 (1) _Proc_7                                              10     4      6    1063
                                              0 COMMON    10     4      6
 ---------------------------------------------------------------------------------
 (1) _Func_2                                               9     7      2    1144
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             _Func_1
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     4      2     276
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _Func_1                                               5     4      1     369
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Func_1
   _Func_2
     _Func_1
     _strcmp
   _Proc_1
     _Proc_3
       _Proc_7
     _Proc_6
       _Func_3
     _Proc_7
     _memcpy
   _Proc_2
   _Proc_4
   _Proc_5
   _Proc_6
     _Func_3
   _Proc_7
   _Proc_8
     ___bmul
   ___awdiv
   ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     146       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      3E       5       77.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     4A      4F       7       98.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60     25      57       9       90.6%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      54      11       87.5%
DATA                 0      0     146      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun May 06 01:57:09 2018

                      pc 0002           ___bmul@product 0072                       l21 009B  
           ___awdiv@sign 0076                       fsr 0004      ___wmul@multiplicand 0072  
    Proc_8@Arr_1_Par_Ref 007B      Proc_8@Arr_2_Par_Ref 0074             main@Enum_Loc 0057  
                    l171 03E1                      l255 0E74                      _Reg 0058  
                    fsr0 0004                      indf 0000            main@Int_1_Loc 00E8  
          main@Int_2_Loc 00E6            main@Int_3_Loc 00BF                     l2001 0544  
                   l2011 05F4                     l2003 0582                     l2009 047F  
                   l1601 008A                     l1611 0E29                     l1621 0EB6  
                   l1701 0027                     l1625 0ECB                     l1617 0EAE  
                   l1705 0032                     l1723 0156                     l1645 0F1A  
                   l1573 0E06                     l1653 0E11                     l1725 018C  
                   l1901 0FB1                     l1821 039B                     l1751 00ED  
                   l1743 00E4                     l1735 00A3                     l1639 0ED9  
                   l1671 0F73                     l1831 03A9                     l1815 037A  
                   l1737 00D6                     l1593 006E                     l1649 0E0B  
                   l1673 0F81                     l1825 03A3                     l1809 0374  
                   l1833 02D7                     l1595 0078                     l1587 0053  
                   l1907 0FBC                     l1683 0FA2                     l1597 0080  
                   l1589 005A                     l1933 0FFB                     l1925 0FE8  
                   l1917 0FC4                     l1773 02F6                     l1765 0E8F  
                   l1759 0111                     l1919 0FD2                     l1679 0F97  
                   l1695 000B                     l1775 02FA                     l1865 02B9  
                   l1929 0FF3                     l1881 0E6C                     l1697 0019  
                   l1793 0335                     l1787 030F                     l1877 0F67  
                   l1869 0F41                     l1789 032A                     l1797 033A  
                   l1799 035B                     l1983 04C1                     l1985 051B  
                   l1999 057D                     STR_1 085A                     STR_2 0879  
                   STR_3 0926                     STR_4 081C                     STR_5 083B  
                   STR_6 0923                     STR_7 08AB                     STR_8 08B1  
                   STR_9 089F                     u1315 0065                     u1405 0F76  
                   u1425 0F82                     u1505 0028                     u1435 0F8E  
                   u1700 0E54                     u1525 0168                     u1445 0F98  
                   u1710 0E55                     u1545 00AE                     u1475 000E  
                   u1900 04B9                     u1495 001F                     u1655 0391  
                   u1585 00FE                     u1825 0FC7                     u1915 04D5  
                   u1845 0FD3                     u1765 0E75                     u1855 0FDF  
                   u1775 0E7C                     u1865 0FE9                     u1945 0489  
                   u1890 04B8                     _main 03E2                     btemp 007E  
             _Arr_1_Glob 0190               _Arr_2_Glob 0110                     start 0000  
           Func_2@Ch_Loc 0021        ___bmul@multiplier 0073                    ?_main 0070  
        __end_of___awdiv 1000                    STR_10 08A5                    STR_11 08B7  
                  STR_20 08E7                    STR_12 08BD                    STR_21 08ED  
                  STR_13 08C3                    STR_22 0911                    STR_14 08C9  
                  STR_30 0898                    STR_23 08F3                    STR_15 08CF  
                  STR_24 08F9                    STR_16 08D5                    STR_17 090B  
                  STR_25 08FF            __CFG_WDTE$OFF 0000                    STR_26 0905  
                  STR_18 08DB                    STR_27 0917                    STR_19 08E1  
                  STR_28 091D                    STR_29 0924          ___awdiv@divisor 0070  
        __end_of___lwdiv 0FA7          __end_of___lwmod 0037          ___awdiv@counter 0075  
          main@Str_1_Loc 0033            main@Str_2_Loc 00A0            main@Run_Index 0055  
        __end_of_dpowers 081C                    _putch 0DE4                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E6  
           __end_of_main 07E6            Func_2@Int_Loc 0022                   ??_main 002F  
       ___awdiv@dividend 0072                   ?_putch 0070      Proc_7@Int_1_Par_Val 0070  
    Proc_7@Int_2_Par_Val 0072                   _Func_1 0E1A                   _Func_2 009C  
                 _Func_3 0DF8                   _Proc_1 01D2                   _Proc_2 0F30  
                 _Proc_3 0EFF                   _Proc_4 0E4C                   _Proc_5 0DED  
                 _Proc_6 0037                   _Proc_7 0E31                   _Proc_8 0114  
                 ___bmul 0E09                   ___wmul 0E6A                ??___awdiv 0074  
              ??___lwdiv 0074                ??___lwmod 007C                   _memcpy 0ED1  
       ___awdiv@quotient 0077                   _printf 02D1                   _strcmp 0EAC  
                 _strcpy 0E8B           Func_1@Ch_1_Loc 0074           Func_1@Ch_2_Loc 0073  
                 putch@c 0072        Proc_2@Int_Par_Ref 0077  __end_of__initialization 07FD  
      Proc_1@Next_Record 0028      ___bmul@multiplicand 0070           __pcstackCOMMON 0070  
          __end_of_putch 0DED           Func_3@Enum_Loc 0074                  ??_putch 0070  
             __pbssBANK0 0058               __pbssBANK1 00ED               __pbssBANK2 0110  
             __pbssBANK3 0190            Proc_2@Int_Loc 0075                  ?_Func_1 0070  
                ?_Func_2 0076                  ?_Func_3 0070                  ?_Proc_1 0020  
                ?_Proc_2 0070                  ?_Proc_3 007A                  ?_Proc_4 0070  
                ?_Proc_5 0070                  ?_Proc_6 0075                  ?_Proc_7 0070  
                ?_Proc_8 0074               __pmaintext 03E2                  ?___bmul 0070  
                ?___wmul 0070        Proc_1@Ptr_Val_Par 0020                  ?_memcpy 0070  
          Proc_7@Int_Loc 0078                  ?_printf 0020            Proc_8@Int_Loc 007C  
                ?_strcmp 0070                  ?_strcpy 0070               __stringtab 0800  
          _Next_Ptr_Glob 00EA          __size_of_Func_1 0017          __size_of_Func_2 0078  
        __size_of_Func_3 0011          __size_of_Proc_1 00FF          __size_of_Proc_2 003B  
        __size_of_Proc_3 0031          __size_of_Proc_4 001E          __size_of_Proc_5 000B  
        __size_of_Proc_6 0065          __size_of_Proc_7 001B          __size_of_Proc_8 00BE  
        __size_of___bmul 0011                  ___awdiv 0FA7          __size_of___wmul 0021  
                ___lwdiv 0F6B                  ___lwmod 0005          Proc_8@Int_Index 0079  
        __size_of_memcpy 002E                  __ptext1 0E8B                  __ptext2 02D1  
                __ptext3 0DE4                  __ptext4 0005                  __ptext5 0F6B  
                __ptext6 0E6A                  __ptext7 0FA7                  __ptext8 0114  
                __ptext9 0E09          __size_of_printf 0111          __size_of_strcmp 0025  
        __size_of_strcpy 0021                  _dpowers 0812                  clrloop0 0DDD  
   end_of_initialization 07FD                  memcpy@d 0078                  memcpy@n 0074  
                memcpy@s 007A      Proc_8@Int_1_Par_Val 0075      Proc_8@Int_2_Par_Val 0077  
                printf@c 002E                  printf@f 0020             __pstringtext 0800  
      Proc_3@Ptr_Ref_Par 007A                  strcmp@r 0074                _Ch_1_Glob 00EE  
              _Ch_2_Glob 00ED           __end_of_Func_1 0E31           __end_of_Func_2 0114  
         __end_of_Func_3 0E09           __end_of_Proc_1 02D1           __end_of_Proc_2 0F6B  
         __end_of_Proc_3 0F30           __end_of_Proc_4 0E6A           __end_of_Proc_5 0DF8  
         __end_of_Proc_6 009C           __end_of_Proc_7 0E4C           __end_of_Proc_8 01D2  
              _Bool_Glob 005A           __end_of___bmul 0E1A           __end_of___wmul 0E8B  
         __end_of_memcpy 0EFF           __end_of_printf 03E2           __end_of_strcmp 0ED1  
         __end_of_strcpy 0EAC      start_initialization 07E6        Proc_7@Int_Par_Ref 0074  
               ??_Func_1 0071                 ??_Func_2 0078                 ??_Func_3 0072  
               ??_Proc_1 0022                 ??_Proc_2 0070                 ??_Proc_3 007C  
               ??_Proc_4 0070                 ??_Proc_5 0070                 ??_Proc_6 0077  
               ??_Proc_7 0076                 ??_Proc_8 0020                 ??___bmul 0071  
               ??___wmul 0074                 ??_memcpy 0076                 ??_printf 0024  
               ??_strcmp 0072                 ??_strcpy 0074                ___latbits 0001  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK3 01C2  
         Proc_2@Enum_Loc 0074       Func_3@Enum_Par_Val 0073                __pnvBANK1 00EA  
         Proc_4@Bool_Loc 0072         ___lwdiv@dividend 0072                 ?___awdiv 0070  
               ?___lwdiv 0070                 ?___lwmod 0078         ___lwdiv@quotient 0076  
         __size_of_putch 0009           ___wmul@product 0074                clear_ram0 0DDC  
            __stringbase 0812       main@Number_Of_Runs 0052        ___wmul@multiplier 0070  
             printf@flag 0027               printf@prec 0028                main@temp1 01C2  
              main@temp2 00C1               putch@PORTB 0073       Func_1@Ch_1_Par_Val 0072  
     Func_1@Ch_2_Par_Val 0070                 _Int_Glob 005C                memcpy@tmp 0077  
               _Ptr_Glob 00EB         __size_of___awdiv 0059         __size_of___lwdiv 003C  
       __size_of___lwmod 0032       __end_of__stringtab 0812          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0075                 __ptext10 0DED                 __ptext11 0E4C  
               __ptext20 0EAC                 __ptext12 0F30                 __ptext21 0E1A  
               __ptext13 01D2                 __ptext14 0ED1                 __ptext15 0037  
               __ptext16 0DF8                 __ptext17 0EFF                 __ptext18 0E31  
               __ptext19 009C      Func_2@Str_1_Par_Ref 0020      Func_2@Str_2_Par_Ref 0076  
             strcpy@from 0072            __size_of_main 0404                printf@val 002C  
               memcpy@d1 0070                 memcpy@s1 0072         ___lwmod@dividend 007A  
              stringcode 080A                 printf@ap 002B                 printf@cp 0029  
               strcmp@s1 0075                 strcmp@s2 0070          ___lwmod@divisor 0078  
               strcpy@cp 0075                 strcpy@to 0070          ___lwmod@counter 007D  
               stringtab 0800       Proc_6@Enum_Ref_Par 0075       Proc_6@Enum_Val_Par 0078  
           main@Ch_Index 0054  
